
> nextn@0.1.0 dev
> npm run kill && npm run dev:start


> nextn@0.1.0 kill
> pkill -f 'next-server' || true; pkill -f 'genkit' || true; pkill -f 'firebase-tools' || true; pkill -f 'java.*firestore' || true; lsof -ti:9002,4000,9099,8080,5001,5002,4400,4500,9150 | xargs kill -9 2>/dev/null || true; echo '✅ All servers and emulators killed'

✅ All servers and emulators killed

> nextn@0.1.0 dev:start
> NEXT_PUBLIC_DEMO_MODE=true NEXT_PUBLIC_USE_FIREBASE_EMULATOR=false DEBUG=genkit*,ai*,google* GENKIT_LOG_LEVEL=debug next dev -p 9002 2>&1 | tee -a logs/nextjs-dev.log

Debugger listening on ws://127.0.0.1:9230/80638d37-fc8f-4db3-8462-a8cddf229b4b
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1371ms
 ○ Compiling / ...
 ✓ Compiled / in 1629ms (1212 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:28:20.018Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET / 200 in 2158ms
 ✓ Compiled in 622ms (454 modules)
 ✓ Compiled /w/[shortName]/new in 431ms (1328 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:57:35.403Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:57:35.505Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'poem' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'poem',
  workflowId: 'poem-generator',
  workflowName: 'Poem Generator'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'poem',
  documentId: 'mbxfmr6mw6pep99',
  workflowId: 'poem-generator'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Poem Generator',
  workflowId: 'poem-generator',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749977855518_bl7hbru3v',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749977855518_bl7hbru3v',
  title: 'New Poem Generator',
  workflowId: 'poem-generator',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 183
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'uUDTJo5UCxMUEaAIix5e',
  path: 'documents/uUDTJo5UCxMUEaAIix5e'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'uUDTJo5UCxMUEaAIix5e',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:57:35.659Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'uUDTJo5UCxMUEaAIix5e' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'uUDTJo5UCxMUEaAIix5e' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'uUDTJo5UCxMUEaAIix5e',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'uUDTJo5UCxMUEaAIix5e' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'uUDTJo5UCxMUEaAIix5e',
  error: undefined,
  originalId: 'mbxfmr6mw6pep99'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxfmr6mw6pep99',
  createdId: 'uUDTJo5UCxMUEaAIix5e',
  workflowId: 'poem-generator'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/poem/uUDTJo5UCxMUEaAIix5e' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/poem/new 307 in 1770ms
 ✓ Compiled / in 112ms (904 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:57:57.147Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET / 200 in 323ms
 ○ Compiling /dashboard ...
 ✓ Compiled /dashboard in 593ms (1395 modules)
 GET /dashboard 200 in 644ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:58:03.205Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'poem' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'poem',
  workflowId: 'poem-generator',
  workflowName: 'Poem Generator'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'poem',
  documentId: 'mbxfncjswubo0d2',
  workflowId: 'poem-generator'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Poem Generator',
  workflowId: 'poem-generator',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749977883209_ljpwh3nay',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749977883209_ljpwh3nay',
  title: 'New Poem Generator',
  workflowId: 'poem-generator',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 183
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'RgfMlL9WPQw6GQ9HsZjv',
  path: 'documents/RgfMlL9WPQw6GQ9HsZjv'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'RgfMlL9WPQw6GQ9HsZjv',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:58:03.549Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'RgfMlL9WPQw6GQ9HsZjv',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  error: undefined,
  originalId: 'mbxfncjswubo0d2'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxfncjswubo0d2',
  createdId: 'RgfMlL9WPQw6GQ9HsZjv',
  workflowId: 'poem-generator'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/poem/RgfMlL9WPQw6GQ9HsZjv' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/poem/new 200 in 746ms
 ○ Compiling /w/[shortName]/[documentId] ...
 ✓ Compiled /w/[shortName]/[documentId] in 734ms (2199 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:58:05.054Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:58:05.096Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'poem', documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[WizardPage] Loading existing document: RgfMlL9WPQw6GQ9HsZjv
[DocumentPersistence] Loading document { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[WizardPage] Starting page load { shortName: 'poem', documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[WizardPage] Loading existing document: RgfMlL9WPQw6GQ9HsZjv
[DocumentPersistence] Loading document { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'New Poem Generator',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'New Poem Generator',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'New Poem Generator',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'New Poem Generator',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/poem/RgfMlL9WPQw6GQ9HsZjv 200 in 1539ms
 GET /w/poem/RgfMlL9WPQw6GQ9HsZjv 200 in 263ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:58:05.579Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ○ Compiling /api/wizard/execute ...
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ✓ Compiled /api/wizard/execute in 786ms (2371 modules)
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Structured JSON Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 406,
  temperature: 0.8,
  schema: '{"type":"object","properties":{"title":{"type":"string","description":"Poem Title"},"poem":{"type":"...',
  systemInstruction: 'undefined...'
}
 ○ Compiling /api/documents/save ...
📥 [AI RESPONSE] Structured JSON Generation: {
  textLength: 633,
  parsedKeys: [ 'poem', 'title' ],
  preview: '{"poem":"A challenge laid, a path unseen,\\nA trial set, where hopes convene.\\nTo measure strength, to gauge the mind,\\nA proving ground, for all mankind.\\n\\nWith anxious heart and hurried breath,\\nWe ...'
}
 POST /api/wizard/execute 200 in 2895ms
 ✓ Compiled /api/documents/save in 1184ms (2373 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:58:12.300Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'New Poem Generator',
  workflowId: 'poem-generator',
  stageStatesKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  stageStatesCount: 4,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  originalCount: 4,
  cleanedKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  cleanedCount: 4
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] Document updated successfully { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
 POST /api/documents/save 200 in 1833ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'The Crucible of Knowing',
  workflowId: 'poem-generator',
  stageStatesKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  stageStatesCount: 4,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  originalCount: 4,
  cleanedKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  cleanedCount: 4
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] Document updated successfully { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
 POST /api/documents/save 200 in 237ms
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 1136,
  temperature: 0.3,
  systemInstruction: 'undefined...'
}
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'The Crucible of Knowing',
  workflowId: 'poem-generator',
  stageStatesKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  stageStatesCount: 4,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  originalCount: 4,
  cleanedKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  cleanedCount: 4
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] Document updated successfully { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
 POST /api/documents/save 200 in 272ms
📥 [AI RESPONSE] Text Generation: {
  textLength: 1844,
  textPreview: '```html\n' +
    '<!DOCTYPE html>\n' +
    '<html lang="en">\n' +
    '<head>\n' +
    '    <meta charset="UTF-8">\n' +
    '    <meta name="viewport"...',
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 3011ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'The Crucible of Knowing',
  workflowId: 'poem-generator',
  stageStatesKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  stageStatesCount: 4,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  originalCount: 4,
  cleanedKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  cleanedCount: 4
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] Document updated successfully { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
 POST /api/documents/save 200 in 231ms
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 1194,
  temperature: 0.3,
  systemInstruction: 'undefined...'
}
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'The Crucible of Knowing',
  workflowId: 'poem-generator',
  stageStatesKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  stageStatesCount: 4,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  originalCount: 4,
  cleanedKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  cleanedCount: 4
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] Document updated successfully { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
 POST /api/documents/save 200 in 213ms
📥 [AI RESPONSE] Text Generation: {
  textLength: 2552,
  textPreview: '```html\n' +
    '<!DOCTYPE html>\n' +
    '<html lang="en">\n' +
    '<head>\n' +
    '    <meta charset="UTF-8">\n' +
    '    <meta name="viewport"...',
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 3768ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'The Crucible of Knowing',
  workflowId: 'poem-generator',
  stageStatesKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  stageStatesCount: 4,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  originalCount: 4,
  cleanedKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  cleanedCount: 4
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] Document updated successfully { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
 POST /api/documents/save 200 in 307ms
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 1228,
  temperature: 0.3,
  systemInstruction: 'undefined...'
}
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'The Crucible of Knowing',
  workflowId: 'poem-generator',
  stageStatesKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  stageStatesCount: 4,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  originalCount: 4,
  cleanedKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  cleanedCount: 4
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] Document updated successfully { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
 POST /api/documents/save 200 in 302ms
📥 [AI RESPONSE] Text Generation: {
  textLength: 1764,
  textPreview: '```html\n' +
    '<!DOCTYPE html>\n' +
    '<html lang="en">\n' +
    '<head>\n' +
    '    <meta charset="UTF-8">\n' +
    '    <meta name="viewport"...',
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 3179ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'RgfMlL9WPQw6GQ9HsZjv',
  title: 'The Crucible of Knowing',
  workflowId: 'poem-generator',
  stageStatesKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  stageStatesCount: 4,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  originalCount: 4,
  cleanedKeys: [
    'poem-topic',
    'generate-poem-with-title',
    'html-briefing',
    'generate-html-preview'
  ],
  cleanedCount: 4
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'RgfMlL9WPQw6GQ9HsZjv' }
[DocumentPersistence] Document updated successfully { documentId: 'RgfMlL9WPQw6GQ9HsZjv' }
 POST /api/documents/save 200 in 179ms
 GET /dashboard 200 in 78ms
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mbxfp1rfwnn7cqj',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749977962540_0b6t1d7r1',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749977962540_0b6t1d7r1',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: '4uhVu0tEOLwcmnAA2wdv',
  path: 'documents/4uhVu0tEOLwcmnAA2wdv'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: '4uhVu0tEOLwcmnAA2wdv',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document created { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: '4uhVu0tEOLwcmnAA2wdv',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  error: undefined,
  originalId: 'mbxfp1rfwnn7cqj'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxfp1rfwnn7cqj',
  createdId: '4uhVu0tEOLwcmnAA2wdv',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/4uhVu0tEOLwcmnAA2wdv' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 183ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 116ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 91ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:59:23.029Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T08:59:23.203Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 208ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 190ms
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 275,
  temperature: 0.7,
  systemInstruction: 'You have Google Search grounding enabled. Use it to find current, up-to-date information. Do NOT gen...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 450,
  textPreview: 'Okay, I will use Google Search to find out what happened in Austria Vienna yesterday (October 12, 20...',
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 1159ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 189ms
[runAiStage] Starting with new SDK
Prompt variable '{{userInput.url}}' not found in context. Replacing with empty string.
Prompt variable '{{userInput.question}}' not found in context. Replacing with empty string.
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash-exp',
  promptLength: 38,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 747,
  textPreview: 'Please provide the content you would like me to analyze. I need the text or document you are referri...',
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 1493ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 217ms
[runAiStage] Starting with new SDK
Prompt variable '{{userInput}}' not found in context. Replacing with empty string.
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash-thinking-exp',
  promptLength: 33,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
📥 [AI RESPONSE] Text Generation: {
  textLength: 136,
  textPreview: 'Please provide the problem you would like me to solve.\n' +
    '\n' +
    'Once you provide the problem, I will be happ...',
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 2086ms
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 226ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 257ms
[runAiStage] Starting with new SDK
Prompt variable '{{userInput}}' not found in context. Replacing with empty string.
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash-exp',
  promptLength: 70,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 317,
  textPreview: "Okay, I'm ready. Just tell me what you want me to calculate. Please provide the mathematical operati...",
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 1256ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 218ms
[runAiStage] Starting with new SDK
Prompt variable '{{userInput}}' not found in context. Replacing with empty string.
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash-exp',
  promptLength: 78,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 234,
  textPreview: "Okay, I'm ready. Please tell me the locations you'd like me to get weather information for. I'll use...",
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 1006ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 277ms
[runAiStage] Starting with new SDK
Prompt variable '{{userInput}}' not found in context. Replacing with empty string.
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash-exp',
  promptLength: 100,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 620,
  textPreview: "Okay, let's break down the task and provide Python code with explanations.  Please specify the task ...",
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 1490ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 310ms
[runAiStage] Starting with new SDK
Prompt variable '{{userInput}}' not found in context. Replacing with empty string.
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash-exp',
  promptLength: 45,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 217ms
[runAiStage] Starting with new SDK
Prompt variable '{{userInput}}' not found in context. Replacing with empty string.
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash-exp',
  promptLength: 13,
  temperature: 0.7,
  systemInstruction: 'You are a helpful AI assistant in a test environment. Be conversational and remember context from pr...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 345,
  textPreview: 'Please provide me with the user input! I need the text from `{{userInput}}` to be able to respond to...',
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 1008ms
📥 [AI RESPONSE] Text Generation: {
  textLength: 15180,
  textPreview: "Okay, I understand. You're asking me to provide a **detailed and comprehensive response** to...well,...",
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 16574ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 261ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 235ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Structured JSON Generation: {
  model: 'gemini-2.0-flash-exp',
  promptLength: 241,
  temperature: 0.7,
  schema: '{"type":"object","properties":{"content":{"type":"string"}}}...',
  systemInstruction: 'undefined...'
}
[2025-06-15T09:02:22.785Z]  @firebase/firestore: Firestore (11.9.0): GrpcConnection RPC 'Write' stream 0x4ba45f92 error. Code: 3 Message: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
[FirestoreAdapter] FAILED: updateDocument 4uhVu0tEOLwcmnAA2wdv in documents [Error [FirebaseError]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.] {
  code: 'invalid-argument',
  customData: undefined,
  toString: [Function (anonymous)]
}
[DocumentPersistence] STEP ERROR: Save operation failed {
  error: 'FATAL: Failed to update document 4uhVu0tEOLwcmnAA2wdv in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.',
  errorType: 'Error',
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stack: 'Error: FATAL: Failed to update document 4uhVu0tEOLwcmnAA2wdv in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.\n' +
    '    at FirestoreAdapter.updateDocument (webpack-internal:///(rsc)/./src/lib/firestore-adapter.ts:105:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async DocumentPersistenceManager.saveDocument (webpack-internal:///(rsc)/./src/lib/document-persistence.ts:217:17)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/documents/save/route.ts:39:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
[DocumentPersistence] FAILED: saveDocument Error: FATAL: Failed to update document 4uhVu0tEOLwcmnAA2wdv in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
    at FirestoreAdapter.updateDocument (src/lib/firestore-adapter.ts:127:12)
    at async DocumentPersistenceManager.saveDocument (src/lib/document-persistence.ts:256:8)
    at async POST (src/app/api/documents/save/route.ts:33:19)
  125 |     } catch (error) {
  126 |       this.logError(`updateDocument ${documentId} in ${collectionName}`, error);
> 127 |       throw new Error(`FATAL: Failed to update document ${documentId} in ${collectionName}: ${error}`);
      |            ^
  128 |     }
  129 |   }
  130 |
 POST /api/documents/save 200 in 1881ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
📥 [AI RESPONSE] Structured JSON Generation: {
  textLength: 835,
  parsedKeys: [ 'content' ],
  preview: '{"content":"{\\"description\\": \\"A close-up shot of a plate of colorful sushi. The sushi includes a variety of rolls with different fillings and toppings, such as salmon, tuna, avocado, and sesame seed...'
}
 POST /api/wizard/execute 200 in 2650ms
[2025-06-15T09:02:25.492Z]  @firebase/firestore: Firestore (11.9.0): GrpcConnection RPC 'Write' stream 0x4ba45f93 error. Code: 3 Message: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
[FirestoreAdapter] FAILED: updateDocument 4uhVu0tEOLwcmnAA2wdv in documents [Error [FirebaseError]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.] {
  code: 'invalid-argument',
  customData: undefined,
  toString: [Function (anonymous)]
}
[DocumentPersistence] STEP ERROR: Save operation failed {
  error: 'FATAL: Failed to update document 4uhVu0tEOLwcmnAA2wdv in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.',
  errorType: 'Error',
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stack: 'Error: FATAL: Failed to update document 4uhVu0tEOLwcmnAA2wdv in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.\n' +
    '    at FirestoreAdapter.updateDocument (webpack-internal:///(rsc)/./src/lib/firestore-adapter.ts:105:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async DocumentPersistenceManager.saveDocument (webpack-internal:///(rsc)/./src/lib/document-persistence.ts:217:17)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/documents/save/route.ts:39:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
[DocumentPersistence] FAILED: saveDocument Error: FATAL: Failed to update document 4uhVu0tEOLwcmnAA2wdv in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
    at FirestoreAdapter.updateDocument (src/lib/firestore-adapter.ts:127:12)
    at async DocumentPersistenceManager.saveDocument (src/lib/document-persistence.ts:256:8)
    at async POST (src/app/api/documents/save/route.ts:33:19)
  125 |     } catch (error) {
  126 |       this.logError(`updateDocument ${documentId} in ${collectionName}`, error);
> 127 |       throw new Error(`FATAL: Failed to update document ${documentId} in ${collectionName}: ${error}`);
      |            ^
  128 |     }
  129 |   }
  130 |
 POST /api/documents/save 200 in 1820ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[2025-06-15T09:02:28.177Z]  @firebase/firestore: Firestore (11.9.0): GrpcConnection RPC 'Write' stream 0x4ba45f94 error. Code: 3 Message: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
[FirestoreAdapter] FAILED: updateDocument 4uhVu0tEOLwcmnAA2wdv in documents [Error [FirebaseError]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.] {
  code: 'invalid-argument',
  customData: undefined,
  toString: [Function (anonymous)]
}
[DocumentPersistence] STEP ERROR: Save operation failed {
  error: 'FATAL: Failed to update document 4uhVu0tEOLwcmnAA2wdv in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.',
  errorType: 'Error',
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stack: 'Error: FATAL: Failed to update document 4uhVu0tEOLwcmnAA2wdv in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.\n' +
    '    at FirestoreAdapter.updateDocument (webpack-internal:///(rsc)/./src/lib/firestore-adapter.ts:105:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async DocumentPersistenceManager.saveDocument (webpack-internal:///(rsc)/./src/lib/document-persistence.ts:217:17)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/documents/save/route.ts:39:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
[DocumentPersistence] FAILED: saveDocument Error: FATAL: Failed to update document 4uhVu0tEOLwcmnAA2wdv in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
    at FirestoreAdapter.updateDocument (src/lib/firestore-adapter.ts:127:12)
    at async DocumentPersistenceManager.saveDocument (src/lib/document-persistence.ts:256:8)
    at async POST (src/app/api/documents/save/route.ts:33:19)
  125 |     } catch (error) {
  126 |       this.logError(`updateDocument ${documentId} in ${collectionName}`, error);
> 127 |       throw new Error(`FATAL: Failed to update document ${documentId} in ${collectionName}: ${error}`);
      |            ^
  128 |     }
  129 |   }
  130 |
 POST /api/documents/save 200 in 1808ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:12:49.116Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'document-understanding-test',
    'thinking-mode-test',
    'final-summary',
    'function-calling-unit-converter',
    'image-understanding-test',
    'function-calling-calculator',
    'test-title',
    'grounding-url-context',
    'streaming-test',
    'code-execution-python',
    'combined-features-test',
    'chat-mode-test',
    'function-calling-weather',
    'grounding-google-search'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'document-understanding-test',
    'thinking-mode-test',
    'final-summary',
    'function-calling-unit-converter',
    'image-understanding-test',
    'function-calling-calculator',
    'test-title',
    'grounding-url-context',
    'streaming-test',
    'code-execution-python',
    'combined-features-test',
    'chat-mode-test',
    'function-calling-weather',
    'grounding-google-search'
  ]
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 496ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:12:49.707Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /favicon.ico in 259ms (1338 modules)
 GET /favicon.ico 200 in 342ms
 ✓ Compiled /api/documents/save in 142ms (1340 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:12:52.572Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 1061ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 364ms
sh: line 1: 60305 Terminated: 15          npm run dev:start
Debugger listening on ws://127.0.0.1:9229/2cee875f-0500-44d8-899e-8871af8d447d
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 2716246,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/fabfa947-cadc-45e0-94e3-c3f8bc517895
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1572ms
 ○ Compiling /api/wizard/execute ...
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ✓ Compiled /api/wizard/execute in 934ms (586 modules)
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 329,
  temperature: 0.7,
  systemInstruction: 'You have Google Search grounding enabled. Use it to find current, up-to-date information. Do NOT gen...'
}
 ○ Compiling /api/documents/save ...
 ✓ Compiled /api/documents/save in 873ms (720 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:16:18.384Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
📥 [AI RESPONSE] Text Generation: {
  textLength: 954,
  textPreview: 'Okay, I will use Google Search to find out what happened in Austria Vienna yesterday and provide you...',
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 3193ms
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 1607ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 303ms
 ✓ Compiled in 33ms
 ○ Compiling /w/[shortName]/new ...
 ✓ Compiled /w/[shortName]/new in 1428ms (1341 modules)
 ✓ Compiled in 244ms (454 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:23:06.198Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:23:06.297Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'poem' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'poem',
  workflowId: 'poem-generator',
  workflowName: 'Poem Generator'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'poem',
  documentId: 'mbxgjkcnw979wpn',
  workflowId: 'poem-generator'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Poem Generator',
  workflowId: 'poem-generator',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749979386312_t3ikxi3kz',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749979386312_t3ikxi3kz',
  title: 'New Poem Generator',
  workflowId: 'poem-generator',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 183
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'OqhhKBowk4Poo2yZT9aa',
  path: 'documents/OqhhKBowk4Poo2yZT9aa'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'OqhhKBowk4Poo2yZT9aa',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:23:06.462Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'OqhhKBowk4Poo2yZT9aa' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'OqhhKBowk4Poo2yZT9aa' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'OqhhKBowk4Poo2yZT9aa',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'OqhhKBowk4Poo2yZT9aa' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'OqhhKBowk4Poo2yZT9aa',
  error: undefined,
  originalId: 'mbxgjkcnw979wpn'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxgjkcnw979wpn',
  createdId: 'OqhhKBowk4Poo2yZT9aa',
  workflowId: 'poem-generator'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/poem/OqhhKBowk4Poo2yZT9aa' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/poem/new 307 in 2787ms
 ✓ Compiled /api/wizard/execute in 155ms (1062 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 0,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 542,
  textPreview: "Please provide me with more context! I need to know what you'd like me to do. For example, are you a...",
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 1813ms
 ○ Compiling /w/[shortName]/[documentId] ...
 ✓ Compiled /w/[shortName]/[documentId] in 1263ms (2311 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:24:28.757Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:24:28.864Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:24:29.012Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'final-summary',
    'code-execution-python',
    'document-understanding-test',
    'image-understanding-test',
    'grounding-google-search',
    'test-title',
    'function-calling-calculator',
    'streaming-test',
    'thinking-mode-test',
    'function-calling-weather',
    'combined-features-test',
    'function-calling-unit-converter',
    'chat-mode-test',
    'grounding-url-context'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'final-summary',
    'code-execution-python',
    'document-understanding-test',
    'image-understanding-test',
    'grounding-google-search',
    'test-title',
    'function-calling-calculator',
    'streaming-test',
    'thinking-mode-test',
    'function-calling-weather',
    'combined-features-test',
    'function-calling-unit-converter',
    'chat-mode-test',
    'grounding-url-context'
  ]
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 2559ms
 ✓ Compiled /favicon.ico in 185ms (1311 modules)
 GET /favicon.ico 200 in 243ms
 ✓ Compiled /api/documents/save in 182ms (1315 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:24:32.804Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 856ms
Debugger listening on ws://127.0.0.1:9230/e2443d0f-0eb6-48f1-b5a4-632e72e947f4
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1609ms
 ○ Compiling /w/[shortName]/[documentId] ...
 ✓ Compiled /w/[shortName]/[documentId] in 2.6s (2149 modules)
 ✓ Compiled in 308ms (854 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:24:43.110Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:24:43.212Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:24:43.383Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'combined-features-test',
    'final-summary',
    'chat-mode-test',
    'streaming-test',
    'function-calling-weather',
    'image-understanding-test',
    'code-execution-python',
    'grounding-url-context',
    'test-title',
    'document-understanding-test',
    'grounding-google-search',
    'function-calling-unit-converter',
    'function-calling-calculator',
    'thinking-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'combined-features-test',
    'final-summary',
    'chat-mode-test',
    'streaming-test',
    'function-calling-weather',
    'image-understanding-test',
    'code-execution-python',
    'grounding-url-context',
    'test-title',
    'document-understanding-test',
    'grounding-google-search',
    'function-calling-unit-converter',
    'function-calling-calculator',
    'thinking-mode-test'
  ]
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 4113ms
 ✓ Compiled /favicon.ico in 305ms (1311 modules)
 GET /favicon.ico 200 in 370ms
 ✓ Compiled /api/documents/save in 325ms (2156 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:24:47.408Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 1036ms
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ✓ Compiled /api/wizard/execute in 413ms (2315 modules)
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 275,
  temperature: 0.7,
  systemInstruction: 'You have Google Search grounding enabled. Use it to find current, up-to-date information. Do NOT gen...'
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:24:50.446Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 596ms
📥 [AI RESPONSE] Text Generation: {
  textLength: 1222,
  textPreview: 'Okay, I will use Google Search to find out what happened in Austria Vienna yesterday (October 16, 20...',
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 2944ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 260ms
 ✓ Compiled /api/test-ai in 468ms (2311 modules)
 POST /api/test-ai 405 in 516ms
 POST /api/test-ai 405 in 3ms
 POST /api/test-ai 405 in 2ms
[TEST-AI] Starting test...
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 15,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 14,
  textPreview: 'Hello, world!\n...',
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: 'Hello, world!\n',
  usage: undefined,
  groundingMetadata: undefined
}
 HEAD /api/test-ai 200 in 556ms
 POST /api/test-ai 405 in 4ms
 POST /api/test-ai 405 in 3ms
 POST /api/test-ai 405 in 3ms
 ✓ Compiled in 429ms (2325 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:33:40.040Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:33:40.446Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'image-understanding-test',
    'grounding-google-search',
    'grounding-url-context',
    'function-calling-unit-converter',
    'code-execution-python',
    'thinking-mode-test',
    'test-title',
    'streaming-test',
    'final-summary',
    'document-understanding-test',
    'combined-features-test',
    'function-calling-weather',
    'chat-mode-test',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'image-understanding-test',
    'grounding-google-search',
    'grounding-url-context',
    'function-calling-unit-converter',
    'code-execution-python',
    'thinking-mode-test',
    'test-title',
    'streaming-test',
    'final-summary',
    'document-understanding-test',
    'combined-features-test',
    'function-calling-weather',
    'chat-mode-test',
    'function-calling-calculator'
  ]
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 1092ms
 ✓ Compiled /favicon.ico in 104ms (1472 modules)
 GET /favicon.ico 200 in 123ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What are the latest AI developments this week? Provide 3 specific examples with sources.",
  "model": "gemini-2.0-flash",
  "temperature": 0.2,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.3
    }
  },
  "systemInstructions": "You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources.",
  "streamingSettings": {
    "enabled": false
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 88,
  temperature: 0.2,
  systemInstruction: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your s...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 3964,
  textPreview: 'Okay, here are three recent AI developments from this week (late October 2024), with sources:\n' +
    '\n' +
    '**1. ...',
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: 'Okay, here are three recent AI developments from this week (late October 2024), with sources:\n' +
    '\n' +
    '**1.  Google DeepMind Unveils "Gemini 1.5 Pro" with Enhanced Reasoning and Context Window:**\n' +
    '\n' +
    '*   **Development:** Google DeepMind has announced a significant upgrade to its Gemini 1.5 Pro model.  The key improvement is a dramatically expanded context window, reportedly capable of processing up to 2 million tokens. This allows the model to analyze and understand much larger documents, codebases, and even entire books at once.  They also claim improvements in reasoning, coding, and multi-modal understanding.\n' +
    "*   **Significance:**  A larger context window is a major step forward for AI's ability to handle complex tasks.  It allows for more nuanced understanding and reduces the need to break down large problems into smaller, less connected pieces. This could have a huge impact on areas like legal document analysis, software development, and scientific research.\n" +
    '*   **Source:**  Google DeepMind Blog Post: "[Gemini 1.5 Pro: Unlocking New Possibilities with a 2 Million Token Context Window](https://deepmind.google/discover/blog/gemini-1_5-pro-unlocking-new-possibilities-with-a-2-million-token-context-window/)" (Note: This is a hypothetical link, as I am an AI and cannot access the internet to provide a real link from late October 2024.  A real link would be found on the Google DeepMind blog.)\n' +
    '\n' +
    '**2.  Researchers Develop AI System for Automated Scientific Hypothesis Generation:**\n' +
    '\n' +
    '*   **Development:** A team at MIT and Harvard has published a paper detailing an AI system designed to automatically generate scientific hypotheses based on existing research data. The system, called "HypoGen," uses a combination of natural language processing and knowledge graph analysis to identify potential relationships and formulate testable hypotheses.  It then ranks these hypotheses based on their novelty and potential impact.\n' +
    '*   **Significance:**  This could accelerate the pace of scientific discovery by helping researchers identify promising avenues of investigation that they might otherwise miss.  It could also help to overcome biases in research by suggesting hypotheses that challenge existing assumptions.\n' +
    '*   **Source:**  MIT News: "[AI System Automates Scientific Hypothesis Generation](https://news.mit.edu/2024/ai-system-automates-scientific-hypothesis-generation-1027)" (Note: This is a hypothetical link. A real link would be found on the MIT News website.)\n' +
    '\n' +
    '**3.  OpenAI Releases "CodePilot X" - An AI-Powered Coding Assistant with Real-Time Collaboration Features:**\n' +
    '\n' +
    '*   **Development:** OpenAI has launched CodePilot X, the next generation of its AI-powered coding assistant.  This version includes enhanced code completion, debugging tools, and, most notably, real-time collaborative coding features.  Multiple developers can now work on the same codebase simultaneously, with CodePilot X providing suggestions and identifying potential conflicts in real-time.\n' +
    '*   **Significance:**  This could revolutionize software development by making it faster, more efficient, and more collaborative.  The real-time collaboration features could be particularly valuable for remote teams and open-source projects.\n' +
    '*   **Source:**  OpenAI Blog: "[Introducing CodePilot X: The Future of Collaborative Coding](https://openai.com/blog/codepilot-x)" (Note: This is a hypothetical link. A real link would be found on the OpenAI blog.)\n' +
    '\n' +
    '**Important Considerations:**\n' +
    '\n' +
    "*   **Hypothetical Links:**  As an AI, I cannot access the internet to provide real links from the future.  These links are placeholders.  You would need to search for these developments on the respective organizations' websites or in reputable tech news outlets.\n" +
    '*   **Rapid Pace of Change:** The field of AI is evolving extremely quickly.  These developments are based on my current knowledge and understanding of the trends, but the actual advancements in late October 2024 may differ.\n',
  usage: undefined,
  groundingMetadata: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 5889ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday? Give me a brief summary.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.4
    }
  },
  "streamingSettings": {
    "enabled": true
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 63,
  temperature: 0.1,
  systemInstruction: 'undefined...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 1071,
  textPreview: "Okay, here's a quick rundown of some of the major world news stories from yesterday, October 26, 202...",
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: "Okay, here's a quick rundown of some of the major world news stories from yesterday, October 26, 2023:\n" +
    '\n' +
    '*   **Israel-Hamas Conflict:** The conflict continued with ongoing airstrikes and ground operations in Gaza. International concern is mounting over the humanitarian situation, with limited access to food, water, and medical supplies. Discussions continue regarding potential ceasefires or humanitarian pauses to allow aid to reach civilians.\n' +
    '*   **UN Security Council:** The UN Security Council discussed the Israel-Hamas conflict but failed to reach a consensus on a resolution.\n' +
    '*   **Economic News:** Economic data releases and central bank meetings continued to influence global markets.\n' +
    '*   **Ukraine War:** Fighting persisted in eastern Ukraine, with both sides claiming gains. Concerns remain about the upcoming winter and its impact on energy supplies and humanitarian needs.\n' +
    '\n' +
    '**Please note:** News is constantly evolving, and different sources may prioritize different stories. For the most up-to-date information, I recommend checking reputable news outlets.',
  usage: undefined,
  groundingMetadata: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 2002ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "Tell me about recent developments in quantum computing.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "forceGoogleSearchGrounding": true,
  "systemInstructions": "Provide accurate, up-to-date information with proper citations."
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 55,
  temperature: 0.1,
  systemInstruction: 'Provide accurate, up-to-date information with proper citations....'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 7378,
  textPreview: 'Quantum computing is a rapidly evolving field, and there have been many exciting developments recent...',
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: "Quantum computing is a rapidly evolving field, and there have been many exciting developments recently. Here's a breakdown of some key areas and specific examples:\n" +
    '\n' +
    '**1. Hardware Advancements:**\n' +
    '\n' +
    '*   **Increased Qubit Count and Quality:**\n' +
    '    *   **IBM:** Continues to release increasingly powerful quantum processors. They recently unveiled the **Eagle** processor with 127 qubits and are working towards even larger systems like the **Condor** (433 qubits) and beyond.  They are also focusing on improving qubit coherence times and reducing error rates.\n' +
    '    *   **Google:**  While details are often kept under wraps, Google continues to develop its superconducting qubit technology.  Their **Sycamore** processor was a landmark achievement, and they are working on scaling and improving its performance.\n' +
    '    *   **IonQ:**  Uses trapped ion technology, which offers high fidelity and long coherence times. They have been increasing the number of qubits in their systems and improving connectivity.  They are known for their all-to-all connectivity, meaning any qubit can interact with any other.\n' +
    '    *   **Rigetti:**  Focuses on superconducting qubits and has been working on multi-chip processors to scale up qubit counts.\n' +
    '    *   **Other Players:**  Companies like Xanadu (photonic qubits), PsiQuantum (photonic qubits), and ColdQuanta (neutral atom qubits) are also making significant progress with alternative qubit technologies.\n' +
    '\n' +
    '*   **Error Correction:**  A major hurdle in quantum computing is dealing with errors.  Recent research has focused on developing more robust error correction codes and implementing them in hardware.  While full-scale fault-tolerant quantum computers are still some way off, progress is being made in demonstrating error correction principles.\n' +
    '\n' +
    '*   **Cryogenics and Control Systems:**  Developing the infrastructure to support quantum computers is crucial.  This includes advanced cryogenic systems to cool qubits to near absolute zero and sophisticated control systems to manipulate and measure them.  Companies are working on improving the efficiency and scalability of these systems.\n' +
    '\n' +
    '**2. Software and Algorithms:**\n' +
    '\n' +
    '*   **Quantum Algorithm Development:**  Researchers are constantly developing new quantum algorithms that can outperform classical algorithms for specific tasks.  Areas of focus include:\n' +
    '    *   **Quantum Machine Learning:**  Developing quantum algorithms for machine learning tasks like classification, regression, and clustering.\n' +
    '    *   **Quantum Optimization:**  Using quantum algorithms to solve optimization problems in areas like finance, logistics, and materials science.\n' +
    '    *   **Quantum Simulation:**  Simulating the behavior of molecules and materials using quantum computers, which can lead to breakthroughs in drug discovery and materials design.\n' +
    "    *   **Shor's Algorithm:** While not new, continued research focuses on implementing Shor's algorithm (for factoring large numbers) on increasingly larger quantum computers.  This has implications for cryptography.\n" +
    "    *   **Grover's Algorithm:**  A quantum search algorithm that can provide a quadratic speedup over classical search algorithms.\n" +
    '\n' +
    '*   **Quantum Software Development Kits (SDKs):**  Companies like IBM (Qiskit), Google (Cirq), Microsoft (Q#), and Amazon (Braket) provide SDKs that allow developers to write and run quantum programs.  These SDKs are becoming more user-friendly and feature-rich.\n' +
    '\n' +
    '*   **Quantum Compilers:**  Quantum compilers translate high-level quantum programs into low-level instructions that can be executed on quantum hardware.  Researchers are working on improving the efficiency and performance of quantum compilers.\n' +
    '\n' +
    '**3. Applications and Use Cases:**\n' +
    '\n' +
    '*   **Drug Discovery:**  Quantum computers can be used to simulate the behavior of molecules and materials, which can accelerate the drug discovery process.\n' +
    '*   **Materials Science:**  Designing new materials with specific properties using quantum simulations.\n' +
    '*   **Finance:**  Developing quantum algorithms for financial modeling, risk management, and fraud detection.\n' +
    '*   **Logistics:**  Optimizing supply chains and transportation networks using quantum optimization algorithms.\n' +
    '*   **Cryptography:**  Developing quantum-resistant cryptographic algorithms to protect against attacks from future quantum computers.\n' +
    '\n' +
    '**4. Cloud-Based Quantum Computing:**\n' +
    '\n' +
    '*   **Accessibility:**  Cloud platforms like IBM Quantum Experience, Amazon Braket, and Azure Quantum provide access to quantum computers for researchers and developers.  This makes quantum computing more accessible to a wider audience.\n' +
    '*   **Hybrid Quantum-Classical Computing:**  Cloud platforms also enable hybrid quantum-classical computing, where quantum computers are used to accelerate specific parts of a classical computation.\n' +
    '\n' +
    '**5. Key Trends and Challenges:**\n' +
    '\n' +
    '*   **Scaling:**  Building quantum computers with a large number of qubits remains a major challenge.\n' +
    '*   **Error Correction:**  Developing robust error correction techniques is essential for building fault-tolerant quantum computers.\n' +
    '*   **Coherence:**  Maintaining the coherence of qubits (the ability to maintain quantum information) is crucial for performing complex computations.\n' +
    '*   **Quantum Supremacy/Advantage:**  Demonstrating that quantum computers can solve problems that are intractable for classical computers.  While Google claimed quantum supremacy in 2019, the debate continues about the practical significance of these demonstrations.\n' +
    '*   **Talent Gap:**  There is a shortage of skilled quantum computing researchers and developers.\n' +
    '*   **Standardization:**  Efforts are underway to standardize quantum programming languages and hardware interfaces.\n' +
    '\n' +
    '**Recent Specific Examples (Late 2023 - Early 2024):**\n' +
    '\n' +
    "*   **IBM's Roadmap:** IBM continues to execute its roadmap, releasing new processors and software updates.  They are heavily invested in building a full quantum computing stack.\n" +
    '*   **Increased Focus on Quantum Networking:**  Research into quantum communication and networking is gaining momentum, with the goal of connecting quantum computers over long distances.\n' +
    "*   **Advancements in Analog Quantum Computing:**  There's renewed interest in analog quantum computing approaches, which use continuous variables instead of discrete qubits.\n" +
    '*   **Quantum Sensing:**  Quantum sensors are being developed for a variety of applications, including medical imaging, environmental monitoring, and navigation.\n' +
    '\n' +
    '**In summary, quantum computing is making significant strides in hardware, software, and algorithms. While still in its early stages, the field has the potential to revolutionize many industries. The focus is now on scaling up qubit counts, improving qubit quality, developing practical quantum algorithms, and building a robust quantum computing ecosystem.**\n' +
    '\n' +
    'To stay up-to-date, I recommend following reputable sources like:\n' +
    '\n' +
    '*   **Quantum Computing Report:**  A leading news and analysis website.\n' +
    '*   **ArXiv:**  A repository for pre-prints of scientific papers.\n' +
    '*   **IEEE Quantum:**  A professional organization for quantum computing researchers.\n' +
    '*   **Nature and Science Journals:**  Publish cutting-edge research in quantum computing.\n' +
    '*   **Company Blogs:**  IBM Quantum, Google AI Blog, Microsoft Quantum Blog, etc.\n' +
    '\n' +
    'Keep in mind that the field is constantly evolving, so staying informed is key!\n',
  usage: undefined,
  groundingMetadata: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 8903ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What are the latest AI developments this week? Provide 3 specific examples with sources.",
  "model": "gemini-2.0-flash",
  "temperature": 0.2,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.3
    }
  },
  "systemInstructions": "You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources.",
  "streamingSettings": {
    "enabled": false
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 88,
  temperature: 0.2,
  systemInstruction: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your s...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 3662,
  textPreview: 'Okay, here are three recent AI developments from this week (late October 2024), with sources:\n' +
    '\n' +
    '**1. ...',
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: 'Okay, here are three recent AI developments from this week (late October 2024), with sources:\n' +
    '\n' +
    '**1.  Meta AI Introduces V-JEPA: A New Self-Supervised Learning Approach for Computer Vision**\n' +
    '\n' +
    '*   **Development:** Meta AI has unveiled V-JEPA (Vision Joint Embedding Predictive Architecture), a novel self-supervised learning method for computer vision. Unlike traditional approaches that rely on pixel-level reconstruction, V-JEPA learns by predicting missing parts of an image from other parts, forcing the model to capture semantic understanding and contextual relationships. This approach is claimed to be more efficient and robust to adversarial attacks.\n' +
    '*   **Significance:** V-JEPA represents a shift towards more abstract and semantic-based learning in computer vision, potentially leading to more robust and generalizable AI models. It could improve performance in tasks like object recognition, image segmentation, and video understanding, especially in scenarios with limited labeled data.\n' +
    "*   **Source:** Meta AI Blog Post: [Hypothetical Link to Meta AI Blog Post about V-JEPA] (Note: Since this is a hypothetical week, I'm creating a placeholder link. A real link would point to the official Meta AI blog.)\n" +
    '\n' +
    '**2.  Google DeepMind Achieves Breakthrough in Protein Structure Prediction with AlphaFold 4**\n' +
    '\n' +
    '*   **Development:** Google DeepMind has announced AlphaFold 4, the latest iteration of its protein structure prediction AI. AlphaFold 4 demonstrates significantly improved accuracy and speed compared to previous versions, particularly for complex protein structures and protein-ligand interactions. It also incorporates the ability to predict protein dynamics and flexibility with greater precision.\n' +
    '*   **Significance:** This advancement has the potential to revolutionize drug discovery, materials science, and our understanding of fundamental biological processes. More accurate protein structure prediction can accelerate the development of new drugs, design novel materials with specific properties, and provide insights into the mechanisms of disease.\n' +
    '*   **Source:** Nature Journal Article: [Hypothetical Link to Nature Article on AlphaFold 4] (Again, this is a placeholder. A real link would point to the published article in Nature.)\n' +
    '\n' +
    '**3.  OpenAI Releases GPT-5 with Enhanced Reasoning and Multimodal Capabilities**\n' +
    '\n' +
    '*   **Development:** OpenAI has launched GPT-5, the successor to GPT-4. Key improvements include enhanced reasoning abilities, allowing the model to solve more complex problems and generate more coherent and logical responses. GPT-5 also boasts expanded multimodal capabilities, enabling it to seamlessly process and generate text, images, audio, and video.\n' +
    "*   **Significance:** GPT-5's enhanced reasoning and multimodal capabilities could unlock new applications in areas such as automated content creation, personalized education, scientific research, and human-computer interaction. The ability to handle multiple modalities opens up possibilities for more intuitive and engaging AI experiences.\n" +
    '*   **Source:** OpenAI Official Announcement: [Hypothetical Link to OpenAI Announcement about GPT-5] (Placeholder link. A real link would point to the official OpenAI announcement.)\n' +
    '\n' +
    '**Important Considerations:**\n' +
    '\n' +
    '*   **Hypothetical Scenario:**  Remember that these are hypothetical developments for late October 2024.  The actual advancements may differ.\n' +
    '*   **Source Verification:**  In a real-world scenario, always verify the information from multiple reputable sources before drawing conclusions.\n' +
    '*   **Rapid Pace of AI:**  The field of AI is evolving extremely rapidly. New breakthroughs are announced frequently.\n',
  usage: undefined,
  groundingMetadata: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 4952ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday? Give me a brief summary.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.4
    }
  },
  "streamingSettings": {
    "enabled": true
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 63,
  temperature: 0.1,
  systemInstruction: 'undefined...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 1044,
  textPreview: "Okay, here's a quick rundown of some of the major world news stories from yesterday, October 26, 202...",
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: "Okay, here's a quick rundown of some of the major world news stories from yesterday, October 26, 2023:\n" +
    '\n' +
    '*   **Israel-Hamas Conflict:** The conflict continued with ongoing airstrikes and ground operations in Gaza. International concern is growing over the humanitarian situation, with limited access to food, water, and medical supplies. Discussions continue regarding potential ceasefires or humanitarian pauses to allow aid to reach civilians.\n' +
    '*   **UN Security Council:** The UN Security Council discussed the Israel-Hamas conflict but failed to reach a consensus on a resolution.\n' +
    '*   **Economic News:** Economic data releases and central bank meetings continued to influence global markets.\n' +
    '*   **Ukraine War:** Fighting persisted in eastern Ukraine, with both sides claiming gains. Concerns remain about the upcoming winter and its impact on energy supplies and humanitarian needs.\n' +
    '\n' +
    '**Please note:** News is constantly evolving, and this is just a brief snapshot. For the most up-to-date information, please refer to reputable news sources.',
  usage: undefined,
  groundingMetadata: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 1507ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "Tell me about recent developments in quantum computing.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "forceGoogleSearchGrounding": true,
  "systemInstructions": "Provide accurate, up-to-date information with proper citations."
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 55,
  temperature: 0.1,
  systemInstruction: 'Provide accurate, up-to-date information with proper citations....'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 8131,
  textPreview: 'Quantum computing is a rapidly evolving field, and there have been many exciting developments recent...',
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: "Quantum computing is a rapidly evolving field, and there have been many exciting developments recently. Here's a breakdown of some key areas and specific advancements:\n" +
    '\n' +
    '**1. Hardware Advancements (Qubit Development):**\n' +
    '\n' +
    "*   **Increased Qubit Count:**  Companies like IBM, Google, and IonQ are consistently pushing the boundaries of qubit count.  While the exact numbers fluctuate and are often accompanied by caveats about coherence and connectivity, the trend is undeniably upward.  IBM's Osprey processor (433 qubits) and Condor (1121 qubits) are notable examples.  However, simply having more qubits isn't enough; quality and connectivity are crucial.\n" +
    '*   **Improved Qubit Coherence and Fidelity:**  Maintaining qubit coherence (the ability to maintain quantum states) for longer periods and improving gate fidelity (the accuracy of quantum operations) are critical for complex computations.  Significant progress is being made in these areas through improved materials, control techniques, and error mitigation strategies.  For example, researchers are exploring new materials and fabrication techniques to reduce noise and improve qubit stability.\n' +
    '*   **Diverse Qubit Technologies:**  The field is exploring various qubit technologies, each with its own strengths and weaknesses:\n' +
    '    *   **Superconducting Qubits:**  Dominated by IBM, Google, and others.  They are relatively easy to fabricate and control but can be sensitive to noise.\n' +
    '    *   **Trapped Ions:**  Pioneered by IonQ and others.  They offer high fidelity and long coherence times but can be more complex to scale.\n' +
    '    *   **Neutral Atoms:**  Becoming increasingly promising, with companies like ColdQuanta and Atom Computing making strides.  They offer good scalability and coherence.\n' +
    '    *   **Photonic Qubits:**  Using photons as qubits.  They offer potential for room-temperature operation and long-distance communication but can be challenging to control.\n' +
    '    *   **Silicon Qubits:**  Leveraging existing semiconductor manufacturing infrastructure.  They offer potential for scalability and integration with classical electronics.\n' +
    '*   **Error Correction:**  Quantum error correction is essential for building fault-tolerant quantum computers.  Researchers are developing and testing various error correction codes and techniques.  While a fully fault-tolerant quantum computer is still some way off, progress is being made in demonstrating the feasibility of error correction.\n' +
    '\n' +
    '**2. Software and Algorithm Development:**\n' +
    '\n' +
    '*   **Quantum Algorithm Development:**  Researchers are constantly developing new quantum algorithms and improving existing ones.  Areas of focus include:\n' +
    '    *   **Quantum Simulation:**  Simulating molecules, materials, and other quantum systems.  This has potential applications in drug discovery, materials science, and fundamental physics.\n' +
    '    *   **Quantum Optimization:**  Solving optimization problems, such as those found in logistics, finance, and machine learning.\n' +
    '    *   **Quantum Machine Learning:**  Developing quantum algorithms for machine learning tasks, such as classification, regression, and clustering.\n' +
    '    *   **Quantum Cryptography:**  Developing secure communication protocols based on quantum mechanics.\n' +
    '*   **Quantum Software Development Kits (SDKs):**  Companies like IBM (Qiskit), Google (Cirq/TensorFlow Quantum), and Microsoft (Q#) provide SDKs that allow developers to write and run quantum programs.  These SDKs are becoming more user-friendly and feature-rich.\n' +
    '*   **Quantum Compilers:**  Quantum compilers translate high-level quantum programs into low-level instructions that can be executed on quantum hardware.  Researchers are working on improving the efficiency and performance of quantum compilers.\n' +
    '*   **Quantum Cloud Platforms:**  Companies like IBM, Amazon (Braket), Google, and Microsoft offer cloud-based access to quantum computers.  This allows researchers and developers to experiment with quantum computing without having to invest in their own hardware.\n' +
    '\n' +
    '**3. Applications and Use Cases:**\n' +
    '\n' +
    '*   **Drug Discovery and Materials Science:**  Quantum computers are being used to simulate molecules and materials, which can accelerate the discovery of new drugs and materials.\n' +
    '*   **Financial Modeling:**  Quantum computers are being explored for applications in financial modeling, such as portfolio optimization and risk management.\n' +
    '*   **Logistics and Supply Chain Optimization:**  Quantum computers can be used to optimize logistics and supply chains, such as routing vehicles and managing inventory.\n' +
    '*   **Cryptography:**  Quantum computers pose a threat to current encryption methods, but they can also be used to develop new, quantum-resistant encryption methods.\n' +
    '*   **Fundamental Science:**  Quantum computers are being used to study fundamental questions in physics, such as the nature of dark matter and the origin of the universe.\n' +
    '\n' +
    '**4. Key Recent Specific Developments (Examples):**\n' +
    '\n' +
    "*   **IBM's Roadmap:** IBM continues to release increasingly powerful quantum processors and has a roadmap for achieving fault-tolerant quantum computing.  Their focus is on building a full-stack quantum computing ecosystem.\n" +
    "*   **IonQ's Trapped Ion Advances:** IonQ has demonstrated high-fidelity quantum gates and is working on scaling up its trapped ion quantum computers.\n" +
    `*   **Google's Quantum Supremacy Claims (and Subsequent Refinements):** While the initial "quantum supremacy" claim was debated, Google continues to push the boundaries of what quantum computers can do.  The focus is now on demonstrating practical quantum advantage.\n` +
    '*   **Amazon Braket and Azure Quantum:**  These cloud platforms are expanding their offerings, providing access to a wider range of quantum hardware and software tools.\n' +
    '*   **Increased Government and Private Investment:**  Governments and private companies are investing heavily in quantum computing research and development.  This is driving innovation and accelerating the pace of progress.\n' +
    '*   **Standardization Efforts:**  Organizations like IEEE and ISO are working on developing standards for quantum computing, which will help to ensure interoperability and accelerate the adoption of the technology.\n' +
    '\n' +
    '**Challenges and Future Directions:**\n' +
    '\n' +
    'Despite the significant progress, quantum computing still faces many challenges:\n' +
    '\n' +
    '*   **Scalability:**  Building quantum computers with a large number of qubits remains a major challenge.\n' +
    '*   **Coherence:**  Maintaining qubit coherence for long enough to perform complex computations is difficult.\n' +
    '*   **Fidelity:**  Improving the accuracy of quantum operations is essential for building fault-tolerant quantum computers.\n' +
    '*   **Error Correction:**  Developing and implementing effective quantum error correction codes is crucial.\n' +
    '*   **Algorithm Development:**  More quantum algorithms are needed to solve real-world problems.\n' +
    '*   **Software Development Tools:**  Quantum software development tools need to be more user-friendly and feature-rich.\n' +
    '*   **Talent Gap:**  There is a shortage of skilled quantum computing researchers and developers.\n' +
    '\n' +
    'The future of quantum computing is bright, but it will require continued innovation and collaboration to overcome these challenges.  The field is moving towards:\n' +
    '\n' +
    '*   **Hybrid Quantum-Classical Computing:**  Combining quantum computers with classical computers to solve problems that are beyond the capabilities of either alone.\n' +
    '*   **Fault-Tolerant Quantum Computing:**  Building quantum computers that can correct errors and perform complex computations reliably.\n' +
    '*   **Quantum Networks:**  Connecting quantum computers together to form quantum networks, which will enable new applications such as secure communication and distributed quantum computing.\n' +
    '*   **Quantum Sensing:**  Using quantum phenomena to develop new sensors with unprecedented sensitivity and accuracy.\n' +
    '\n' +
    "Keep an eye on publications from leading research institutions, companies like IBM, Google, IonQ, Rigetti, and D-Wave (though D-Wave's approach is different, focusing on quantum annealing), and government initiatives for the latest breakthroughs.  The field is constantly evolving!\n",
  usage: undefined,
  groundingMetadata: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 9204ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday?",
  "forceGoogleSearchGrounding": true
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 38,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 1079,
  textPreview: "Here's a quick rundown of some of the major world news stories from yesterday, October 26, 2023:\n" +
    '\n' +
    '* ...',
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: "Here's a quick rundown of some of the major world news stories from yesterday, October 26, 2023:\n" +
    '\n' +
    '*   **Israel-Hamas Conflict:** The conflict continued to dominate headlines. There were reports of ongoing airstrikes and ground operations by Israel in Gaza. Humanitarian concerns remained high, with limited access to aid and essential supplies for civilians. Discussions continued regarding potential ceasefires or humanitarian pauses, but no major breakthroughs were announced.\n' +
    '*   **Ukraine War:** Fighting continued in eastern Ukraine. Reports focused on intense battles around Avdiivka. Concerns remained about the upcoming winter and the potential impact on energy infrastructure.\n' +
    "*   **China Leadership Changes:** China's Communist Party continued its meetings, with speculation about potential shifts in leadership and policy direction.\n" +
    '*   **Economic News:** Economic data releases and central bank decisions were closely watched for signs of inflation and potential recession risks.\n' +
    '*   **Pakistan Elections:** Pakistan announced it would hold elections in January 2024.',
  usage: undefined,
  groundingMetadata: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 1998ms
 ✓ Compiled in 402ms (2150 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:39:18.982Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'document-understanding-test',
    'function-calling-calculator',
    'streaming-test',
    'image-understanding-test',
    'grounding-google-search',
    'test-title',
    'thinking-mode-test',
    'grounding-url-context',
    'combined-features-test',
    'function-calling-weather',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'code-execution-python'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'document-understanding-test',
    'function-calling-calculator',
    'streaming-test',
    'image-understanding-test',
    'grounding-google-search',
    'test-title',
    'thinking-mode-test',
    'grounding-url-context',
    'combined-features-test',
    'function-calling-weather',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'code-execution-python'
  ]
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 463ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:39:19.324Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /favicon.ico in 103ms (1311 modules)
 GET /favicon.ico 200 in 158ms
 ✓ Compiled /api/test-ai in 395ms (1470 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What are the latest AI developments this week? Provide 3 specific examples with sources.",
  "model": "gemini-2.0-flash",
  "temperature": 0.2,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.3
    }
  },
  "systemInstructions": "You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources.",
  "streamingSettings": {
    "enabled": false
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 88,
  temperature: 0.2,
  systemInstruction: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your s...'
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:40:44.870Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'function-calling-unit-converter',
    'function-calling-calculator',
    'document-understanding-test',
    'test-title',
    'grounding-url-context',
    'final-summary',
    'chat-mode-test',
    'thinking-mode-test',
    'combined-features-test',
    'function-calling-weather',
    'image-understanding-test',
    'code-execution-python',
    'grounding-google-search',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'function-calling-unit-converter',
    'function-calling-calculator',
    'document-understanding-test',
    'test-title',
    'grounding-url-context',
    'final-summary',
    'chat-mode-test',
    'thinking-mode-test',
    'combined-features-test',
    'function-calling-weather',
    'image-understanding-test',
    'code-execution-python',
    'grounding-google-search',
    'streaming-test'
  ]
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 534ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:40:45.232Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
📥 [AI RESPONSE] Text Generation: {
  textLength: 1920,
  textPreview: 'Okay, I will provide you with 3 specific examples of the latest AI developments this week.\n' +
    '\n' +
    'Here are...',
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: 'Okay, I will provide you with 3 specific examples of the latest AI developments this week.\n' +
    '\n' +
    'Here are three specific examples of recent AI developments:\n' +
    '\n' +
    "1.  **Meta's V-JEPA 2: Improving AI Physical Reasoning:** Meta has introduced V-JEPA 2, a new world model that enhances visual understanding and prediction in the physical world, thereby improving the physical reasoning of AI agents. This model, trained on video, enables robots and AI agents to understand the physical world and predict how it will respond to their actions. V-JEPA 2 helps AI agents mimic human intelligence, making them smarter about the physical world. In addition to releasing V-JEPA 2, Meta is sharing three new benchmarks to help the research community evaluate how well their existing models learn and reason about the world using video. (Source: [https://about.fb.com/wp-content/uploads/2025/06/01\\_VJEPA2.mp4](https://about.fb.com/wp-content/uploads/2025/06/01_VJEPA2.mp4), [10])\n" +
    '2.  **AI-Powered Agents with Greater Autonomy:** AI-powered agents are evolving to handle more complex tasks with greater autonomy, simplifying tasks at home and work. These agents can interpret customer requests, retrieve information, and provide personalized responses without human intervention. Gartner forecasts that agentic AI will be integrated into 33% of enterprise software applications in 2028, compared to less than 1% in 2024. (Source: [2])\n' +
    '3.  **Advancements in Large Language Models (LLMs):** The emergence of advanced Large Language Models (LLMs 3.0) marks a pivotal moment in AI evolution. These systems are revolutionizing how machines understand and interact with the world, integrating various forms of communication such as processing and generating images, videos, and audio. LLMs 3.0 demonstrate complex logical reasoning, sophisticated pattern recognition, and advanced mathematical and scientific problem-solving skills. (Source: [3])\n' +
    '\n',
  usage: undefined,
  groundingMetadata: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 6387ms
 ○ Compiling / ...
 ✓ Compiled / in 834ms (2346 modules)
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday? Give me a brief summary.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.4
    }
  },
  "streamingSettings": {
    "enabled": true
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 63,
  temperature: 0.1,
  systemInstruction: 'undefined...'
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:40:51.313Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:40:51.452Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
 GET / 200 in 1302ms
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'chat-mode-test',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'function-calling-weather',
    'function-calling-calculator',
    'code-execution-python',
    'test-title',
    'final-summary',
    'grounding-url-context',
    'image-understanding-test',
    'combined-features-test',
    'document-understanding-test',
    'grounding-google-search',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'chat-mode-test',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'function-calling-weather',
    'function-calling-calculator',
    'code-execution-python',
    'test-title',
    'final-summary',
    'grounding-url-context',
    'image-understanding-test',
    'combined-features-test',
    'document-understanding-test',
    'grounding-google-search',
    'streaming-test'
  ]
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 688ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:40:52.003Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ○ Compiling /dashboard ...
 ✓ Compiled /dashboard in 520ms (2370 modules)
 GET /dashboard 200 in 568ms
📥 [AI RESPONSE] Text Generation: {
  textLength: 891,
  textPreview: "Here's a brief summary of world news from yesterday, June 14, 2025:\n" +
    '\n' +
    '*   **Israel-Iran Conflict:** T...',
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: "Here's a brief summary of world news from yesterday, June 14, 2025:\n" +
    '\n' +
    '*   **Israel-Iran Conflict:** Tensions remain high as both countries continue to exchange attacks. Iran launched a fresh missile barrage on Israel, while Israel struck back with airstrikes on Tehran.\n' +
    "*   **Nigeria:** Gunmen killed at least 100 people in Nigeria's Benue state, according to Amnesty International.\n" +
    '*   **G7 Summit:** The G7 leaders are gathering in Canada for a summit amid the Mideast crisis and trade tensions.\n' +
    '*   **US Military Parade:** A massive military parade took place in Washington D.C., with President Trump paying tribute to the U.S. military.\n' +
    "*   **Club World Cup:** Al Ahly held Messi's Inter Miami to a 0-0 draw in the opening match of the FIFA Club World Cup.\n" +
    '*   **Minnesota Shooting:** A shooting targeting Minnesota lawmakers is being investigated as a possible act of political violence.',
  usage: undefined,
  groundingMetadata: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 2795ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "Tell me about recent developments in quantum computing.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "forceGoogleSearchGrounding": true,
  "systemInstructions": "Provide accurate, up-to-date information with proper citations."
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 55,
  temperature: 0.1,
  systemInstruction: 'Provide accurate, up-to-date information with proper citations....'
}
 ✓ Compiled /w/[shortName]/new in 303ms (2372 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:40:56.699Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:40:56.752Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mbxh6ibcwbxko51',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749980456760_u4bqhx7yi',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749980456760_u4bqhx7yi',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'BHAtTG1NpuXc1Q6PDDep',
  path: 'documents/BHAtTG1NpuXc1Q6PDDep'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'BHAtTG1NpuXc1Q6PDDep',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'BHAtTG1NpuXc1Q6PDDep',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  error: undefined,
  originalId: 'mbxh6ibcwbxko51'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxh6ibcwbxko51',
  createdId: 'BHAtTG1NpuXc1Q6PDDep',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 1174ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 163ms
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 141ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:40:57.633Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /api/documents/save in 260ms (1516 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:40:59.926Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 803ms
📥 [AI RESPONSE] Text Generation: {
  textLength: 5919,
  textPreview: 'Quantum computing is rapidly evolving, with breakthroughs emerging from academic labs, tech giants, ...',
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: "Quantum computing is rapidly evolving, with breakthroughs emerging from academic labs, tech giants, and startups. Here's a summary of recent developments:\n" +
    '\n' +
    '**Hardware Advancements:**\n' +
    '\n' +
    '*   **Qubit Development:** Companies like IBM, Google, Intel, Rigetti, and IonQ are increasing the number of qubits in their processors, enhancing qubit coherence time, and improving error rates and quantum volume. Some processors have reached over 1000 qubits.\n' +
    "*   **IBM's Processors:** IBM has been actively developing quantum processors. The Flamingo quantum processor was released in 2024. IBM is also working towards the Kookaburra, expected in 2025, which will be a 4,158-qubit system formed by linking three chips together.\n" +
    "*   **Google's Willow Processor:** Google launched its Willow quantum chip in December 2024. It's a 105-qubit superconducting processor with strong error correction improvements.\n" +
    "*   **Microsoft's Topological Qubits:** Microsoft unveiled a quantum processor powered by topological qubits.\n" +
    '*   **Quantum Foundries:** There is progress in building quantum foundries, which are facilities designed for the scalable production of qubits.\n' +
    '\n' +
    '**Quantum Supremacy and Error Correction:**\n' +
    '\n' +
    "*   **Google's Sycamore Processor:** Google's Sycamore processor achieved quantum supremacy in 2019 with a 54-qubit system, solving tasks exponentially faster than classical computers.\n" +
    "*   **Willow Processor's Error Correction:** Google's Willow processor achieved exponential error correction, reducing errors as qubits scale.\n" +
    '\n' +
    '**Quantum Software and Cloud Services:**\n' +
    '\n' +
    '*   **Quantum Cloud Platforms:** Platforms like IBM Quantum, Amazon Braket, Microsoft Azure Quantum, and Google Cirq are making quantum computing resources more accessible.\n' +
    '*   **Quantum Operating Systems:** IonQ announced its IonQ Quantum OS and new tools for its IonQ Hybrid Suite.\n' +
    "*   **CUDA-Q Platform:** Nvidia's open-source quantum development environment, CUDA-Q Platform, will be added to Amazon Braket to combine with classical cloud compute resources.\n" +
    '\n' +
    '**Quantum Communication and Networking:**\n' +
    '\n' +
    '*   **Quantum Network Engineering:** Researchers have made breakthroughs in quantum network engineering by "stretching" thin films of diamond to create quantum bits that can operate with significantly reduced equipment and expense.\n' +
    '*   **Quantum Bits Transfer:** Researchers from the University of Sussex and Universal Quantum have made strides in transferring quantum bits (qubits) between quantum computer microchips.\n' +
    '*   **Quantum Communication Over Subsea Cable:** Quantum communication has been demonstrated over a subsea optical fiber cable.\n' +
    '*   **Quantum Teleportation:** Researchers at Oxford University have successfully linked two independent quantum processors using a photonic network interface via quantum teleportation.\n' +
    '\n' +
    '**Quantum Algorithms and Machine Learning:**\n' +
    '\n' +
    '*   **Quantum Machine Learning:** Quantum-as-a-service (QaaS) has expanded access to quantum computing, enabling breakthroughs in quantum machine learning. Researchers are developing quantum neural networks, quantum support vector machines, and quantum algorithms for complex tasks like image and natural language processing\n' +
    "*   **Shor's Algorithm:** Shor's algorithm, a quantum algorithm capable of factoring large numbers exponentially faster than classical algorithms, has continued to garner attention.\n" +
    '\n' +
    '**Quantum Security and Cryptography:**\n' +
    '\n' +
    '*   **Post-Quantum Cryptography:** With the ability to break current encryption methods, quantum computing is pressuring governments and industries to adopt quantum-safe encryption. NIST is finalizing its recommended post-quantum cryptographic algorithms.\n' +
    "*   **Quantum-Safe Technology:** Telefónica Tech and IBM have partnered to integrate IBM's quantum-safe technology into Telefónica's cybersecurity services. Vodafone and IBM are collaborating to enhance smartphone security using quantum-safe cryptography.\n" +
    '\n' +
    '**Real-World Applications:**\n' +
    '\n' +
    '*   **Drug Discovery:** Pharmaceutical companies are advancing disease research and quantum-enabled drug discovery.\n' +
    '*   **Automotive and Aerospace:** Quantum computing is being used to improve the performance of hydrogen fuel cell catalysts and electric batteries mobility.\n' +
    '*   **Financial Services:** Quantum computing is being applied to financial modeling and risk analysis.\n' +
    "*   **Optimization Problems:** D-Wave's annealing quantum computers are delivering results for customers in solving optimization problems.\n" +
    '*    **Materials Development:** Quantum computing is being used to accelerate insights in new material development.\n' +
    '\n' +
    '**Investments and Collaborations:**\n' +
    '\n' +
    '*   **Government Funding:** Governments worldwide are investing in quantum technology. China, Germany, the United Kingdom, the United States, and South Korea lead in public investments.\n' +
    '*   **Strategic Partnerships:** The University of Chicago has formalized agreements with IBM, the University of Tokyo, and Google to develop quantum technology. IBM and Pasqal are collaborating to create a unified software architecture that integrates classical and quantum computing. Nvidia is partnering with Google to design quantum computing processors.\n' +
    '\n' +
    '**Overall Trends:**\n' +
    '\n' +
    '*   **Transition to Practical Application:** Quantum computing is transitioning from theory to practical application.\n' +
    '*   **Quantum AI Synergy:** The intersection of quantum computing and artificial intelligence is positioned to grow, with AI helping quantum computing and quantum computing powering AI models.\n' +
    '*   **Quantum Technology Beyond Computing:** Quantum sensing and quantum communication are delivering immediate value in areas like navigation, medical imaging, and secure data transfer.\n' +
    '\n' +
    'While some experts believe that quantum computing is still a decade away from broad-scale applications, others argue that the quantum era has already begun, with real-world, commercially viable applications emerging in various industries.\n',
  usage: undefined,
  groundingMetadata: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 7594ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 213ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 188ms
 ✓ Compiled /api/wizard/execute in 211ms (1518 modules)
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 267,
  temperature: 0.7,
  systemInstruction: 'You have Google Search grounding enabled. Use it to find current, up-to-date information. Do NOT gen...'
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:41:16.360Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'function-calling-calculator',
    'document-understanding-test',
    'function-calling-unit-converter',
    'test-title',
    'grounding-url-context',
    'thinking-mode-test',
    'code-execution-python',
    'function-calling-weather',
    'streaming-test',
    'final-summary',
    'combined-features-test',
    'grounding-google-search',
    'chat-mode-test',
    'image-understanding-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'function-calling-calculator',
    'document-understanding-test',
    'function-calling-unit-converter',
    'test-title',
    'grounding-url-context',
    'thinking-mode-test',
    'code-execution-python',
    'function-calling-weather',
    'streaming-test',
    'final-summary',
    'combined-features-test',
    'grounding-google-search',
    'chat-mode-test',
    'image-understanding-test'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'document-understanding-test',
    'test-title',
    'image-understanding-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'streaming-test',
    'grounding-url-context',
    'grounding-google-search',
    'thinking-mode-test',
    'final-summary',
    'function-calling-weather',
    'code-execution-python',
    'chat-mode-test',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'document-understanding-test',
    'test-title',
    'image-understanding-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'streaming-test',
    'grounding-url-context',
    'grounding-google-search',
    'thinking-mode-test',
    'final-summary',
    'function-calling-weather',
    'code-execution-python',
    'chat-mode-test',
    'function-calling-calculator'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 336ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 338ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:41:16.790Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 306ms
📥 [AI RESPONSE] Text Generation: {
  textLength: 1185,
  textPreview: 'Yesterday, June 11, 2025, Austria was in a period of national mourning following a school shooting i...',
  usageMetadata: undefined,
  finishReason: undefined
}
 POST /api/wizard/execute 200 in 3413ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 194ms
 ✓ Compiled in 607ms (1518 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:41:28.443Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'grounding-url-context',
    'chat-mode-test',
    'document-understanding-test',
    'thinking-mode-test',
    'final-summary',
    'combined-features-test',
    'function-calling-weather',
    'function-calling-calculator',
    'grounding-google-search',
    'test-title',
    'code-execution-python',
    'image-understanding-test',
    'function-calling-unit-converter',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'grounding-url-context',
    'chat-mode-test',
    'document-understanding-test',
    'thinking-mode-test',
    'final-summary',
    'combined-features-test',
    'function-calling-weather',
    'function-calling-calculator',
    'grounding-google-search',
    'test-title',
    'code-execution-python',
    'image-understanding-test',
    'function-calling-unit-converter',
    'streaming-test'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'function-calling-unit-converter',
    'grounding-google-search',
    'final-summary',
    'thinking-mode-test',
    'code-execution-python',
    'combined-features-test',
    'grounding-url-context',
    'image-understanding-test',
    'function-calling-weather',
    'chat-mode-test',
    'test-title',
    'streaming-test',
    'document-understanding-test',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'function-calling-unit-converter',
    'grounding-google-search',
    'final-summary',
    'thinking-mode-test',
    'code-execution-python',
    'combined-features-test',
    'grounding-url-context',
    'image-understanding-test',
    'function-calling-weather',
    'chat-mode-test',
    'test-title',
    'streaming-test',
    'document-understanding-test',
    'function-calling-calculator'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 392ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 394ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:41:28.965Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 252ms (1518 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:41:36.280Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'thinking-mode-test',
    'final-summary',
    'code-execution-python',
    'grounding-google-search',
    'document-understanding-test',
    'chat-mode-test',
    'grounding-url-context',
    'function-calling-weather',
    'image-understanding-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'test-title',
    'streaming-test',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'thinking-mode-test',
    'final-summary',
    'code-execution-python',
    'grounding-google-search',
    'document-understanding-test',
    'chat-mode-test',
    'grounding-url-context',
    'function-calling-weather',
    'image-understanding-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'test-title',
    'streaming-test',
    'function-calling-calculator'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'combined-features-test',
    'code-execution-python',
    'final-summary',
    'function-calling-weather',
    'document-understanding-test',
    'grounding-url-context',
    'function-calling-calculator',
    'test-title',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'grounding-google-search'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'combined-features-test',
    'code-execution-python',
    'final-summary',
    'function-calling-weather',
    'document-understanding-test',
    'grounding-url-context',
    'function-calling-calculator',
    'test-title',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'grounding-google-search'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 359ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 358ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:41:36.744Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 340ms (2390 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:41:42.820Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'chat-mode-test',
    'code-execution-python',
    'combined-features-test',
    'test-title',
    'final-summary',
    'image-understanding-test',
    'document-understanding-test',
    'function-calling-calculator',
    'streaming-test',
    'function-calling-weather',
    'grounding-google-search',
    'grounding-url-context',
    'function-calling-unit-converter',
    'thinking-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'chat-mode-test',
    'code-execution-python',
    'combined-features-test',
    'test-title',
    'final-summary',
    'image-understanding-test',
    'document-understanding-test',
    'function-calling-calculator',
    'streaming-test',
    'function-calling-weather',
    'grounding-google-search',
    'grounding-url-context',
    'function-calling-unit-converter',
    'thinking-mode-test'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'image-understanding-test',
    'chat-mode-test',
    'function-calling-weather',
    'streaming-test',
    'test-title',
    'thinking-mode-test',
    'final-summary',
    'function-calling-unit-converter',
    'function-calling-calculator',
    'grounding-url-context',
    'combined-features-test',
    'code-execution-python',
    'document-understanding-test',
    'grounding-google-search'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'image-understanding-test',
    'chat-mode-test',
    'function-calling-weather',
    'streaming-test',
    'test-title',
    'thinking-mode-test',
    'final-summary',
    'function-calling-unit-converter',
    'function-calling-calculator',
    'grounding-url-context',
    'combined-features-test',
    'code-execution-python',
    'document-understanding-test',
    'grounding-google-search'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 348ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 348ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:41:43.288Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday?",
  "forceGoogleSearchGrounding": true
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 38,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
📥 [AI RESPONSE] Text Generation: {
  textLength: 1254,
  textPreview: "Here's a summary of what happened in world news yesterday, June 14, 2025:\n" +
    '\n' +
    '*   **Israel-Iran Tension...',
  usageMetadata: undefined,
  finishReason: undefined
}
[TEST-AI] Result: {
  content: "Here's a summary of what happened in world news yesterday, June 14, 2025:\n" +
    '\n' +
    '*   **Israel-Iran Tensions:** Tensions between Israel and Iran escalated with missile exchanges. Israel conducted strikes on Iran, including targeting gas fields, while Iran retaliated with missile strikes near Tel Aviv and other cities in Israel. Casualties were reported on both sides.\n' +
    '*   **Nigeria Attack:** At least 100 people were killed by gunmen in a village attack in north-central Nigeria, according to Amnesty International.\n' +
    '*   **US-Iran Relations:** Amid the escalating tensions between Israel and Iran, former US President Trump issued a warning to Iran, stating the "full strength of US Forces will come down on you".\n' +
    "*   **Air India Plane Crash:** King Charles is set to honor the victims of the Air India plane crash at the Trooping the Colour parade. In addition, the son of one of the plane crash victims said he'll relive his mother's last moments 'to the day I die'.\n" +
    '*   **Minnesota Shooting:** A manhunt is underway in Minnesota for a suspect in the deadly shooting of Democratic lawmakers.\n' +
    '*   **Typhoon Wutip:** Typhoon Wutip caused five deaths and left two missing in central Vietnam, with farmlands flooded. The typhoon has also reached southern China.\n',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 3104ms
 ✓ Compiled in 182ms (1474 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:42:07.459Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'final-summary',
    'streaming-test',
    'test-title',
    'function-calling-weather',
    'chat-mode-test',
    'function-calling-unit-converter',
    'function-calling-calculator',
    'grounding-google-search',
    'image-understanding-test',
    'document-understanding-test',
    'thinking-mode-test',
    'grounding-url-context',
    'combined-features-test',
    'code-execution-python'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'final-summary',
    'streaming-test',
    'test-title',
    'function-calling-weather',
    'chat-mode-test',
    'function-calling-unit-converter',
    'function-calling-calculator',
    'grounding-google-search',
    'image-understanding-test',
    'document-understanding-test',
    'thinking-mode-test',
    'grounding-url-context',
    'combined-features-test',
    'code-execution-python'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'code-execution-python',
    'thinking-mode-test',
    'grounding-url-context',
    'test-title',
    'document-understanding-test',
    'function-calling-calculator',
    'image-understanding-test',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'function-calling-weather',
    'grounding-google-search',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'code-execution-python',
    'thinking-mode-test',
    'grounding-url-context',
    'test-title',
    'document-understanding-test',
    'function-calling-calculator',
    'image-understanding-test',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'function-calling-weather',
    'grounding-google-search',
    'streaming-test'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 398ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 398ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:42:08.027Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday?",
  "forceGoogleSearchGrounding": true
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 38,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
🔍 [TextGeneration] Full result keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
🔍 [TextGeneration] Result.candidates: EXISTS
🔍 [TextGeneration] Grounding metadata: FOUND
📥 [AI RESPONSE] Text Generation: {
  textLength: 1122,
  textPreview: "Here's a summary of what happened in world news yesterday, June 14, 2025:\n" +
    '\n' +
    '*   **Israel-Iran Conflic...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 4
}
[TEST-AI] Result: {
  content: "Here's a summary of what happened in world news yesterday, June 14, 2025:\n" +
    '\n' +
    '*   **Israel-Iran Conflict:** Tensions escalated with continued attacks between Israel and Iran. Israel claimed to have conducted "extensive strikes" on the Iranian Defence Ministry headquarters and a nuclear project. There are reports of missile strikes and damage to a nuclear site in Iran.\n' +
    '*   **Air India Tragedy:** Investigations are underway following the Air India plane crash. The King of England, Charles III, is set to honor the victims at the Trooping the Colour parade.\n' +
    '*   **Nigeria Attack:** Amnesty International reported that at least 100 people were killed by gunmen in north-central Nigeria.\n' +
    '*   **US-Iran Relations:** Amidst the escalating tensions between Israel and Iran, Donald Trump issued a warning to Iran, stating the "full strength of US Forces will come down on you" if attacked.\n' +
    '*   **Minnesota Shooting:** A manhunt is underway in Minnesota for a suspect in the deadly shooting of Democratic lawmakers.\n' +
    '*   **Typhoon Wutip:** Typhoon Wutip caused fatalities and flooding in central Vietnam and reached southern China.',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 3256ms
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 395,
  temperature: 0.7,
  systemInstruction: 'You have Google Search grounding enabled. Use it to find current, up-to-date information. Do NOT gen...'
}
🔍 [TextGeneration] Full result keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
🔍 [TextGeneration] Result.candidates: EXISTS
🔍 [TextGeneration] Grounding metadata: FOUND
📥 [AI RESPONSE] Text Generation: {
  textLength: 889,
  textPreview: "Okay, here's a summary of what happened yesterday in Austria based on Google Search results, followe...",
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 0
}
 POST /api/wizard/execute 200 in 1681ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 306ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What are the latest AI developments this week? Provide 3 specific examples with sources.",
  "model": "gemini-2.0-flash",
  "temperature": 0.2,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.3
    }
  },
  "systemInstructions": "You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources.",
  "streamingSettings": {
    "enabled": false
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 88,
  temperature: 0.2,
  systemInstruction: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your s...'
}
🔍 [TextGeneration] Full result keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
🔍 [TextGeneration] Result.candidates: EXISTS
🔍 [TextGeneration] Grounding metadata: FOUND
📥 [AI RESPONSE] Text Generation: {
  textLength: 1410,
  textPreview: 'Okay, I can provide you with some of the latest AI developments from this week. Since today is June ...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 8
}
[TEST-AI] Result: {
  content: 'Okay, I can provide you with some of the latest AI developments from this week. Since today is June 15, 2025, I will search for AI news and developments specifically from around that time.\n' +
    '\n' +
    'Okay, here are three recent AI developments from this week (around June 15, 2025), based on my search results:\n' +
    '\n' +
    "1.  **Meta's V-JEPA 2 for Physical Reasoning:** Meta has introduced V-JEPA 2, a new world model trained on video, designed to improve AI agents' understanding of the physical world and their ability to predict outcomes of actions. This model helps robots interact with unfamiliar objects and environments, enabling them to perform tasks like reaching, picking up, and placing objects. Meta also released three new benchmarks to evaluate physical reasoning in AI models. (Source: [8, 10])\n" +
    '2.  **AI-Powered Shortcuts App by Apple:** Apple is expected to unveil an upgraded, AI-powered Shortcuts app at its WWDC 2025 conference. This app will allow users to automate everyday tasks more intuitively and efficiently, marking a significant step for Apple into personalized AI assistance. (Source: [1])\n' +
    '3.  **OpenAI and Google Cloud Partnership:** OpenAI has partnered with Google Cloud, moving beyond its previous exclusive reliance on Microsoft. This collaboration highlights the significant resource demands for AI training and deployment and alters the competitive dynamics within the AI sector. (Source: [2])\n',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 3856ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday? Give me a brief summary.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.4
    }
  },
  "streamingSettings": {
    "enabled": true
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 63,
  temperature: 0.1,
  systemInstruction: 'undefined...'
}
🔍 [TextGeneration] Full result keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
🔍 [TextGeneration] Result.candidates: EXISTS
🔍 [TextGeneration] Grounding metadata: FOUND
📥 [AI RESPONSE] Text Generation: {
  textLength: 754,
  textPreview: "Here's a brief summary of what happened in world news yesterday, June 14, 2025:\n" +
    '\n' +
    '*   **Israel-Iran C...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 4
}
[TEST-AI] Result: {
  content: "Here's a brief summary of what happened in world news yesterday, June 14, 2025:\n" +
    '\n' +
    '*   **Israel-Iran Conflict:** Tensions remain high, with reports of continued strikes and retaliatory actions between Israel and Iran. There were missile strikes and attacks on military and nuclear sites.\n' +
    "*   **Nigeria:** Gunmen killed at least 100 people in Nigeria's Benue state.\n" +
    '*   **Air India Crash:** A London-bound Air India Boeing 787 Dreamliner crashed shortly after takeoff.\n' +
    '*   **US Politics:** A military parade took place in Washington D.C. alongside "No Kings" protests.\n' +
    '*   **Minnesota:** Two Minnesota state lawmakers were shot, resulting in one death.\n' +
    '*   **US-China Trade:** A U.S.-China trade truce leaves the issue of military-use rare earth unresolved.',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 2211ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "Tell me about recent developments in quantum computing.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "forceGoogleSearchGrounding": true,
  "systemInstructions": "Provide accurate, up-to-date information with proper citations."
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 55,
  temperature: 0.1,
  systemInstruction: 'Provide accurate, up-to-date information with proper citations....'
}
🔍 [TextGeneration] Full result keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
🔍 [TextGeneration] Result.candidates: EXISTS
🔍 [TextGeneration] Grounding metadata: FOUND
📥 [AI RESPONSE] Text Generation: {
  textLength: 3862,
  textPreview: 'Quantum computing is rapidly evolving from a theoretical concept to a practical technology with the ...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 5
}
[TEST-AI] Result: {
  content: "Quantum computing is rapidly evolving from a theoretical concept to a practical technology with the potential to revolutionize various industries. Here's a summary of recent developments:\n" +
    '\n' +
    '**Hardware Advancements:**\n' +
    '\n' +
    '*   **Increased Qubit Counts and Enhanced Stability:** Companies like IBM, Google, Intel, Rigetti, and IonQ are making strides in developing more stable and scalable quantum processors. Some processors now have over 1000 qubits.\n' +
    '*   **Improved Qubit Coherence:** Enhancements in qubit coherence time, which refers to how long qubits can maintain information, are also being made.\n' +
    '*   **Error Rate Reduction:** Error rates and quantum volume are being improved.\n' +
    '*   **Modular Quantum Systems:** IBM has roadmap targets for modular quantum systems, aiming for a 100,000-qubit system in the coming years.\n' +
    '*   **Hypercube Network Technologies:** Development of hypercube network technologies enhances the scalability and performance of quantum systems by improving communication between qubits.\n' +
    '*   **Integrated Photonics:** Integrated photonics is emerging as a promising avenue for scalable quantum computing with trapped ions, potentially leading to more compact and efficient quantum devices.\n' +
    '*   **Topological Qubits:** Microsoft unveiled a quantum processor powered by topological qubits.\n' +
    '*   **New Materials:** Innovative materials like germanium and GeSn-based quantum well lasers are being developed to improve the efficiency and performance of nanoscale quantum devices.\n' +
    '\n' +
    '**Quantum Cloud Services:**\n' +
    '\n' +
    '*   **Mainstream Accessibility:** Platforms like IBM Quantum, Amazon Braket, Microsoft Azure Quantum, and Google Cirq are making quantum computing accessible to researchers and developers through the cloud.\n' +
    '\n' +
    '**Post-Quantum Cryptography:**\n' +
    '\n' +
    '*   **Priority:** With the potential of quantum computers to break current encryption methods, governments and industries are prioritizing the adoption of quantum-safe encryption.\n' +
    '*   **NIST Standards:** The National Institute of Standards and Technology (NIST) is finalizing its recommended post-quantum cryptographic algorithms.\n' +
    '*   **Security Infrastructure Updates:** Enterprises are assessing and updating their security infrastructure.\n' +
    '\n' +
    '**Quantum Software and Machine Learning:**\n' +
    '\n' +
    '*   **Quantum Software Ecosystem:** The quantum software ecosystem is growing.\n' +
    '*   **Quantum Machine Learning Integration:** Machine learning is being integrated with quantum systems to enhance computational power. Frameworks like TorchQC enable the application of deep learning techniques in quantum dynamics and control.\n' +
    '\n' +
    '**Investment and Commercialization:**\n' +
    '\n' +
    "*   **Increased Investment:** Quantum technology investment in the first five months of 2025 has reached nearly three-quarters of 2024's total.\n" +
    '*   **Growing Sales:** Commercial orders for quantum computers totaled $854 million in 2024, a 70% increase from 2023.\n' +
    '*   **Expanding Customer Base:** The customer base for quantum systems is expanding across geographies and sectors.\n' +
    '*   **Strategic Capital Allocation:** Investment is becoming more focused on commercialization potential.\n' +
    '*   **Government Support:** Governments are continuing to fund quantum initiatives.\n' +
    '\n' +
    '**Quantum Computing Integration**\n' +
    '\n' +
    '*   **Quantum computers are being combined with classical super computers** Quantum-backed artificial intelligence methods also have the potential to stake claims in the most lucrative markets available today.\n' +
    '\n' +
    '**Other Trends:**\n' +
    '\n' +
    '*   **Specialized Hardware/Software:** Development of more specialized hardware and software, as opposed to universal quantum computing.\n' +
    '*   **Networking NISQ Devices:** More networking of noisy intermediate-scale quantum (NISQ) devices together.\n' +
    '*   **Software Abstraction:** More layers of software abstraction are being developed.\n' +
    '*   **Workforce Development:** Increased focus on workforce development tools.\n',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 5461ms
 ✓ Compiled in 211ms (1295 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:46:15.663Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
 ⨯ TypeError: Cannot read properties of undefined (reading 'call')
    at Object.t [as require] (.next/server/webpack-runtime.js:1:128)
    at JSON.parse (<anonymous>) {
  digest: '2385656776'
}
TypeError: Cannot read properties of undefined (reading 'call')
    at Object.t [as require] (.next/server/webpack-runtime.js:1:128)
    at JSON.parse (<anonymous>)
 ⨯ TypeError: Cannot read properties of undefined (reading 'call')
    at Object.t [as require] (.next/server/webpack-runtime.js:1:128)
    at JSON.parse (<anonymous>) {
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:46:15.915Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'test-title',
    'grounding-url-context',
    'document-understanding-test',
    'combined-features-test',
    'final-summary',
    'code-execution-python',
    'function-calling-calculator',
    'thinking-mode-test',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'function-calling-weather',
    'grounding-google-search',
    'function-calling-unit-converter'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'test-title',
    'grounding-url-context',
    'document-understanding-test',
    'combined-features-test',
    'final-summary',
    'code-execution-python',
    'function-calling-calculator',
    'thinking-mode-test',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'function-calling-weather',
    'grounding-google-search',
    'function-calling-unit-converter'
  ]
}
 ○ Compiling /_error ...
 ✓ Compiled /_error in 1019ms (2485 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:46:17.260Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
 ⨯ Failed to generate static paths for /w/[shortName]/[documentId]:
[Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
 ⨯ Failed to generate static paths for /w/[shortName]/[documentId]:
[Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
 ⨯ Failed to generate static paths for /w/[shortName]/[documentId]:
[Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
 ⨯ Failed to generate static paths for /w/[shortName]/[documentId]:
[Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 1981ms
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 834ms
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 191ms
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'function-calling-unit-converter',
    'chat-mode-test',
    'function-calling-calculator',
    'grounding-url-context',
    'thinking-mode-test',
    'final-summary',
    'test-title',
    'document-understanding-test',
    'image-understanding-test',
    'code-execution-python',
    'streaming-test',
    'function-calling-weather',
    'combined-features-test',
    'grounding-google-search'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'function-calling-unit-converter',
    'chat-mode-test',
    'function-calling-calculator',
    'grounding-url-context',
    'thinking-mode-test',
    'final-summary',
    'test-title',
    'document-understanding-test',
    'image-understanding-test',
    'code-execution-python',
    'streaming-test',
    'function-calling-weather',
    'combined-features-test',
    'grounding-google-search'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'function-calling-unit-converter',
    'chat-mode-test',
    'function-calling-calculator',
    'grounding-url-context',
    'thinking-mode-test',
    'final-summary',
    'test-title',
    'document-understanding-test',
    'image-understanding-test',
    'code-execution-python',
    'streaming-test',
    'function-calling-weather',
    'combined-features-test',
    'grounding-google-search'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'function-calling-unit-converter',
    'chat-mode-test',
    'function-calling-calculator',
    'grounding-url-context',
    'thinking-mode-test',
    'final-summary',
    'test-title',
    'document-understanding-test',
    'image-understanding-test',
    'code-execution-python',
    'streaming-test',
    'function-calling-weather',
    'combined-features-test',
    'grounding-google-search'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'test-title',
    'chat-mode-test',
    'final-summary',
    'image-understanding-test',
    'function-calling-calculator',
    'combined-features-test',
    'function-calling-weather',
    'code-execution-python',
    'function-calling-unit-converter',
    'thinking-mode-test',
    'grounding-google-search',
    'document-understanding-test',
    'streaming-test',
    'grounding-url-context'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'test-title',
    'chat-mode-test',
    'final-summary',
    'image-understanding-test',
    'function-calling-calculator',
    'combined-features-test',
    'function-calling-weather',
    'code-execution-python',
    'function-calling-unit-converter',
    'thinking-mode-test',
    'grounding-google-search',
    'document-understanding-test',
    'streaming-test',
    'grounding-url-context'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'test-title',
    'chat-mode-test',
    'final-summary',
    'image-understanding-test',
    'function-calling-calculator',
    'combined-features-test',
    'function-calling-weather',
    'code-execution-python',
    'function-calling-unit-converter',
    'thinking-mode-test',
    'grounding-google-search',
    'document-understanding-test',
    'streaming-test',
    'grounding-url-context'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'test-title',
    'chat-mode-test',
    'final-summary',
    'image-understanding-test',
    'function-calling-calculator',
    'combined-features-test',
    'function-calling-weather',
    'code-execution-python',
    'function-calling-unit-converter',
    'thinking-mode-test',
    'grounding-google-search',
    'document-understanding-test',
    'streaming-test',
    'grounding-url-context'
  ]
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 388ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 1032ms
 ○ Compiling /_not-found ...
 ✓ Compiled /_not-found in 669ms (2489 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:46:18.184Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET /_next/static/css/app/layout.css?v=1749980777321 404 in 706ms
 ✓ Compiled /favicon.ico in 453ms (1400 modules)
 GET /favicon.ico 200 in 506ms
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 450ms
 GET /favicon.ico 200 in 12ms
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 428ms
 GET /favicon.ico 200 in 9ms
 ✓ Compiled in 449ms (1119 modules)
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 500 in 492ms
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 452ms
 GET /favicon.ico 200 in 13ms
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/4uhVu0tEOLwcmnAA2wdv'
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 500 in 449ms
 ✓ Compiled in 163ms (1116 modules)
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 14ms
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 477ms
 GET /favicon.ico 200 in 14ms
 ✓ Compiled in 223ms (1116 modules)
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 32ms
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 436ms
 GET /favicon.ico 200 in 18ms
 ✓ Compiled in 163ms (1116 modules)
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 18ms
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 17ms
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/4uhVu0tEOLwcmnAA2wdv'
}
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/4uhVu0tEOLwcmnAA2wdv'
}
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/4uhVu0tEOLwcmnAA2wdv'
}
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/4uhVu0tEOLwcmnAA2wdv'
}
 ⚠ Fast Refresh had to perform a full reload when ./node_modules/next/dist/shared/lib/router/router.js changed. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 500 in 291ms
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 302ms
 ✓ Compiled in 663ms (2501 modules)
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 345ms
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 ⨯ [Error: Cannot find module './vendor-chunks/@radix-ui.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 500 in 782ms
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 391ms
 GET /favicon.ico 200 in 11ms
 GET /favicon.ico 200 in 4ms
 ○ Compiling /api/test-ai ...
 ✓ Compiled /api/test-ai in 550ms (1558 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What are the latest AI developments this week? Provide 3 specific examples with sources.",
  "model": "gemini-2.0-flash",
  "temperature": 0.2,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.3
    }
  },
  "systemInstructions": "You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources.",
  "streamingSettings": {
    "enabled": false
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 88,
  temperature: 0.2,
  systemInstruction: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your s...'
}
 ⨯ [Error: ENOENT: no such file or directory, open '/Users/franzenzenhofer/dev/franzai-writer/.next/build-manifest.json'] {
  type: 'Error',
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/franzenzenhofer/dev/franzai-writer/.next/build-manifest.json',
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 ⨯ [Error: ENOENT: no such file or directory, open '/Users/franzenzenhofer/dev/franzai-writer/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/franzenzenhofer/dev/franzai-writer/.next/server/pages/_document.js'
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 1450ms
 ✓ Compiled /favicon.ico in 163ms (1560 modules)
 GET /favicon.ico 200 in 185ms
🔍 [TextGeneration] Full result keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
🔍 [TextGeneration] Result.candidates: EXISTS
🔍 [TextGeneration] Grounding metadata: FOUND
📥 [AI RESPONSE] Text Generation: {
  textLength: 1118,
  textPreview: 'Here are three of the latest AI developments:\n' +
    '\n' +
    '1.  **OpenAI Releases Improved Reasoning Models:** Op...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 9
}
[TEST-AI] Result: {
  content: 'Here are three of the latest AI developments:\n' +
    '\n' +
    '1.  **OpenAI Releases Improved Reasoning Models:** OpenAI has launched o3 and o4-mini, new models in their "o-series" designed to think longer before responding. These models showcase advancements in coding, math, science, and visual perception. o3-pro is now available to Pro users in ChatGPT and the API. These models can use and combine every tool within ChatGPT, including web search, analyzing uploaded files, and generating images. ([12], [13])\n' +
    "2.  **Google's AI Advancements:** Google has unveiled Gemini 2.5, its most intelligent model series, which is coming to search. AI overviews in Google Search have reached over 1.5 billion users monthly. Google is also introducing multitasking capabilities to Project Mariner, an agent that interacts with the web to perform tasks. ([10])\n" +
    '3.  **AI in Healthcare Governance:** The World Health Organization (WHO) has announced a new AI for Health Governance center to oversee ethical AI development in healthcare, focusing on transparency, fairness, and accountability in AI applications for global health services. ([7])\n',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 5446ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday? Give me a brief summary.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.4
    }
  },
  "streamingSettings": {
    "enabled": true
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 63,
  temperature: 0.1,
  systemInstruction: 'undefined...'
}
🔍 [TextGeneration] Full result keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
🔍 [TextGeneration] Result.candidates: EXISTS
🔍 [TextGeneration] Grounding metadata: FOUND
📥 [AI RESPONSE] Text Generation: {
  textLength: 736,
  textPreview: "Here's a brief summary of what happened in world news yesterday, June 14, 2025, based on the search ...",
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 2
}
[TEST-AI] Result: {
  content: "Here's a brief summary of what happened in world news yesterday, June 14, 2025, based on the search results:\n" +
    '\n' +
    '*   **Israel-Iran Conflict:** Tensions remain high, with continued reports of strikes and counter-strikes. There are reports of missiles raining down, and both sides have targeted sensitive areas.\n' +
    "*   **Nigeria:** Gunmen killed at least 100 people in Nigeria's Benue state.\n" +
    '*   **Air India Crash:** A plane crash occurred, with reports of fatalities, including some British citizens.\n' +
    '*   **US-China Trade:** A trade truce exists between the U.S. and China, but issues regarding military-use rare earth elements remain unresolved.\n' +
    '*   **Other Events:** A military parade took place in Washington D.C., coinciding with protests.',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 2542ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "Tell me about recent developments in quantum computing.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "forceGoogleSearchGrounding": true,
  "systemInstructions": "Provide accurate, up-to-date information with proper citations."
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 55,
  temperature: 0.1,
  systemInstruction: 'Provide accurate, up-to-date information with proper citations....'
}
🔍 [TextGeneration] Full result keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
🔍 [TextGeneration] Result.candidates: EXISTS
🔍 [TextGeneration] Grounding metadata: FOUND
📥 [AI RESPONSE] Text Generation: {
  textLength: 3682,
  textPreview: 'Quantum computing is experiencing rapid advancements, transitioning from theoretical exploration to ...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 10
}
[TEST-AI] Result: {
  content: "Quantum computing is experiencing rapid advancements, transitioning from theoretical exploration to practical applications. Here's a summary of recent developments:\n" +
    '\n' +
    '**Hardware Advancements:**\n' +
    '\n' +
    '*   **Qubit Development:** Companies like IBM, Google, Intel, Rigetti, and IonQ are increasing the number of qubits, enhancing qubit coherence time, and improving error rates.\n' +
    '*   **IBM:** Aims to build a 1,000-qubit quantum computer by 2025.\n' +
    '*   **Google:** Launched the Willow quantum processor with improved error correction.\n' +
    "*   **Microsoft:** Unveiled the world's first quantum processor powered by topological qubits.\n" +
    '*   **Quantum Foundries:** Facilities designed for scalable production of qubits are expected to reduce costs and standardize components.\n' +
    '\n' +
    '**Error Correction:**\n' +
    '\n' +
    '*   **Breakthroughs:** Significant progress has been made in quantum error correction, crucial for developing more stable quantum computers.\n' +
    "*   **Google's Willow Chip:** Demonstrates below-threshold error correction, lowering error rates as more physical qubits encode logical qubits.\n" +
    '*   **Microsoft and Quantinuum:** Entangled 12 logical qubits, reducing the physical error rate to achieve a low logical error rate, enabling chemistry simulation.\n' +
    '\n' +
    '**Quantum Software and Algorithms:**\n' +
    '\n' +
    '*   **Quantum Machine Learning:** Researchers are developing quantum neural networks, quantum support vector machines, and quantum algorithms for complex tasks like image and natural language processing.\n' +
    "*   **Quantum Algorithm:** A new quantum algorithm by Oded Regev of New York University potentially surpasses Shor's method in efficiency for number factoring.\n" +
    '\n' +
    '**Quantum Communication and Networking:**\n' +
    '\n' +
    '*   **Quantum Networks:** Development of secure communication through metropolitan-scale entangled quantum networks.\n' +
    '*   **Distributed Entanglement:** Demonstration of distributed entanglement, linking qubits within separate quantum computers.\n' +
    '*   **Quantum Communication:** Enhanced techniques for secure data transmission using quantum principles, including demonstration over a subsea optical fiber cable.\n' +
    '\n' +
    '**Quantum Cloud Services:**\n' +
    '\n' +
    '*   **Accessibility:** More companies like Amazon (Amazon Braket) are offering quantum cloud platforms, making quantum computing resources accessible without expensive hardware.\n' +
    '\n' +
    '**Hybrid Quantum-Classical Systems:**\n' +
    '\n' +
    '*   **Integration:** Hybrid systems, combining classical and quantum computing elements, are gaining traction to leverage the strengths of both technologies.\n' +
    '\n' +
    '**Applications:**\n' +
    '\n' +
    "*   **Drug Discovery:** Quantum computing is being used to simulate drug candidates' interactions with biological molecules, potentially leading to more effective treatments.\n" +
    '*   **AI and Machine Learning:** Quantum computing could dramatically enhance machine learning algorithms by speeding up data analysis and improving pattern recognition.\n' +
    "*   **Optimization Problems:** D-Wave's annealing quantum computers are delivering measurable results for customers in solving complex optimization problems like workforce scheduling and cargo handling.\n" +
    '*   **Quantum Security:** Post-quantum cryptography is evolving from theoretical constructs to practical applications, with governments and corporations accelerating the deployment of quantum-resistant algorithms.\n' +
    '\n' +
    '**Overall Trends:**\n' +
    '\n' +
    '*   **Quantum Computing Beyond Computing:** Expanding into quantum sensing and quantum communication for navigation, medical imaging, and secure data transfer.\n' +
    '*   **Specialized Hardware/Software:** Shift towards more specialized hardware and software solutions.\n' +
    '*   **Workforce Development:** Increased focus on workforce development tools to train professionals in quantum computing.\n',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 5512ms
 ✓ Compiled in 253ms (1560 modules)
 ⨯ [Error: ENOENT: no such file or directory, open '/Users/franzenzenhofer/dev/franzai-writer/.next/build-manifest.json'] {
  type: 'Error',
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/franzenzenhofer/dev/franzai-writer/.next/build-manifest.json',
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 ⨯ [Error: ENOENT: no such file or directory, open '/Users/franzenzenhofer/dev/franzai-writer/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/franzenzenhofer/dev/franzai-writer/.next/server/pages/_document.js'
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 404ms
 GET /favicon.ico 200 in 33ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday?",
  "forceGoogleSearchGrounding": true
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 38,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
✅ [TextGeneration] Grounding metadata found
📥 [AI RESPONSE] Text Generation: {
  textLength: 1306,
  textPreview: "Here's a summary of what happened in world news yesterday, June 14, 2025:\n" +
    '\n' +
    '*   **Israel-Iran Conflic...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 5
}
[TEST-AI] Result: {
  content: "Here's a summary of what happened in world news yesterday, June 14, 2025:\n" +
    '\n' +
    `*   **Israel-Iran Conflict:** Tensions remained high with continued strikes and retaliatory actions. Donald Trump denied US involvement in Israel's "Operation Rising Lion," while Iran claimed to have proof of American support. Reports indicated Israel struck Iran's largest gas field and possibly targeted Iran's Defense Ministry headquarters.\n` +
    '*   **Nigeria:** Gunmen killed at least 100 people in a village attack in north-central Nigeria.\n' +
    '*   **Air India Plane Crash:** An Air India plane crashed, and the captain sent a mayday call less than a minute before the crash. Families were waiting for the remains of relatives. King Charles is set to honor the victims at the Trooping the Colour parade.\n' +
    '*   **Minnesota Shooting:** A manhunt was underway for a suspect in the deadly shooting of Democratic lawmakers in Minnesota.\n' +
    '*   **Typhoon Wutip:** Typhoon Wutip caused five deaths and left two missing in central Vietnam, with farmlands flooded. The typhoon also reached southern China.\n' +
    '*   **Other News:**\n' +
    '    *   Former Nicaraguan President Violeta Chamorro died at 95.\n' +
    '    *   Trump held a military parade amid protests across America.\n' +
    '    *   Putin and Trump discussed Middle East tensions and the Ukraine war in a phone call.',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 3131ms
 ○ Compiling /_not-found ...
 ✓ Compiled /_not-found in 758ms (2666 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:52:13.772Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 GET /_next/static/webpack/f6d597cd3b8505aa.webpack.hot-update.json 404 in 782ms
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 5ms
 ⨯ [Error: Cannot find module './vendor-chunks/next.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 ⨯ [Error: Cannot find module './vendor-chunks/next.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/w/[shortName]/[documentId]/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/w/gemini-test/BHAtTG1NpuXc1Q6PDDep'
}
 ⨯ [Error: ENOENT: no such file or directory, open '/Users/franzenzenhofer/dev/franzai-writer/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/franzenzenhofer/dev/franzai-writer/.next/server/pages/_document.js'
}
 ⨯ [Error: ENOENT: no such file or directory, open '/Users/franzenzenhofer/dev/franzai-writer/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/franzenzenhofer/dev/franzai-writer/.next/server/pages/_document.js'
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 500 in 228ms
 GET /_next/static/chunks/fallback/webpack.js 404 in 162ms
 GET /_next/static/chunks/fallback/react-refresh.js 404 in 117ms
 GET /_next/static/chunks/fallback/main.js 404 in 118ms
 GET /_next/static/chunks/fallback/pages/_app.js 404 in 114ms
 GET /_next/static/chunks/fallback/pages/_error.js 404 in 114ms
 ⨯ [Error: ENOENT: no such file or directory, open '/Users/franzenzenhofer/dev/franzai-writer/.next/server/app/favicon.ico/route.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/franzenzenhofer/dev/franzai-writer/.next/server/app/favicon.ico/route.js',
  page: '/favicon.ico'
}
 GET /favicon.ico 500 in 24ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:52:30.044Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:52:30.113Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'grounding-url-context',
    'test-title',
    'final-summary',
    'document-understanding-test',
    'combined-features-test',
    'chat-mode-test',
    'function-calling-unit-converter',
    'streaming-test',
    'function-calling-weather',
    'code-execution-python',
    'grounding-google-search',
    'image-understanding-test',
    'thinking-mode-test',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'grounding-url-context',
    'test-title',
    'final-summary',
    'document-understanding-test',
    'combined-features-test',
    'chat-mode-test',
    'function-calling-unit-converter',
    'streaming-test',
    'function-calling-weather',
    'code-execution-python',
    'grounding-google-search',
    'image-understanding-test',
    'thinking-mode-test',
    'function-calling-calculator'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 1569ms
 GET /_next/static/css/app/layout.css?v=1749981150047 404 in 31ms
 GET /_next/static/chunks/app/error.js 404 in 108ms
 GET /_next/static/chunks/main-app.js?v=1749981150047 404 in 109ms
 GET /_next/static/chunks/app/page.js 404 in 108ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 109ms
 GET /_next/static/chunks/app/w/%5BshortName%5D/%5BdocumentId%5D/error.js 404 in 108ms
 GET /_next/static/chunks/_app-pages-browser_src_app_w_shortName_documentId_wizard-page-content_tsx.js 404 in 59ms
 GET /_next/static/chunks/app/w/%5BshortName%5D/%5BdocumentId%5D/page.js 404 in 59ms
 GET /_next/static/chunks/app/global-error.js 404 in 60ms
 ⨯ Error: Cannot find module './447.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/_not-found/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/swc/options.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/swc/index.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/next-config-ts/transpile-config.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/config.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js
    at __webpack_require__.f.require (.next/server/webpack-runtime.js:208:28)
    at <unknown> (.next/server/webpack-runtime.js:116:40)
    at Array.reduce (<anonymous>)
    at __webpack_require__.e (.next/server/webpack-runtime.js:115:67)
    at Array.map (<anonymous>)
    at __webpack_require__.X (.next/server/webpack-runtime.js:167:22)
    at <unknown> (.next/server/app/favicon.ico/route.js:1:21661)
    at Object.<anonymous> (.next/server/app/favicon.ico/route.js:1:21707) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/favicon.ico'
}
 GET /favicon.ico 500 in 20ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'grounding-url-context',
    'test-title',
    'final-summary',
    'document-understanding-test',
    'combined-features-test',
    'chat-mode-test',
    'function-calling-unit-converter',
    'streaming-test',
    'function-calling-weather',
    'code-execution-python',
    'grounding-google-search',
    'image-understanding-test',
    'thinking-mode-test',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'grounding-url-context',
    'test-title',
    'final-summary',
    'document-understanding-test',
    'combined-features-test',
    'chat-mode-test',
    'function-calling-unit-converter',
    'streaming-test',
    'function-calling-weather',
    'code-execution-python',
    'grounding-google-search',
    'image-understanding-test',
    'thinking-mode-test',
    'function-calling-calculator'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 172ms
 GET /_next/static/css/app/layout.css?v=1749981153481 404 in 31ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:52:33.737Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET /_next/static/chunks/main-app.js?v=1749981153481 404 in 99ms
 GET /_next/static/chunks/app/error.js 404 in 99ms
 GET /_next/static/chunks/app/page.js 404 in 99ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 100ms
 GET /_next/static/chunks/app/w/%5BshortName%5D/%5BdocumentId%5D/error.js 404 in 99ms
 GET /_next/static/chunks/app/global-error.js 404 in 56ms
 GET /_next/static/chunks/app/w/%5BshortName%5D/%5BdocumentId%5D/page.js 404 in 56ms
 GET /_next/static/chunks/_app-pages-browser_src_app_w_shortName_documentId_wizard-page-content_tsx.js 404 in 56ms
 ⨯ Error: Cannot find module './447.js'
Require stack:
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/webpack-runtime.js
- /Users/franzenzenhofer/dev/franzai-writer/.next/server/app/_not-found/page.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/require.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/load-components.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/utils.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/swc/options.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/swc/index.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/build/next-config-ts/transpile-config.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/config.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next.js
- /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js
    at __webpack_require__.f.require (.next/server/webpack-runtime.js:208:28)
    at <unknown> (.next/server/webpack-runtime.js:116:40)
    at Array.reduce (<anonymous>)
    at __webpack_require__.e (.next/server/webpack-runtime.js:115:67)
    at Array.map (<anonymous>)
    at __webpack_require__.X (.next/server/webpack-runtime.js:167:22)
    at <unknown> (.next/server/app/favicon.ico/route.js:1:21661)
    at Object.<anonymous> (.next/server/app/favicon.ico/route.js:1:21707) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/favicon.ico'
}
 GET /favicon.ico 500 in 19ms
Debugger listening on ws://127.0.0.1:9229/202c4611-4c9b-45d1-b7be-f1de345e2014
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 1680166,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/a864516f-3cba-4bff-83da-a27ff137b9ad
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 2.1s
 ○ Compiling /_not-found ...
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ✓ Compiled /api/test-ai in 5.5s (2329 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:52:45.616Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday?",
  "forceGoogleSearchGrounding": true
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 38,
  temperature: 0.7,
  systemInstruction: 'undefined...'
}
 GET /_next/static/webpack/3386742c52ab30c1.webpack.hot-update.json 404 in 5999ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:52:46.184Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:52:46.292Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'code-execution-python',
    'image-understanding-test',
    'function-calling-weather',
    'streaming-test',
    'chat-mode-test',
    'function-calling-unit-converter',
    'grounding-google-search',
    'grounding-url-context',
    'final-summary',
    'document-understanding-test',
    'function-calling-calculator',
    'thinking-mode-test',
    'combined-features-test',
    'test-title'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'code-execution-python',
    'image-understanding-test',
    'function-calling-weather',
    'streaming-test',
    'chat-mode-test',
    'function-calling-unit-converter',
    'grounding-google-search',
    'grounding-url-context',
    'final-summary',
    'document-understanding-test',
    'function-calling-calculator',
    'thinking-mode-test',
    'combined-features-test',
    'test-title'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'code-execution-python',
    'function-calling-calculator',
    'function-calling-weather',
    'grounding-url-context',
    'combined-features-test',
    'thinking-mode-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'streaming-test',
    'function-calling-unit-converter',
    'grounding-google-search',
    'test-title',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'code-execution-python',
    'function-calling-calculator',
    'function-calling-weather',
    'grounding-url-context',
    'combined-features-test',
    'thinking-mode-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'streaming-test',
    'function-calling-unit-converter',
    'grounding-google-search',
    'test-title',
    'final-summary'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 6930ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 1308ms
 ○ Compiling /favicon.ico ...
✅ [TextGeneration] Grounding metadata found
📥 [AI RESPONSE] Text Generation: {
  textLength: 1124,
  textPreview: "Here's a summary of what happened in world news yesterday, June 14, 2025, based on the search result...",
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 3
}
[TEST-AI] Result: {
  content: "Here's a summary of what happened in world news yesterday, June 14, 2025, based on the search results:\n" +
    '\n' +
    `*   **Israel-Iran Conflict:** Tensions remained high, with continued strikes and retaliatory actions. Donald Trump denied US involvement in Israel's "Operation Rising Lion," while Iran claimed to have proof of American support. There were reports of missiles striking Israel's port city of Haifa and a massive fire at an Iranian oil depot after an Israeli attack.\n` +
    '*   **Nigeria:** Gunmen killed at least 100 people in north-central Nigeria, according to Amnesty International.\n' +
    '*   **Air India Plane Crash:** An investigation was underway into the Air India plane crash, with focus on the final moments before the crash. King Charles was set to honor the victims at the Trooping the Colour parade.\n' +
    '*   **US Politics:** Trump held a military parade amid protests across America. In Minnesota, a manhunt was underway for a suspect in the deadly shooting of Democratic lawmakers.\n' +
    '*   **Typhoon Wutip:** Typhoon Wutip caused five deaths and two missing in central Vietnam, with farmlands flooded as it reached southern China.',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 5203ms
 ✓ Compiled /favicon.ico in 1264ms (1473 modules)
 GET /favicon.ico 200 in 1300ms
 GET /favicon.ico 200 in 5ms
 ✓ Compiled /api/documents/save in 200ms (2319 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:52:50.482Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 824ms
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 241ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What are the latest AI developments this week? Provide 3 specific examples with sources.",
  "model": "gemini-2.0-flash",
  "temperature": 0.2,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.3
    }
  },
  "systemInstructions": "You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources.",
  "streamingSettings": {
    "enabled": false
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 88,
  temperature: 0.2,
  systemInstruction: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your s...'
}
✅ [TextGeneration] Grounding metadata found
📥 [AI RESPONSE] Text Generation: {
  textLength: 831,
  textPreview: 'Here are three recent AI developments:\n' +
    '\n' +
    '1.  **OpenAI Releases GPT-4.5 with Enhanced Emotional Intell...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 9
}
[TEST-AI] Result: {
  content: 'Here are three recent AI developments:\n' +
    '\n' +
    '1.  **OpenAI Releases GPT-4.5 with Enhanced Emotional Intelligence:** OpenAI has launched GPT-4.5, focusing on improved emotional intelligence (EQ). This upgrade enhances empathy and human-like conversational capabilities, enabling more intuitive interactions.\n' +
    '    ([2])\n' +
    '2.  **Google Launches Gemma 3:** Google has released Gemma 3, its latest family of open AI models. These models are optimized for developer flexibility and performance across tasks and support applications like chatbots, search, and code generation.\n' +
    '    ([2])\n' +
    '3.  **Meta Unveils LLaMA 4 with Voice-Powered AI:** Meta has introduced LLaMA 4, a new voice-powered AI model designed for natural language interactions. The model aims to improve AI assistants, automated customer service, and real-time translation.\n' +
    '    ([2])\n',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 2605ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What happened in world news yesterday? Give me a brief summary.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.4
    }
  },
  "streamingSettings": {
    "enabled": true
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 63,
  temperature: 0.1,
  systemInstruction: 'undefined...'
}
✅ [TextGeneration] Grounding metadata found
📥 [AI RESPONSE] Text Generation: {
  textLength: 1014,
  textPreview: "Here's a brief summary of what happened in world news yesterday, June 14, 2025:\n" +
    '\n' +
    '*   **Israel-Iran C...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 4
}
[TEST-AI] Result: {
  content: "Here's a brief summary of what happened in world news yesterday, June 14, 2025:\n" +
    '\n' +
    "*   **Israel-Iran Conflict:** Tensions remain high as Israel and Iran continue to exchange attacks. Israel has reportedly targeted Iran's Defense Ministry headquarters and struck nuclear facilities. Iran has launched missile barrages on Israel, with some missiles reaching Tel Aviv.\n" +
    '*   **Air India Plane Crash:** A London-bound Air India flight crashed in Ahmedabad, India, shortly after takeoff, killing over 240 people.\n' +
    "*   **Nigeria Attack:** Gunmen killed at least 100 people in Nigeria's Benue state.\n" +
    '*   **US-China Trade:** A U.S.-China trade truce leaves the issue of military-use rare earth unresolved.\n' +
    '*   **Minnesota Shooting:** Two Minnesota state lawmakers were shot, one fatally.\n' +
    '*   **US Military Parade:** A massive military parade took place in Washington D.C., coinciding with protests.\n' +
    '*   **Other Events:** There was a hot air balloon crash in Turkey. Former President of Nicaragua, Violeta Chamorro, died at 95.\n',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 2367ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "Tell me about recent developments in quantum computing.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "forceGoogleSearchGrounding": true,
  "systemInstructions": "Provide accurate, up-to-date information with proper citations."
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 55,
  temperature: 0.1,
  systemInstruction: 'Provide accurate, up-to-date information with proper citations....'
}
✅ [TextGeneration] Grounding metadata found
📥 [AI RESPONSE] Text Generation: {
  textLength: 3556,
  textPreview: "Here's a summary of recent developments in quantum computing:\n" +
    '\n' +
    '**General Trends:**\n' +
    '\n' +
    '*   **Increased ...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 5
}
[TEST-AI] Result: {
  content: "Here's a summary of recent developments in quantum computing:\n" +
    '\n' +
    '**General Trends:**\n' +
    '\n' +
    "*   **Increased Investment:** Quantum technology investment in the first five months of 2025 reached nearly three-quarters of 2024's total, with fewer but larger and more strategic funding rounds.\n" +
    '*   **Commercialization:** The industry is transitioning from experimental deployments to commercial-scale commitments, with growing sales and climbing stock prices.\n' +
    '*   **Diversifying Demand:** Governments, corporations, and research institutions are deploying quantum solutions, not just exploring them.\n' +
    '*   **Government Support:** Continued government funding is encouraging private-sector involvement.\n' +
    '*   **Integration with AI:** Quantum companies are combining quantum computers with classical supercomputers and AI methods.\n' +
    '\n' +
    '**Hardware Advancements:**\n' +
    '\n' +
    '*   **Logical Qubits:** Microsoft and Quantinuum entangled 12 logical qubits, reducing the physical error rate significantly.\n' +
    '*   **Quantum Memory:** Google demonstrated a quantum memory with below-threshold error rates and doubled coherence lifetimes compared to physical qubits.\n' +
    '*   **Networking:** Companies are connecting multiple processors to create larger systems. Photonic demonstrated distributed entanglement, and QuTech connected two small quantum computers in different cities. IBM is building L-couplers to scale its systems.\n' +
    '*   **Hypercube Network Technologies:** These enhance the scalability and performance of quantum systems by improving communication between qubits.\n' +
    '*   **Integrated Photonics:** This is emerging as a promising avenue for scalable quantum computing with trapped ions, potentially leading to more compact and efficient devices.\n' +
    '*   **New Materials:** Development of innovative materials like germanium and GeSn-based quantum well lasers to improve quantum hardware efficiency and performance.\n' +
    '*   **Topological Qubits:** Research teams are making progress toward topological qubits, which could lead to fault-tolerant quantum computing.\n' +
    '*   **Quantum Computing Chip:** Microsoft launched Majorana 1, a quantum computing chip with a Topological Core architecture.\n' +
    '\n' +
    '**Quantum Software and Machine Learning:**\n' +
    '\n' +
    '*   **Quantum Machine Learning Integration:** Machine learning is being integrated with quantum systems to enhance computational power. Frameworks like TorchQC enable the application of deep learning techniques in quantum dynamics and control.\n' +
    '*   **Generative Quantum AI:** Quantinuum launched a Generative Quantum AI framework that combines AI, quantum computing, and supercomputers.\n' +
    '*   **Software Stack Development:** Companies like Classiq are focused on building the software stack for quantum computing.\n' +
    '\n' +
    '**Commercial Applications:**\n' +
    '\n' +
    '*   **Real-world Use Cases:** Quantum use cases are being developed in aerospace, energy, financial services, and national security.\n' +
    '*   **Materials Discovery:** Quantum computing is being applied to specific problems in logistics, simulation, and materials discovery.\n' +
    '*   **Encryption:** Quantum hardware is being used to generate truly random encryption keys.\n' +
    '*    **Automotive and Aerospace:** Quantum computing is being used to improve the performance of hydrogen fuel cell catalysts and electric batteries mobility.\n' +
    '\n' +
    '**Other Key Points:**\n' +
    '\n' +
    '*   **Quantum Readiness:** CxOs need to prepare for quantum computing, as boardrooms are increasingly interested in quantum plans.\n' +
    '*   **National Capability:** Quantum computing is considered a national capability, with countries investing heavily to attract talent and secure data.\n',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 5014ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:55:37.762Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:55:38.027Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 495ms
 GET /favicon.ico 200 in 10ms
 ✓ Compiled /api/wizard/execute in 398ms (2313 modules)
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 267,
  temperature: 0.7,
  systemInstruction: 'You have Google Search grounding enabled. Use it to find current, up-to-date information. Do NOT gen...'
}
 ✓ Compiled /api/documents/save in 138ms (1474 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:55:43.022Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
✅ [TextGeneration] Grounding metadata found
📥 [AI RESPONSE] Text Generation: {
  textLength: 613,
  textPreview: 'Yesterday, June 14, 2025, based on the search results, the main news event in Austria was the afterm...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 1
}
 POST /api/wizard/execute 200 in 2762ms
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 745ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 187ms
 ✓ Compiled in 138ms (855 modules)
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'document-understanding-test',
    'code-execution-python',
    'test-title',
    'grounding-google-search',
    'function-calling-weather',
    'grounding-url-context',
    'combined-features-test',
    'final-summary',
    'function-calling-calculator',
    'chat-mode-test',
    'streaming-test',
    'image-understanding-test',
    'function-calling-unit-converter',
    'thinking-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'document-understanding-test',
    'code-execution-python',
    'test-title',
    'grounding-google-search',
    'function-calling-weather',
    'grounding-url-context',
    'combined-features-test',
    'final-summary',
    'function-calling-calculator',
    'chat-mode-test',
    'streaming-test',
    'image-understanding-test',
    'function-calling-unit-converter',
    'thinking-mode-test'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 207ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 213ms
 GET /favicon.ico 200 in 16ms
 GET /favicon.ico 200 in 13ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:56:28.716Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 137ms (855 modules)
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'function-calling-unit-converter',
    'chat-mode-test',
    'combined-features-test',
    'grounding-url-context',
    'streaming-test',
    'function-calling-weather',
    'thinking-mode-test',
    'document-understanding-test',
    'grounding-google-search',
    'test-title',
    'code-execution-python',
    'final-summary',
    'image-understanding-test',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'function-calling-unit-converter',
    'chat-mode-test',
    'combined-features-test',
    'grounding-url-context',
    'streaming-test',
    'function-calling-weather',
    'thinking-mode-test',
    'document-understanding-test',
    'grounding-google-search',
    'test-title',
    'code-execution-python',
    'final-summary',
    'image-understanding-test',
    'function-calling-calculator'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'document-understanding-test',
    'code-execution-python',
    'test-title',
    'grounding-google-search',
    'function-calling-weather',
    'grounding-url-context',
    'combined-features-test',
    'final-summary',
    'function-calling-calculator',
    'chat-mode-test',
    'streaming-test',
    'image-understanding-test',
    'function-calling-unit-converter',
    'thinking-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'document-understanding-test',
    'code-execution-python',
    'test-title',
    'grounding-google-search',
    'function-calling-weather',
    'grounding-url-context',
    'combined-features-test',
    'final-summary',
    'function-calling-calculator',
    'chat-mode-test',
    'streaming-test',
    'image-understanding-test',
    'function-calling-unit-converter',
    'thinking-mode-test'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 125ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 126ms
 GET /favicon.ico 200 in 19ms
 GET /favicon.ico 200 in 4ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:56:40.302Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 130ms (855 modules)
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'function-calling-unit-converter',
    'chat-mode-test',
    'combined-features-test',
    'grounding-url-context',
    'streaming-test',
    'function-calling-weather',
    'thinking-mode-test',
    'document-understanding-test',
    'grounding-google-search',
    'test-title',
    'code-execution-python',
    'final-summary',
    'image-understanding-test',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'function-calling-unit-converter',
    'chat-mode-test',
    'combined-features-test',
    'grounding-url-context',
    'streaming-test',
    'function-calling-weather',
    'thinking-mode-test',
    'document-understanding-test',
    'grounding-google-search',
    'test-title',
    'code-execution-python',
    'final-summary',
    'image-understanding-test',
    'function-calling-calculator'
  ]
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'document-understanding-test',
    'code-execution-python',
    'test-title',
    'grounding-google-search',
    'function-calling-weather',
    'grounding-url-context',
    'combined-features-test',
    'final-summary',
    'function-calling-calculator',
    'chat-mode-test',
    'streaming-test',
    'image-understanding-test',
    'function-calling-unit-converter',
    'thinking-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'document-understanding-test',
    'code-execution-python',
    'test-title',
    'grounding-google-search',
    'function-calling-weather',
    'grounding-url-context',
    'combined-features-test',
    'final-summary',
    'function-calling-calculator',
    'chat-mode-test',
    'streaming-test',
    'image-understanding-test',
    'function-calling-unit-converter',
    'thinking-mode-test'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 124ms
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 125ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T09:56:52.620Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
Debugger listening on ws://127.0.0.1:9229/a46c174f-4203-4c8f-9c02-cd499460ec1d
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 280500,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/6663fb57-83e5-4851-bb1b-8c0060069ef3
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1792ms
 ○ Compiling /api/test-ai ...
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ✓ Compiled /api/test-ai in 885ms (587 modules)
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What are the latest AI developments this week? Provide 3 specific examples with sources.",
  "model": "gemini-2.0-flash",
  "temperature": 0.2,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.3
    }
  },
  "systemInstructions": "You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources.",
  "streamingSettings": {
    "enabled": false
  }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 88,
  temperature: 0.2,
  systemInstruction: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your s...'
}
✅ [TextGeneration] Grounding metadata found
📥 [AI RESPONSE] Text Generation: {
  textLength: 2211,
  textPreview: 'Okay, I will provide you with 3 examples of the latest AI developments from this week (June 9th - Ju...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 3
}
[TEST-AI] Result: {
  content: 'Okay, I will provide you with 3 examples of the latest AI developments from this week (June 9th - June 15th, 2025), using Google Search to gather the most up-to-date information.\n' +
    '\n' +
    'Here are three recent AI developments from this week:\n' +
    '\n' +
    '1.  **Apple Intelligence Enhancements:** Apple unveiled new Apple Intelligence features across its devices (iPhone, iPad, Mac, Apple Watch, and Apple Vision Pro). These include improved Live Translation, visual intelligence updates, enhancements to Image Playground and Genmoji, and direct access for Shortcuts to Apple Intelligence. Developers can now access the on-device large language model at the core of Apple Intelligence. These features will be available for testing starting today and to users this fall. (Source: [https://www.apple.com/newsroom/2025/06/apple-intelligence-gets-even-more-powerful-with-new-capabilities-across-apple-devices/](https://www.apple.com/newsroom/2025/06/apple-intelligence-gets-even-more-powerful-with-new-capabilities-across-apple-devices/))\n' +
    "2.  **Meta's V-JEPA 2 World Model:** Meta introduced V-JEPA 2, a video-trained world model that enhances robots' and AI agents' understanding of the physical world and their ability to predict how it will respond to actions. This model enables robots to interact with unfamiliar objects and environments, performing tasks like reaching, picking up, and placing objects. Meta also released three new benchmarks to evaluate physical reasoning in AI models. (Source: [https://about.fb.com/news/2025/06/our-new-model-helps-ai-think-before-it-acts/](https://about.fb.com/news/2025/06/our-new-model-helps-ai-think-before-it-acts/))\n" +
    "3.  **Mistral AI's Reasoning Model - Magistral:** Mistral AI launched Magistral, its first reasoning model, designed for domain-specific, transparent, and multilingual reasoning. It comes in two versions: Magistral Small (a 24B parameter open-source version) and Magistral Medium (an enterprise version). Magistral is versatile and suitable for applications requiring longer thought processing and better accuracy, such as legal research, financial forecasting, and software development. (Source: [https://mistral.ai/news/magistral/](https://mistral.ai/news/magistral/))\n",
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: false
  - Has grounding sources: false
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 6395ms
Debugger listening on ws://127.0.0.1:9229/4c8b5df9-3b7f-46e5-8863-2f7396327ed4
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 78628,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/80ca5327-0dab-45fd-a96e-cd56f4f863d1
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1313ms
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ○ Compiling /api/test-ai ...
 ✓ Compiled /api/test-ai in 545ms (587 modules)
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  "promptTemplate": "What are the latest developments in quantum computing this week? Provide 3 specific examples.",
  "model": "gemini-2.0-flash",
  "temperature": 0.1,
  "groundingSettings": {
    "googleSearch": {
      "enabled": true,
      "dynamicThreshold": 0.3
    }
  },
  "systemInstructions": "You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources with URLs."
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 93,
  temperature: 0.1,
  systemInstruction: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your s...'
}
✅ [TextGeneration] Grounding metadata found
📥 [AI RESPONSE] Text Generation: {
  textLength: 1044,
  textPreview: 'Here are three of the latest developments in quantum computing this week:\n' +
    '\n' +
    '1.  **Quantum Internet Ad...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 4
}
[TEST-AI] Result: {
  content: 'Here are three of the latest developments in quantum computing this week:\n' +
    '\n' +
    '1.  **Quantum Internet Advancement:** A team of Danish and German scientists has started a major project focused on creating new technology that could be the foundation for a future quantum internet. They are utilizing a rare element called erbium along with silicon chips. ([1])\n' +
    "2.  **IBM's Quantum Computing Plans:** IBM is working on building the world's first large-scale quantum computer that can operate without errors. This announcement has boosted IBM's stock and is seen as a positive sign for the quantum computing industry. ([2])\n" +
    `3.  **Quantum Error Correction Breakthrough:** Google has achieved a milestone with its new Willow quantum processor, a ~100-qubit superconducting chip, by demonstrating "below-threshold" error correction. By scaling Willow's qubit grid from 9 to 49 encoded qubits, they were able to cut the error rate in half with each step, marking the first time that adding more qubits has made the overall computation more reliable. ([3])\n`,
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: false
  - Has grounding sources: false
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 3553ms
 ✓ Compiled in 15ms
Debugger listening on ws://127.0.0.1:9229/73b23729-200d-4efb-9303-e051afae68ca
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 259395,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/24ee6e45-cb42-47e1-958d-b34e1142ebcc
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1306ms
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ○ Compiling /api/test-ai ...
 ✓ Compiled /api/test-ai in 576ms (587 modules)
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'What are the latest AI developments this week? Provide 3 specific examples with sources.',
  model: 'gemini-2.0-flash',
  temperature: 0.2,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  systemInstructions: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources.',
  streamingSettings: { enabled: false }
}
[runAiStage] Starting with new SDK
📤 [AI REQUEST] Text Generation: {
  model: 'gemini-2.0-flash',
  promptLength: 88,
  temperature: 0.2,
  systemInstruction: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your s...'
}
✅ [TextGeneration] Grounding metadata found
📥 [AI RESPONSE] Text Generation: {
  textLength: 2864,
  textPreview: 'Okay, I will provide you with 3 examples of the latest AI developments this week.\n' +
    '\n' +
    'Here are three re...',
  usageMetadata: undefined,
  finishReason: undefined,
  hasGroundingMetadata: true,
  groundingSourcesCount: 10
}
[TEST-AI] Result: {
  content: 'Okay, I will provide you with 3 examples of the latest AI developments this week.\n' +
    '\n' +
    'Here are three recent AI developments:\n' +
    '\n' +
    '1.  **AI Agents with Autonomous Capabilities:** AI agents are evolving to perform tasks autonomously, interpreting requests, retrieving information, and providing personalized responses without human intervention. Gartner forecasts that agentic AI will be integrated into 33% of enterprise software applications in 2028, compared to less than 1% in 2024.\n' +
    '    *   Source: [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHuBJdRIl1C2PNceK-vWXRwSEj54hDw-rAkp6T4uCSyatRuHtDuN1eOJNymO304zOPl0TdV1ilsN3OrZaWMx-HTl\\_rAe0oBNYnFVYzbOK6S6\\_HSYOpstTnB6qlhwMSLX5AnuOFnqrbLiV6ERRm80oP\\_fepjBeFFEHfJr6Ki0sT4aXrUvplAQJ4phORUzsPiLnPp9DN47KUkZdd5vFtO\\_EpbkDDl55wzaIVztMR3r3Q=](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHuBJdRIl1C2PNceK-vWXRwSEj54hDw-rAkp6T4uCSyatRuHtDuN1eOJNymO304zOPl0TdV1ilsN3OrZaWMx-HTl_rAe0oBNYnFVYzbOK6S6_HSYOpstTnB6qlhwMSLX5AnuOFnqrbLiV6ERRm80oP_fepjBeFFEHfJr6Ki0sT4aXrUvplAQJ4phORUzsPiLnPp9DN47KUkZdd5vFtO_EpbkDDl55wzaIVztMR3r3Q=)\n' +
    '2.  **Advanced Natural Language Processing (NLP):** NLP technologies have reached new heights, enabling AI systems to comprehend and generate human language with unprecedented accuracy and nuance. Conversational AI agents can engage in complex dialogues, understand context, and exhibit emotional intelligence, revolutionizing customer service, education, and entertainment.\n' +
    '    *   Source: [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQFWVTNqC1\\_bXRsUKnbRlFrq6hYTSgcP3ILvDR4vhed7sHfD\\_NeW8YNmfJXhJjQfBsaoiHOmgn7Db4np1ammeOCZa3TpXPPVSMgW3vb-D9uusQ5bTWvuaRRrDMOAlF5oRGDSsLIYVve\\_NdMre-VSbY6\\_dG5ZbzNoMVjvGQ==](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQFWVTNqC1_bXRsUKnbRlFrq6hYTSgcP3ILvDR4vhed7sHfD_NeW8YNmfJXhJjQfBsaoiHOmgn7Db4np1ammeOCZa3TpXPPVSMgW3vb-D9uusQ5bTWvuaRRrDMOAlF5oRGDSsLIYVve_NdMre-VSbY6_dG5ZbzNoMVjvGQ==)\n' +
    '3.  **AI in Healthcare for Personalized Medicine and Predictive Analytics:** The healthcare sector has witnessed significant AI-driven transformations, particularly in personalized medicine and predictive analytics. AI algorithms analyze extensive datasets, including genetic information and patient histories, to tailor treatment plans and assist in early disease detection and prognosis.\n' +
    '    *   Source: [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQFWVTNqC1\\_bXRsUKnbRlFrq6hYTSgcP3ILvDR4vhed7sHfD\\_NeW8YNmfJXhJjQfBsaoiHOmgn7Db4np1ammeOCZa3TpXPPVSMgW3vb-D9uusQ5bTWvuaRRrDMOAlF5oRGDSsLIYVve\\_NdMre-VSbY6\\_dG5ZbzNoMVjvGQ==](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQFWVTNqC1_bXRsUKnbRlFrq6hYTSgcP3ILvDR4vhed7sHfD_NeW8YNmfJXhJjQfBsaoiHOmgn7Db4np1ammeOCZa3TpXPPVSMgW3vb-D9uusQ5bTWvuaRRrDMOAlF5oRGDSsLIYVve_NdMre-VSbY6_dG5ZbzNoMVjvGQ==)\n',
  usage: undefined,
  groundingMetadata: undefined,
  groundingSources: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: false
  - Has grounding sources: false
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 7819ms
 ✓ Compiled in 20ms
Debugger listening on ws://127.0.0.1:9229/0f859290-3f55-4075-832c-127d1529df3f
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 413483,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/76633e91-3ac8-4126-88b6-bada23c01239
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1350ms
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ○ Compiling /api/test-ai ...
 ✓ Compiled /api/test-ai in 645ms (590 modules)
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'What are the latest AI developments this week? Provide 3 specific examples with sources.',
  model: 'gemini-2.0-flash',
  temperature: 0.2,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  systemInstructions: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources.',
  streamingSettings: { enabled: false }
}
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.2,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 88
[runAiStage] First 200 chars of filled prompt: What are the latest AI developments this week? Provide 3 specific examples with sources.
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 88,
  model: 'gemini-2.0-flash',
  temperature: 0.2,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'What are the latest AI developments this week? Provide 3 specific examples with sources....',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 88
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.2
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 10,
  supportsCount: 8,
  searchQueries: 3,
  sourcesExtracted: 10
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 1216,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 10,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0,
  hasUsage: false
}
[TEST-AI] Result: {
  content: 'Here are three of the latest AI developments from this week:\n' +
    '\n' +
    '1.  **OpenAI Releases o3 and o4-mini Reasoning Models:** On June 10, 2025, OpenAI announced the release of o3 and o4-mini, new models in their o-series designed to think for longer before responding. These models are the smartest released to date, with o3 being the most powerful reasoning model excelling in coding, math, science, and visual perception. The o4-mini is optimized for fast, cost-efficient reasoning and performs well in math, coding, and visual tasks. OpenAI o3-pro is now available to Pro users in ChatGPT, as well as in their API. ([9])\n' +
    '2.  **Google Enhances Gemini App with Veo 3:** Google has added new capabilities to the Gemini app, including the state-of-the-art video generation model, Veo 3. Veo 3 is the first video generation model with native support for sound effects, background noises, and dialogue between characters, making it easier to create videos within the app. ([12])\n' +
    "3.  **NVIDIA Helps Germany Lead Europe's AI Manufacturing Race:** NVIDIA is contributing to Germany's efforts to lead AI manufacturing in Europe. This collaboration aims to boost AI development and production capabilities within the region. ([8])\n",
  groundingMetadata: {
    searchEntryPoint: {
      renderedContent: '<style>\n' +
        '.container {\n' +
        '  align-items: center;\n' +
        '  border-radius: 8px;\n' +
        '  display: flex;\n' +
        '  font-family: Google Sans, Roboto, sans-serif;\n' +
        '  font-size: 14px;\n' +
        '  line-height: 20px;\n' +
        '  padding: 8px 12px;\n' +
        '}\n' +
        '.chip {\n' +
        '  display: inline-block;\n' +
        '  border: solid 1px;\n' +
        '  border-radius: 16px;\n' +
        '  min-width: 14px;\n' +
        '  padding: 5px 16px;\n' +
        '  text-align: center;\n' +
        '  user-select: none;\n' +
        '  margin: 0 8px;\n' +
        '  -webkit-tap-highlight-color: transparent;\n' +
        '}\n' +
        '.carousel {\n' +
        '  overflow: auto;\n' +
        '  scrollbar-width: none;\n' +
        '  white-space: nowrap;\n' +
        '  margin-right: -12px;\n' +
        '}\n' +
        '.headline {\n' +
        '  display: flex;\n' +
        '  margin-right: 4px;\n' +
        '}\n' +
        '.gradient-container {\n' +
        '  position: relative;\n' +
        '}\n' +
        '.gradient {\n' +
        '  position: absolute;\n' +
        '  transform: translate(3px, -9px);\n' +
        '  height: 36px;\n' +
        '  width: 9px;\n' +
        '}\n' +
        '@media (prefers-color-scheme: light) {\n' +
        '  .container {\n' +
        '    background-color: #fafafa;\n' +
        '    box-shadow: 0 0 0 1px #0000000f;\n' +
        '  }\n' +
        '  .headline-label {\n' +
        '    color: #1f1f1f;\n' +
        '  }\n' +
        '  .chip {\n' +
        '    background-color: #ffffff;\n' +
        '    border-color: #d2d2d2;\n' +
        '    color: #5e5e5e;\n' +
        '    text-decoration: none;\n' +
        '  }\n' +
        '  .chip:hover {\n' +
        '    background-color: #f2f2f2;\n' +
        '  }\n' +
        '  .chip:focus {\n' +
        '    background-color: #f2f2f2;\n' +
        '  }\n' +
        '  .chip:active {\n' +
        '    background-color: #d8d8d8;\n' +
        '    border-color: #b6b6b6;\n' +
        '  }\n' +
        '  .logo-dark {\n' +
        '    display: none;\n' +
        '  }\n' +
        '  .gradient {\n' +
        '    background: linear-gradient(90deg, #fafafa 15%, #fafafa00 100%);\n' +
        '  }\n' +
        '}\n' +
        '@media (prefers-color-scheme: dark) {\n' +
        '  .container {\n' +
        '    background-color: #1f1f1f;\n' +
        '    box-shadow: 0 0 0 1px #ffffff26;\n' +
        '  }\n' +
        '  .headline-label {\n' +
        '    color: #fff;\n' +
        '  }\n' +
        '  .chip {\n' +
        '    background-color: #2c2c2c;\n' +
        '    border-color: #3c4043;\n' +
        '    color: #fff;\n' +
        '    text-decoration: none;\n' +
        '  }\n' +
        '  .chip:hover {\n' +
        '    background-color: #353536;\n' +
        '  }\n' +
        '  .chip:focus {\n' +
        '    background-color: #353536;\n' +
        '  }\n' +
        '  .chip:active {\n' +
        '    background-color: #464849;\n' +
        '    border-color: #53575b;\n' +
        '  }\n' +
        '  .logo-light {\n' +
        '    display: none;\n' +
        '  }\n' +
        '  .gradient {\n' +
        '    background: linear-gradient(90deg, #1f1f1f 15%, #1f1f1f00 100%);\n' +
        '  }\n' +
        '}\n' +
        '</style>\n' +
        '<div class="container">\n' +
        '  <div class="headline">\n' +
        '    <svg class="logo-light" width="18" height="18" viewBox="9 9 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M42.8622 27.0064C42.8622 25.7839 42.7525 24.6084 42.5487 23.4799H26.3109V30.1568H35.5897C35.1821 32.3041 33.9596 34.1222 32.1258 35.3448V39.6864H37.7213C40.9814 36.677 42.8622 32.2571 42.8622 27.0064V27.0064Z" fill="#4285F4"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M26.3109 43.8555C30.9659 43.8555 34.8687 42.3195 37.7213 39.6863L32.1258 35.3447C30.5898 36.3792 28.6306 37.0061 26.3109 37.0061C21.8282 37.0061 18.0195 33.9811 16.6559 29.906H10.9194V34.3573C13.7563 39.9841 19.5712 43.8555 26.3109 43.8555V43.8555Z" fill="#34A853"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M16.6559 29.8904C16.3111 28.8559 16.1074 27.7588 16.1074 26.6146C16.1074 25.4704 16.3111 24.3733 16.6559 23.3388V18.8875H10.9194C9.74388 21.2072 9.06992 23.8247 9.06992 26.6146C9.06992 29.4045 9.74388 32.022 10.9194 34.3417L15.3864 30.8621L16.6559 29.8904V29.8904Z" fill="#FBBC05"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M26.3109 16.2386C28.85 16.2386 31.107 17.1164 32.9095 18.8091L37.8466 13.8719C34.853 11.082 30.9659 9.3736 26.3109 9.3736C19.5712 9.3736 13.7563 13.245 10.9194 18.8875L16.6559 23.3388C18.0195 19.2636 21.8282 16.2386 26.3109 16.2386V16.2386Z" fill="#EA4335"/>\n' +
        '    </svg>\n' +
        '    <svg class="logo-dark" width="18" height="18" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">\n' +
        '      <circle cx="24" cy="23" fill="#FFF" r="22"/>\n' +
        '      <path d="M33.76 34.26c2.75-2.56 4.49-6.37 4.49-11.26 0-.89-.08-1.84-.29-3H24.01v5.99h8.03c-.4 2.02-1.5 3.56-3.07 4.56v.75l3.91 2.97h.88z" fill="#4285F4"/>\n' +
        '      <path d="M15.58 25.77A8.845 8.845 0 0 0 24 31.86c1.92 0 3.62-.46 4.97-1.31l4.79 3.71C31.14 36.7 27.65 38 24 38c-5.93 0-11.01-3.4-13.45-8.36l.17-1.01 4.06-2.85h.8z" fill="#34A853"/>\n' +
        '      <path d="M15.59 20.21a8.864 8.864 0 0 0 0 5.58l-5.03 3.86c-.98-2-1.53-4.25-1.53-6.64 0-2.39.55-4.64 1.53-6.64l1-.22 3.81 2.98.22 1.08z" fill="#FBBC05"/>\n' +
        '      <path d="M24 14.14c2.11 0 4.02.75 5.52 1.98l4.36-4.36C31.22 9.43 27.81 8 24 8c-5.93 0-11.01 3.4-13.45 8.36l5.03 3.85A8.86 8.86 0 0 1 24 14.14z" fill="#EA4335"/>\n' +
        '    </svg>\n' +
        '    <div class="gradient-container"><div class="gradient"></div></div>\n' +
        '  </div>\n' +
        '  <div class="carousel">\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQEv98yhkVvqHOL0_lonB1v1UqHBEiwA4a6uNKxvoBZ5RgGg0W8nEyaW87IvKdpcdA9fRIsdaUa_VigVbt1h_o62Z0CQtP-5-7T2Ic5vWhCHcrFSp58qaCTATRqxVCR_7XRrzUapHsMVhRJ61eWVQVmBD7AiGs4KwY9mFqegCAFIh5tS41b6NHnZJGVFGJwV8rLUUdTy-_-lRA7acSUwpPjfb77mREEzWoHY2tn6CiymMrw=">recent breakthroughs in artificial intelligence</a>\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQG8W27S_FhyoFHOMJyGxqsOansXARkR6sWViv68AztUtu5gRE-tEyPaFzDGl-ay4xtHVcWFER7RLNsNb8xz8WTg6gxFe5VD1M-4TXx6V9z3c1AA-LlU7YPyDwo-jYcExdZ4pH2bJoqdL6AkfuafhSeMfrtLlvizAHHMfIcOo-s0YQtHZf_3tdIUX7jFDhMfowjyoMfq3ZcAWUB9t_o3XGLFOf4=">latest AI developments this week</a>\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQFMwtoz3DLfde0tQyjNqkHP9wY3_ww8-Ai-G6rpu1HVAjHrxGIC02k_bwqH-8Bsj19VS94Y-g6ZNBnjz85QnVaCLoAKQ_KLCoBDycKvK-WN8RKFKww_FjZ_vLXKNk2hpV_Yco8yhnMGLiJJTt043_YkfsONtZFrzmtKw1MltoioO64ECmCd48nR9dXgU06Kde42oMADkMSL0tBta9EHDhNwoXo=">new AI models released this week</a>\n' +
        '  </div>\n' +
        '</div>\n'
    },
    groundingChunks: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object]
    ],
    groundingSupports: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object]
    ],
    retrievalMetadata: {},
    webSearchQueries: [
      'latest AI developments this week',
      'recent breakthroughs in artificial intelligence',
      'new AI models released this week'
    ]
  },
  groundingSources: [
    {
      type: 'search',
      title: 'openai.com',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGRMmGvSxrtfgCCheLr2qJljQscJ9B1Pu4n25vRnCVZnJCVpD8aLN0nVsGDqbE6Gdo_jb--6_goCFmdDNOAay7olG1dFxNfmILGa222XMtgee8RbGay0JQFo0Q_-d-vlStp0PLTxAJawYfe11FD9g==',
      snippet: ''
    },
    {
      type: 'search',
      title: 'openai.com',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQG4z17akc6VA6YHaUoNivYhqWbAwVXN75xD1LUsXbGiE4JPVOulsVL_wFRPFHNjEhlz5xZs7tT6-s2FIoIVbtatXqVzdHl8hYOAh_YR-PUPitOEk3ctpypGLrGA7tdL91YckUTURWg3eRqQXf8iRT4123whcFcI9JU5',
      snippet: ''
    },
    {
      type: 'search',
      title: 'blog.google',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQEF4ZoUezLw9HYAj-iinM4bM89-tyycmWWrWfG7HGxcMNTFpHbr1Xidt2zodN46l_38lZEdB765E2pWgez567GhDL_cGqDbgeRHbFVzeq4bCg9GPmuoYUeRolUfohR9O5o80S9BQCw6aViDjav79McVryuxcv5R3w==',
      snippet: ''
    },
    {
      type: 'search',
      title: 'keele.ac.uk',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQFqdtSeFLORBbzwSeTbmywsGQeM3Bfz2_n-7s2hk0tPuj10tYD0UJtHNgy3QijGTb-WVuwhcKu7XfOdi6lprAaQBYtA03re5ngDeeiuAgkYHZ4ARL82Ael2ZO8PmZFKuMq0KyPieUDc1gBWoa1AJePFIMA-aO5LdqSFo2ORsJQ4mKVr4yWn5xIV',
      snippet: ''
    },
    {
      type: 'search',
      title: 'economictimes.com',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGYwx3eZSY8ceBqXhkgyumKDb78F8JxYWC_3G9gXnkq87VZwGQ2W41iIsyyJ7LGtP0wzZ_Cjv8-lSqK4yZnNuKe8wqCDcdmZcW5QuOjxvh0tYNtzJnsmbjmVuSfe3IaRBwHhbWlBpocrbA7l8wHrSDbcGM=',
      snippet: ''
    },
    {
      type: 'search',
      title: 'blog.google',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGuvu7vm8OZTdD96hQsbiaqkkg0KabDlkc3dcn1xGeEnVy0kV9XKKG5zPiHGzbuaxWhTaKXbKeddC9QzcH3GuE_NzCx_o34GANMjN6cjltZRpbhWPo7BvvFx82iQ7IJizF0RG4u_--vf_RfbUSJ_rHeb9K5fTcffCP5',
      snippet: ''
    },
    {
      type: 'search',
      title: 'softude.com',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQFWkATFc3rR7I4ZHzFMF_1SiBK7hT_5hzxGk-SaSeoCdyPixOwlq5JU_xLWygLRMl0x1HnrDDuCWps6Q6LXrQFj55Vgv59r4CZlg4RqUUP86cn-lHYxqz35CvpsaS_OaCOrIwVi4DHXnkJ29dr26_MuBi850HC0Sdpbxv9Wpf7gwbOkQZM1NR53',
      snippet: ''
    },
    {
      type: 'search',
      title: 'ironhack.com',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGfL3t17XP4FQ3liZ8EfdCPp4rCVUYSSKP_uP4ZSv3A59IMLERsLvzwzO18nNVzrhClqhydZrGf6KhJi8fftiT0_Zrx43ZKwE7iCVEJAhPuhiIe1CEKxxUFOHoBubf-V9ehelZ1_7v43JHx7o_yMSn1p-OfNUcCWIDc-Cv0vQrnkUC38lriljqM2RKii0T0SToJV2nflg==',
      snippet: ''
    },
    {
      type: 'search',
      title: 'artificialintelligence-news.com',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQG0OJ_JLdxiy7OFvkqnrSRNsqNC1XuYWIagZ8_ZKf90uLFHh8s7xGsCKqLL0y8peNYqIyFFbm2NIBPrIWppIsAFVtBj_qP9cGA6LyirW1RvMUkDGfYG5_9qfBx7ohRVsTIzNeWK91E=',
      snippet: ''
    },
    {
      type: 'search',
      title: 'crescendo.ai',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQFEDpG0YUjb1wBdg_CQ6b8gRF25HqNt89-7QthYezHjKXo4xkDCCqak1j7JIoLQVp3uJIlroyykzeZrcaUAnQgonlU5d6ajN3_hloH10X-7aUza6mSBU0vl90B9jkZGP1p8GFttvomsFUutHFQRWtk3azE=',
      snippet: ''
    }
  ],
  thinkingSteps: undefined,
  outputImages: undefined,
  updatedChatHistory: undefined,
  usage: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: true
  - Has grounding sources: true
  - Grounding metadata keys: [
  'searchEntryPoint',
  'groundingChunks',
  'groundingSupports',
  'retrievalMetadata',
  'webSearchQueries'
]
  - Search queries: [
  'latest AI developments this week',
  'recent breakthroughs in artificial intelligence',
  'new AI models released this week'
]
  - Grounding chunks: 10
  - Grounding supports: 8
  - Grounding sources count: 10
  - First source: {
  type: 'search',
  title: 'openai.com',
  url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGRMmGvSxrtfgCCheLr2qJljQscJ9B1Pu4n25vRnCVZnJCVpD8aLN0nVsGDqbE6Gdo_jb--6_goCFmdDNOAay7olG1dFxNfmILGa222XMtgee8RbGay0JQFo0Q_-d-vlStp0PLTxAJawYfe11FD9g==',
  snippet: ''
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 4494ms
 ✓ Compiled in 136ms (313 modules)
Debugger listening on ws://127.0.0.1:9229/e826f3a3-e0f4-4e29-96d8-664404f00c84
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 169053,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/7cf4e267-8cf7-4bb7-9427-9dbfe0524b64
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1360ms
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ○ Compiling /api/wizard/execute ...
 ✓ Compiled /api/wizard/execute in 715ms (590 modules)
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 267
[runAiStage] First 200 chars of filled prompt: Answer this question using current information from Google Search: what happened ysterday in austria


IMPORTANT: Use Google Search grounding to find real, current information. Provide actual search r
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 267,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Answer this question using current information from Google Search: what happened ysterday in austria...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 267
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.7
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
 ○ Compiling /api/documents/save ...
 ✓ Compiled /api/documents/save in 835ms (724 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:12:45.585Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 1727ms
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 3,
  supportsCount: 3,
  searchQueries: 1,
  sourcesExtracted: 3
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 1030,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 3,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0,
  hasUsage: false
}
 POST /api/wizard/execute 200 in 3779ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 263ms
 ✓ Compiled /api/test-ai in 206ms (726 modules)
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'What are the latest breakthrough developments in quantum computing from the past month? Provide 3 specific examples with sources and explain their significance.',
  model: 'gemini-2.0-flash',
  temperature: 0.2,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  systemInstructions: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources with URLs and provide detailed explanations.',
  streamingSettings: { enabled: false }
}
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.2,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 160
[runAiStage] First 200 chars of filled prompt: What are the latest breakthrough developments in quantum computing from the past month? Provide 3 specific examples with sources and explain their significance.
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 160,
  model: 'gemini-2.0-flash',
  temperature: 0.2,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'What are the latest breakthrough developments in quantum computing from the past month? Provide 3 sp...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 160
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.2
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 0,
  supportsCount: 0,
  searchQueries: 3,
  sourcesExtracted: 0
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 4175,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 0,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0,
  hasUsage: false
}
[TEST-AI] Result: {
  content: 'Here are three recent breakthrough developments in quantum computing:\n' +
    '\n' +
    "1.  **IBM's Path to Fault-Tolerant Quantum Computing:** IBM has unveiled its roadmap to building the world's first large-scale, fault-tolerant quantum computer, named IBM Quantum Starling, expected by 2029. This system will be housed in a new IBM Quantum Data Center in Poughkeepsie, New York, and is projected to perform 20,000 times more operations than current quantum computers. Key to this is the development of processors like IBM Quantum Loon (expected in 2025) and IBM Quantum Kookaburra (2026), which are designed to test and implement error correction and modularity. A large-scale, fault-tolerant quantum computer could revolutionize fields like drug development, materials discovery, and chemistry by enabling the execution of hundreds of millions to billions of operations. [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHUhMTUBBM5aC4qHosAj3PNYNVJFAPJvSwOK69c86kGTwtlyeW0WQQg\\_Ut0QY2ms74w8jpZ56\\_SKn0IPw1tD3BYlTg-3PfZCGz-NAhGHDMyPAQpGAo5fXqbAm5NMNmT\\_N5JTD5mk4aPzpSf61rXWo1Lt\\_471P8zX6bHoOMkV6W4eS8H6KSyZAfIKqdu6N8WH3TKtakut\\_ecLNx1BdgYzt\\_mhtro2mY1AEVOnWmQ2vTLFyOOE03gYWk3aH5zGkKwV57m60GdoLKdu34F6nScDTPyRrX4oZ4=](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHUhMTUBBM5aC4qHosAj3PNYNVJFAPJvSwOK69c86kGTwtlyeW0WQQg_Ut0QY2ms74w8jpZ56_SKn0IPw1tD3BYlTg-3PfZCGz-NAhGHDMyPAQpGAo5fXqbAm5NMNmT_N5JTD5mk4aPzpSf61rXWo1Lt_471P8zX6bHoOMkV6W4eS8H6KSyZAfIKqdu6N8WH3TKtakut_ecLNx1BdgYzt_mhtro2mY1AEVOnWmQ2vTLFyOOE03gYWk3aH5zGkKwV57m60GdoLKdu34F6nScDTPyRrX4oZ4=)\n" +
    `2.  **Nvidia's CUDA-Q for Hybrid Quantum-Classical Computing:** Nvidia CEO Jensen Huang announced that quantum computing is reaching an "inflection point" and introduced CUDA-Q, a platform designed to integrate quantum and classical computing systems. CUDA-Q is an open-source platform that allows hardware and software components to work together in quantum computing applications. Huang envisions a future where every supercomputer will have a quantum processing unit (QPU) connected to GPUs, enabling solutions to previously unsolvable problems. This development suggests a shift towards hybrid architectures to leverage the strengths of both quantum and classical computing. [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQE5587-jmKOpJ6xydnYJPHX2DR04iEyya6n7txaDiPvFZAPX0V\\_bJ1vS54aDPwauRQPzf9g8pDtfDBSIES3TmrdZV--T16EN8F5SndPRz8MdYy9zrVlrAJuHm3TrdFut2O7frOXmCFUzXfHY7E9vlGGCJOH8JbPbwUcmrDzGdMkqj7dQSjZcvdjFOl73-v5HXe3kbaddVTWUjyqdh3kVvHIZT5GgdYOL4faKNhdiQ==](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQE5587-jmKOpJ6xydnYJPHX2DR04iEyya6n7txaDiPvFZAPX0V_bJ1vS54aDPwauRQPzf9g8pDtfDBSIES3TmrdZV--T16EN8F5SndPRz8MdYy9zrVlrAJuHm3TrdFut2O7frOXmCFUzXfHY7E9vlGGCJOH8JbPbwUcmrDzGdMkqj7dQSjZcvdjFOl73-v5HXe3kbaddVTWUjyqdh3kVvHIZT5GgdYOL4faKNhdiQ==)\n` +
    "3.  **Microsoft's Topological Qubit and Majorana 1 Processor:** Microsoft is developing topological qubits and has created the Majorana 1 processor. This processor is built using a new material called a topoconductor and is designed to scale to a million qubits on a single chip. Topological qubits are expected to be more stable and less prone to errors than traditional qubits, addressing a significant challenge in quantum computing. Microsoft aims to build a fault-tolerant prototype based on topological qubits, potentially leading to more reliable and scalable quantum computers. [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQF6mT0M-51p\\_2OeBSujiY4STo6pl9\\_tAEY4AndeqKgCSPFq9x1vnRP4djdmYNrHNtRpJIeLAVXWCUylRnhr0swolziCGylIEP3EWGMnUe5oJMkBu\\_2QbpCdLaiIljL\\_AlzCeqZz2uncHpq3SO9xqJBtamUdXNeMBibKCLclHKGOkjLPtHIKtfir6lnSGCfUVg4Hdt6QADeuiT9N8CCZKtBOxrTbp5oxGoZ0GJDrlRoOAhJ3yxH47pUYxo5CFqcSeBbCfv2-Y0wHVBYtkmfBkcd0toWhZg==](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQF6mT0M-51p_2OeBSujiY4STo6pl9_tAEY4AndeqKgCSPFq9x1vnRP4djdmYNrHNtRpJIeLAVXWCUylRnhr0swolziCGylIEP3EWGMnUe5oJMkBu_2QbpCdLaiIljL_AlzCeqZz2uncHpq3SO9xqJBtamUdXNeMBibKCLclHKGOkjLPtHIKtfir6lnSGCfUVg4Hdt6QADeuiT9N8CCZKtBOxrTbp5oxGoZ0GJDrlRoOAhJ3yxH47pUYxo5CFqcSeBbCfv2-Y0wHVBYtkmfBkcd0toWhZg==)\n",
  groundingMetadata: {
    searchEntryPoint: {
      renderedContent: '<style>\n' +
        '.container {\n' +
        '  align-items: center;\n' +
        '  border-radius: 8px;\n' +
        '  display: flex;\n' +
        '  font-family: Google Sans, Roboto, sans-serif;\n' +
        '  font-size: 14px;\n' +
        '  line-height: 20px;\n' +
        '  padding: 8px 12px;\n' +
        '}\n' +
        '.chip {\n' +
        '  display: inline-block;\n' +
        '  border: solid 1px;\n' +
        '  border-radius: 16px;\n' +
        '  min-width: 14px;\n' +
        '  padding: 5px 16px;\n' +
        '  text-align: center;\n' +
        '  user-select: none;\n' +
        '  margin: 0 8px;\n' +
        '  -webkit-tap-highlight-color: transparent;\n' +
        '}\n' +
        '.carousel {\n' +
        '  overflow: auto;\n' +
        '  scrollbar-width: none;\n' +
        '  white-space: nowrap;\n' +
        '  margin-right: -12px;\n' +
        '}\n' +
        '.headline {\n' +
        '  display: flex;\n' +
        '  margin-right: 4px;\n' +
        '}\n' +
        '.gradient-container {\n' +
        '  position: relative;\n' +
        '}\n' +
        '.gradient {\n' +
        '  position: absolute;\n' +
        '  transform: translate(3px, -9px);\n' +
        '  height: 36px;\n' +
        '  width: 9px;\n' +
        '}\n' +
        '@media (prefers-color-scheme: light) {\n' +
        '  .container {\n' +
        '    background-color: #fafafa;\n' +
        '    box-shadow: 0 0 0 1px #0000000f;\n' +
        '  }\n' +
        '  .headline-label {\n' +
        '    color: #1f1f1f;\n' +
        '  }\n' +
        '  .chip {\n' +
        '    background-color: #ffffff;\n' +
        '    border-color: #d2d2d2;\n' +
        '    color: #5e5e5e;\n' +
        '    text-decoration: none;\n' +
        '  }\n' +
        '  .chip:hover {\n' +
        '    background-color: #f2f2f2;\n' +
        '  }\n' +
        '  .chip:focus {\n' +
        '    background-color: #f2f2f2;\n' +
        '  }\n' +
        '  .chip:active {\n' +
        '    background-color: #d8d8d8;\n' +
        '    border-color: #b6b6b6;\n' +
        '  }\n' +
        '  .logo-dark {\n' +
        '    display: none;\n' +
        '  }\n' +
        '  .gradient {\n' +
        '    background: linear-gradient(90deg, #fafafa 15%, #fafafa00 100%);\n' +
        '  }\n' +
        '}\n' +
        '@media (prefers-color-scheme: dark) {\n' +
        '  .container {\n' +
        '    background-color: #1f1f1f;\n' +
        '    box-shadow: 0 0 0 1px #ffffff26;\n' +
        '  }\n' +
        '  .headline-label {\n' +
        '    color: #fff;\n' +
        '  }\n' +
        '  .chip {\n' +
        '    background-color: #2c2c2c;\n' +
        '    border-color: #3c4043;\n' +
        '    color: #fff;\n' +
        '    text-decoration: none;\n' +
        '  }\n' +
        '  .chip:hover {\n' +
        '    background-color: #353536;\n' +
        '  }\n' +
        '  .chip:focus {\n' +
        '    background-color: #353536;\n' +
        '  }\n' +
        '  .chip:active {\n' +
        '    background-color: #464849;\n' +
        '    border-color: #53575b;\n' +
        '  }\n' +
        '  .logo-light {\n' +
        '    display: none;\n' +
        '  }\n' +
        '  .gradient {\n' +
        '    background: linear-gradient(90deg, #1f1f1f 15%, #1f1f1f00 100%);\n' +
        '  }\n' +
        '}\n' +
        '</style>\n' +
        '<div class="container">\n' +
        '  <div class="headline">\n' +
        '    <svg class="logo-light" width="18" height="18" viewBox="9 9 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M42.8622 27.0064C42.8622 25.7839 42.7525 24.6084 42.5487 23.4799H26.3109V30.1568H35.5897C35.1821 32.3041 33.9596 34.1222 32.1258 35.3448V39.6864H37.7213C40.9814 36.677 42.8622 32.2571 42.8622 27.0064V27.0064Z" fill="#4285F4"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M26.3109 43.8555C30.9659 43.8555 34.8687 42.3195 37.7213 39.6863L32.1258 35.3447C30.5898 36.3792 28.6306 37.0061 26.3109 37.0061C21.8282 37.0061 18.0195 33.9811 16.6559 29.906H10.9194V34.3573C13.7563 39.9841 19.5712 43.8555 26.3109 43.8555V43.8555Z" fill="#34A853"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M16.6559 29.8904C16.3111 28.8559 16.1074 27.7588 16.1074 26.6146C16.1074 25.4704 16.3111 24.3733 16.6559 23.3388V18.8875H10.9194C9.74388 21.2072 9.06992 23.8247 9.06992 26.6146C9.06992 29.4045 9.74388 32.022 10.9194 34.3417L15.3864 30.8621L16.6559 29.8904V29.8904Z" fill="#FBBC05"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M26.3109 16.2386C28.85 16.2386 31.107 17.1164 32.9095 18.8091L37.8466 13.8719C34.853 11.082 30.9659 9.3736 26.3109 9.3736C19.5712 9.3736 13.7563 13.245 10.9194 18.8875L16.6559 23.3388C18.0195 19.2636 21.8282 16.2386 26.3109 16.2386V16.2386Z" fill="#EA4335"/>\n' +
        '    </svg>\n' +
        '    <svg class="logo-dark" width="18" height="18" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">\n' +
        '      <circle cx="24" cy="23" fill="#FFF" r="22"/>\n' +
        '      <path d="M33.76 34.26c2.75-2.56 4.49-6.37 4.49-11.26 0-.89-.08-1.84-.29-3H24.01v5.99h8.03c-.4 2.02-1.5 3.56-3.07 4.56v.75l3.91 2.97h.88z" fill="#4285F4"/>\n' +
        '      <path d="M15.58 25.77A8.845 8.845 0 0 0 24 31.86c1.92 0 3.62-.46 4.97-1.31l4.79 3.71C31.14 36.7 27.65 38 24 38c-5.93 0-11.01-3.4-13.45-8.36l.17-1.01 4.06-2.85h.8z" fill="#34A853"/>\n' +
        '      <path d="M15.59 20.21a8.864 8.864 0 0 0 0 5.58l-5.03 3.86c-.98-2-1.53-4.25-1.53-6.64 0-2.39.55-4.64 1.53-6.64l1-.22 3.81 2.98.22 1.08z" fill="#FBBC05"/>\n' +
        '      <path d="M24 14.14c2.11 0 4.02.75 5.52 1.98l4.36-4.36C31.22 9.43 27.81 8 24 8c-5.93 0-11.01 3.4-13.45 8.36l5.03 3.85A8.86 8.86 0 0 1 24 14.14z" fill="#EA4335"/>\n' +
        '    </svg>\n' +
        '    <div class="gradient-container"><div class="gradient"></div></div>\n' +
        '  </div>\n' +
        '  <div class="carousel">\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQG3_vW_UEX71ko74OKRh6Pe0BmJiblymfpm0blNAEINpuFkSnWwkMLKim905z0zLCwN332LRYerfAbLhBbRUXAzlbVInyQv8AGsbLKBzRK8C3k6ZgGHdGruuQcuO9O8K5uCYmN0RWLitZCq7sC1xuh8Qcn9g3K7YSXalcxF84UWGBeKCAjJwZgErwfX6PqSU9DleZMxVnNljjdEGH0gJAr7_BfLFNWjlyQMLt-6wwdZ9jNLF5pTmg==">recent advancements in quantum computing June 2025</a>\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGTcHy9msQayEFzA2uX2y_eoRj8erykZnO9n5TDa_rA5qorwW6OOaweG9bablxPLjjCLh6uWKcn9kom0F583IjEm6ZsHEUu8yxiKDddGM582adVkWezKdWeKK4vx-QNvOjGLz0qHd04NzBowrjmlsX3Vo70R8mDG9NnpubJwXnyWIxPATycnLmeD_0shFPL5ausocZqks8jD5mXXVsha3sL0-wz8lg26ivV4-ZQLqjHjqCB4Lo=">latest quantum computing breakthroughs last month</a>\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQH0ucsbOd5F-dFYpl08A9mhZecXZ2WHTB4JHRf-mTpXl4ja4v880fdHtwL3r_5k18hmGdNpIeYbcRzoYWQDrxyxsiojcARzRWz_pLfyqbSgPcAAGPoUH-B8wEydyllknbiUWQWqvWHhzWy471pUQyd0K1HE1n5GyK-G8FHV0YsA8zNaKJ61VTOJKIIEoV1Me2izlg7Cmdm4lCDhdC3JbJyfpZx_">quantum computing news June 2025</a>\n' +
        '  </div>\n' +
        '</div>\n'
    },
    retrievalMetadata: {},
    webSearchQueries: [
      'latest quantum computing breakthroughs last month',
      'recent advancements in quantum computing June 2025',
      'quantum computing news June 2025'
    ]
  },
  groundingSources: [],
  thinkingSteps: undefined,
  outputImages: undefined,
  updatedChatHistory: undefined,
  usage: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: true
  - Has grounding sources: false
  - Grounding metadata keys: [ 'searchEntryPoint', 'retrievalMetadata', 'webSearchQueries' ]
  - Search queries: [
  'latest quantum computing breakthroughs last month',
  'recent advancements in quantum computing June 2025',
  'quantum computing news June 2025'
]
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 9735ms
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 267
[runAiStage] First 200 chars of filled prompt: Answer this question using current information from Google Search: what happened ysterday in austria


IMPORTANT: Use Google Search grounding to find real, current information. Provide actual search r
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 267,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Answer this question using current information from Google Search: what happened ysterday in austria...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 267
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.7
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:13:24.048Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 621ms
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 3,
  supportsCount: 9,
  searchQueries: 1,
  sourcesExtracted: 3
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 1238,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 3,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0,
  hasUsage: false
}
 POST /api/wizard/execute 200 in 3076ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 298ms
 ✓ Compiled in 220ms (449 modules)
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'What are the latest developments in AI reasoning models this week? Provide 3 specific examples with sources.',
  model: 'gemini-2.0-flash',
  temperature: 0.2,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  systemInstructions: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources with URLs.',
  streamingSettings: { enabled: false }
}
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.2,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 108
[runAiStage] First 200 chars of filled prompt: What are the latest developments in AI reasoning models this week? Provide 3 specific examples with sources.
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 108,
  model: 'gemini-2.0-flash',
  temperature: 0.2,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'What are the latest developments in AI reasoning models this week? Provide 3 specific examples with ...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 108
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.2
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 0,
  supportsCount: 0,
  searchQueries: 3,
  sourcesExtracted: 0
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 4714,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 0,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0,
  hasUsage: false
}
[TEST-AI] Result: {
  content: 'Here are three specific examples of the latest developments in AI reasoning models this week:\n' +
    '\n' +
    `1.  **Mistral AI's Magistral:** On June 10, 2025, Mistral AI launched Magistral, its first reasoning model, excelling in domain-specific, transparent, and multilingual reasoning. It comes in two versions: Magistral Small (a 24B parameter open-source version) and Magistral Medium (a more powerful, enterprise version). Magistral Medium scored 73.6% on AIME2024 and 90% with majority voting @64, while Magistral Small scored 70.7% and 83.3%, respectively. Magistral is designed to "think things through" like humans, bringing expertise across professional domains with transparent reasoning. It is suited for various enterprise use cases, from structured calculations and programmatic logic to decision trees and rule-based systems. [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGzsTb2mw2DkigeOJGOr2PibkJm3OgYBfmOnA0n1-_z2eZJlhFPzBfxj7qF8iX83eGG8XeMX_4H5li-jH62CZDB-LR6g5AsJJ8fBvx9HCU-sVmOFD-C0RbJcBi_](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGzsTb2mw2DkigeOJGOr2PibkJm3OgYBfmOnA0n1-_z2eZJlhFPzBfxj7qF8iX83eGG8XeMX_4H5li-jH62CZDB-LR6g5AsJJ8fBvx9HCU-sVmOFD-C0RbJcBi_) and [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGFpzv5P23cqtaNdvdXxYia39D6PK76kt8Zngzj-vp7Pc04PNPmSduUj0buMF6WUGPK2V-kMvE3T1C5VQA3F_0vHzIVbk37QGuge_lQQzzlfJG0sFF9_UnB49Z4WAn9EnWE8nFvK5vS10pQRS6Sttz7SsPlZC1TN1_cSosvXrSzjLSgJDv_m-c6ntFtUZk8yPWY](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGFpzv5P23cqtaNdvdXxYia39D6PK76kt8Zngzj-vp7Pc04PNPmSduUj0buMF6WUGPK2V-kMvE3T1C5VQA3F_0vHzIVbk37QGuge_lQQzzlfJG0sFF9_UnB49Z4WAn9EnWE8nFvK5vS10pQRS6Sttz7SsPlZC1TN1_cSosvXrSzjLSgJDv_m-c6ntFtUZk8yPWY)\n` +
    `2.  **Apple's Research on Limitations of Reasoning Models:** A recent paper from Apple researchers indicates that AI reasoning models may not be "thinking" as well as previously thought. These models, including OpenAI's o1 and o3, DeepSeek R1, Claude 3.7 Sonnet Thinking, and Google Gemini Flash Thinking, can collapse when faced with increasingly complex problems. While they outperform standard LLMs on medium-difficulty puzzles, they perform worse on simple puzzles and give up prematurely on hard puzzles. The researchers suggest that these models may only provide "The Illusion of Thinking." [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHpXitwZ5PrDkzQNnF-L46vppiqOXKBNc6UZLIuWLMiPyzhzZxa4UAO1WnE1G4pKbD0Ejxft3zxNNbFOg8RBb9mXpnZQl5A4YUkaFOFKaqieHgMuX8Ua63SMOHqC2uis7JyJNsfYmtKjjBxjENMAhGjmbKnbGxQsEAJSEaYBuxLFR095gl_LewLV9Odi1c3LSI=](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHpXitwZ5PrDkzQNnF-L46vppiqOXKBNc6UZLIuWLMiPyzhzZxa4UAO1WnE1G4pKbD0Ejxft3zxNNbFOg8RBb9mXpnZQl5A4YUkaFOFKaqieHgMuX8Ua63SMOHqC2uis7JyJNsfYmtKjjBxjENMAhGjmbKnbGxQsEAJSEaYBuxLFR095gl_LewLV9Odi1c3LSI=) and [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGsyhy2_FWvC-c7oEU4HOsBiszZvNnSU8ZtFo4utlwm99UINM2TIq2vIxde069mUxrJKaaUEdWvi3sjqEm1hsWRqMvP0uHfv-0YL4-Ogn0j4FQhsPNwL2LRZJoctpkZagS3J_c4d5v42n4XXV7jQHtK2XlIZNouofLygxmJA41VWX9EqD0jXS4F9BpNuMG-kYktV8PwD2GdVVzdMV5vCCsyZ2PIbwaGWl3izYDLj-ydr1ZcFHmYkmA5F0KcqXT8fUg3HVCU7GoZugpdn4ylogHyXrrbI-6A-KU7o1_cFkMLYuazW90=](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGsyhy2_FWvC-c7oEU4HOsBiszZvNnSU8ZtFo4utlwm99UINM2TIq2vIxde069mUxrJKaaUEdWvi3sjqEm1hsWRqMvP0uHfv-0YL4-Ogn0j4FQhsPNwL2LRZJoctpkZagS3J_c4d5v42n4XXV7jQHtK2XlIZNouofLygxmJA41VWX9EqD0jXS4F9BpNuMG-kYktV8PwD2GdVVzdMV5vCCsyZ2PIbwaGWl3izYDLj-ydr1ZcFHmYkmA5F0KcqXT8fUg3HVCU7GoZugpdn4ylogHyXrrbI-6A-KU7o1_cFkMLYuazW90=)\n` +
    '3.  **Developments in Healthcare AI Reasoning Models:** Generative AI (GenAI) reasoning models are enabling healthcare professionals to work more efficiently. Recent models provide transparency into their decision-making processes and can power advanced AI agents using healthcare-specific models like Google AIM, Med-PaLM 2, or Med-R1. This auditability is crucial in healthcare, where understanding why a recommendation was made is often as important as the recommendation itself. [https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQEamJdR-zza8q-016W3VFEoGltqTG7--3-v0DQa2YkyyVWUdjQPzf1Uhb13-F98yClhWPXqEaMXY-x5xdU9BdPEy1z-UvYgR8Keo2gkHhjg3Ymn9z2-6hk0dQtnQop4E7VNRGjghswtwbbAq5bGufPQN4ODLf1x47eABeBRUW7dBfPlEm1CNNWMahU6ndjdDlqxZlVdezpDAZebN36_UTQTNdXKYm6V8dWo](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQEamJdR-zza8q-016W3VFEoGltqTG7--3-v0DQa2YkyyVWUdjQPzf1Uhb13-F98yClhWPXqEaMXY-x5xdU9BdPEy1z-UvYgR8Keo2gkHhjg3Ymn9z2-6hk0dQtnQop4E7VNRGjghswtwbbAq5bGufPQN4ODLf1x47eABeBRUW7dBfPlEm1CNNWMahU6ndjdDlqxZlVdezpDAZebN36_UTQTNdXKYm6V8dWo)\n',
  groundingMetadata: {
    searchEntryPoint: {
      renderedContent: '<style>\n' +
        '.container {\n' +
        '  align-items: center;\n' +
        '  border-radius: 8px;\n' +
        '  display: flex;\n' +
        '  font-family: Google Sans, Roboto, sans-serif;\n' +
        '  font-size: 14px;\n' +
        '  line-height: 20px;\n' +
        '  padding: 8px 12px;\n' +
        '}\n' +
        '.chip {\n' +
        '  display: inline-block;\n' +
        '  border: solid 1px;\n' +
        '  border-radius: 16px;\n' +
        '  min-width: 14px;\n' +
        '  padding: 5px 16px;\n' +
        '  text-align: center;\n' +
        '  user-select: none;\n' +
        '  margin: 0 8px;\n' +
        '  -webkit-tap-highlight-color: transparent;\n' +
        '}\n' +
        '.carousel {\n' +
        '  overflow: auto;\n' +
        '  scrollbar-width: none;\n' +
        '  white-space: nowrap;\n' +
        '  margin-right: -12px;\n' +
        '}\n' +
        '.headline {\n' +
        '  display: flex;\n' +
        '  margin-right: 4px;\n' +
        '}\n' +
        '.gradient-container {\n' +
        '  position: relative;\n' +
        '}\n' +
        '.gradient {\n' +
        '  position: absolute;\n' +
        '  transform: translate(3px, -9px);\n' +
        '  height: 36px;\n' +
        '  width: 9px;\n' +
        '}\n' +
        '@media (prefers-color-scheme: light) {\n' +
        '  .container {\n' +
        '    background-color: #fafafa;\n' +
        '    box-shadow: 0 0 0 1px #0000000f;\n' +
        '  }\n' +
        '  .headline-label {\n' +
        '    color: #1f1f1f;\n' +
        '  }\n' +
        '  .chip {\n' +
        '    background-color: #ffffff;\n' +
        '    border-color: #d2d2d2;\n' +
        '    color: #5e5e5e;\n' +
        '    text-decoration: none;\n' +
        '  }\n' +
        '  .chip:hover {\n' +
        '    background-color: #f2f2f2;\n' +
        '  }\n' +
        '  .chip:focus {\n' +
        '    background-color: #f2f2f2;\n' +
        '  }\n' +
        '  .chip:active {\n' +
        '    background-color: #d8d8d8;\n' +
        '    border-color: #b6b6b6;\n' +
        '  }\n' +
        '  .logo-dark {\n' +
        '    display: none;\n' +
        '  }\n' +
        '  .gradient {\n' +
        '    background: linear-gradient(90deg, #fafafa 15%, #fafafa00 100%);\n' +
        '  }\n' +
        '}\n' +
        '@media (prefers-color-scheme: dark) {\n' +
        '  .container {\n' +
        '    background-color: #1f1f1f;\n' +
        '    box-shadow: 0 0 0 1px #ffffff26;\n' +
        '  }\n' +
        '  .headline-label {\n' +
        '    color: #fff;\n' +
        '  }\n' +
        '  .chip {\n' +
        '    background-color: #2c2c2c;\n' +
        '    border-color: #3c4043;\n' +
        '    color: #fff;\n' +
        '    text-decoration: none;\n' +
        '  }\n' +
        '  .chip:hover {\n' +
        '    background-color: #353536;\n' +
        '  }\n' +
        '  .chip:focus {\n' +
        '    background-color: #353536;\n' +
        '  }\n' +
        '  .chip:active {\n' +
        '    background-color: #464849;\n' +
        '    border-color: #53575b;\n' +
        '  }\n' +
        '  .logo-light {\n' +
        '    display: none;\n' +
        '  }\n' +
        '  .gradient {\n' +
        '    background: linear-gradient(90deg, #1f1f1f 15%, #1f1f1f00 100%);\n' +
        '  }\n' +
        '}\n' +
        '</style>\n' +
        '<div class="container">\n' +
        '  <div class="headline">\n' +
        '    <svg class="logo-light" width="18" height="18" viewBox="9 9 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M42.8622 27.0064C42.8622 25.7839 42.7525 24.6084 42.5487 23.4799H26.3109V30.1568H35.5897C35.1821 32.3041 33.9596 34.1222 32.1258 35.3448V39.6864H37.7213C40.9814 36.677 42.8622 32.2571 42.8622 27.0064V27.0064Z" fill="#4285F4"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M26.3109 43.8555C30.9659 43.8555 34.8687 42.3195 37.7213 39.6863L32.1258 35.3447C30.5898 36.3792 28.6306 37.0061 26.3109 37.0061C21.8282 37.0061 18.0195 33.9811 16.6559 29.906H10.9194V34.3573C13.7563 39.9841 19.5712 43.8555 26.3109 43.8555V43.8555Z" fill="#34A853"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M16.6559 29.8904C16.3111 28.8559 16.1074 27.7588 16.1074 26.6146C16.1074 25.4704 16.3111 24.3733 16.6559 23.3388V18.8875H10.9194C9.74388 21.2072 9.06992 23.8247 9.06992 26.6146C9.06992 29.4045 9.74388 32.022 10.9194 34.3417L15.3864 30.8621L16.6559 29.8904V29.8904Z" fill="#FBBC05"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M26.3109 16.2386C28.85 16.2386 31.107 17.1164 32.9095 18.8091L37.8466 13.8719C34.853 11.082 30.9659 9.3736 26.3109 9.3736C19.5712 9.3736 13.7563 13.245 10.9194 18.8875L16.6559 23.3388C18.0195 19.2636 21.8282 16.2386 26.3109 16.2386V16.2386Z" fill="#EA4335"/>\n' +
        '    </svg>\n' +
        '    <svg class="logo-dark" width="18" height="18" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">\n' +
        '      <circle cx="24" cy="23" fill="#FFF" r="22"/>\n' +
        '      <path d="M33.76 34.26c2.75-2.56 4.49-6.37 4.49-11.26 0-.89-.08-1.84-.29-3H24.01v5.99h8.03c-.4 2.02-1.5 3.56-3.07 4.56v.75l3.91 2.97h.88z" fill="#4285F4"/>\n' +
        '      <path d="M15.58 25.77A8.845 8.845 0 0 0 24 31.86c1.92 0 3.62-.46 4.97-1.31l4.79 3.71C31.14 36.7 27.65 38 24 38c-5.93 0-11.01-3.4-13.45-8.36l.17-1.01 4.06-2.85h.8z" fill="#34A853"/>\n' +
        '      <path d="M15.59 20.21a8.864 8.864 0 0 0 0 5.58l-5.03 3.86c-.98-2-1.53-4.25-1.53-6.64 0-2.39.55-4.64 1.53-6.64l1-.22 3.81 2.98.22 1.08z" fill="#FBBC05"/>\n' +
        '      <path d="M24 14.14c2.11 0 4.02.75 5.52 1.98l4.36-4.36C31.22 9.43 27.81 8 24 8c-5.93 0-11.01 3.4-13.45 8.36l5.03 3.85A8.86 8.86 0 0 1 24 14.14z" fill="#EA4335"/>\n' +
        '    </svg>\n' +
        '    <div class="gradient-container"><div class="gradient"></div></div>\n' +
        '  </div>\n' +
        '  <div class="carousel">\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQFS15tQnRL_H0DqfyW4UP7V6RzNuJrIe0x4RI33gjNbZx9RyiTkI6ykdgF1w1MAhUynEp1utMyTLdc6AkeyciwVV6BXVb6ns1OBeNZRybjpEu8aM-7JpdUnpR3gOsGxuYNt092pExp2RCovboKT3v81rKu6NTP8cY5hVyconiPzo-CiZ5jh2aTWYpdXJzhEA_tv-qBZYigOAfc19fv4qfnXyla9IyMQkA==">AI reasoning models advancements 2025</a>\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGEKhfraEm6xDn9ql3PIVnEBeD0K4_yABRalBy7LTlpDiHhSVSJHx6C8nck89Ps1EnVKbz5xR4ZVX1jI5MQehkUsCZmadBVwA9CkSza0nWqdqq7duTA05mscl-X_YQ0VisOLnIaXvaZW6K7AiBEyGCDRVUQfRsFABo_qco8hG-ewBcBUpmtUvU_lhgOSjqHeu02iH7tyB4guUv8vci9VIq9S_bmh7U2TCcbebO4IvyF3KvRgQ==">latest developments AI reasoning models this week</a>\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHMfsQ99Kx-LVueFNhh6wK4nQ9AHshflH0T-PCVs5zuR53GuN_4ozt8S9bUzKdel4qAXg9DP37_HNZoyYIYvo5fBb4mFxzmXAkjOdBAX229D_rmw2_vjyl3B7NVXkQcWDZG2yKTzc7BrLp5EG_gykXhyTGHmF-lrzF-Mg14PPHIAYINFLMaE90IsyaVy4j3RDmzcnXVljC-jmZFlZn5Ca0VsIae">new AI reasoning models June 2025</a>\n' +
        '  </div>\n' +
        '</div>\n'
    },
    retrievalMetadata: {},
    webSearchQueries: [
      'latest developments AI reasoning models this week',
      'AI reasoning models advancements 2025',
      'new AI reasoning models June 2025'
    ]
  },
  groundingSources: [],
  thinkingSteps: undefined,
  outputImages: undefined,
  updatedChatHistory: undefined,
  usage: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: true
  - Has grounding sources: false
  - Grounding metadata keys: [ 'searchEntryPoint', 'retrievalMetadata', 'webSearchQueries' ]
  - Search queries: [
  'latest developments AI reasoning models this week',
  'AI reasoning models advancements 2025',
  'new AI reasoning models June 2025'
]
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 11545ms
Debugger listening on ws://127.0.0.1:9229/b4840af1-6ef6-4da4-9590-ae711dd4cd2c
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 166558,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/79557a17-d829-4324-9b8c-0bab4c703295
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1494ms
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ○ Compiling /api/test-ai ...
 ✓ Compiled /api/test-ai in 507ms (590 modules)
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'What are the most significant developments in quantum computing from this past week? Provide 3 specific examples with sources and explain their impact.',
  model: 'gemini-2.0-flash',
  temperature: 0.1,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  systemInstructions: 'You are an AI assistant that provides up-to-date information using Google Search. Always cite your sources with URLs and provide detailed explanations.',
  streamingSettings: { enabled: false }
}
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.1,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 151
[runAiStage] First 200 chars of filled prompt: What are the most significant developments in quantum computing from this past week? Provide 3 specific examples with sources and explain their impact.
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 151,
  model: 'gemini-2.0-flash',
  temperature: 0.1,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'What are the most significant developments in quantum computing from this past week? Provide 3 speci...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 151
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.1
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 2,
  supportsCount: 6,
  searchQueries: 3,
  sourcesExtracted: 2
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 2213,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 2,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0,
  hasUsage: false
}
[TEST-AI] Result: {
  content: 'Here are three significant developments in quantum computing from the past week:\n' +
    '\n' +
    `1.  **IBM's Quantum Starling System:** IBM has announced plans for its "Quantum Starling" system, which is expected to perform up to 20,000 times more operations than current quantum computers. This system aims to tackle complex quantum states beyond current capabilities and is expected to execute 100 million quantum operations using 200 logical qubits, paving the way for the "IBM Quantum Blue Jay" system capable of one billion quantum operations. This development has boosted IBM's stock and is seen as a positive indicator for the quantum computing industry. \\[[2](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHDiBAKgmaQ19T-CFbAHfnFzj4BEAIslWCXffuwnDY6YVHKOZRniXU0AkZEOWeIHepzJOp3rMRo3U3AhC38sv5XOxr3NmTRKmMWL4Wvteo9FN8Wtrfxdc3rQpheMD5l8jPKKX2skir-VQ-qeXtIJNhpB6UAoSWrWWVpAVXtXzUWzEVFT4lCAXAzzlFikH5DS9h8AqWH0BfROMbHnlQMKLA/)\\]\n` +
    '2.  **Oxford University Achieves Lowest Error Rate for Quantum Logic Operation:** Physicists at the University of Oxford have set a new global benchmark for the accuracy of controlling a single quantum bit, achieving an error rate of just 0.000015%, or one error in 6.7 million operations. This breakthrough is significant because reducing error rates is crucial for building reliable and fault-tolerant quantum computers. \\[[1](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHhwXesMa5hYHyOYcSpELYdXJZCVWVdNfAIWKTwOb2ja6MWJ7iQ9acJGBvLA1n49HB4VT7TloXxCquYIqt8e1DgI6szxuCC6yjbhKfzMvUTVFGBtlNLqXOC60J0S_piRXfS8ilmutN4tBoqLoz5Jm0C-jFLx2HesPLKSOor-_M/)\\]\n' +
    '3.  **Quantum-Enhanced Machine Learning with Photonic Quantum Circuits:** Researchers have demonstrated that even small-scale quantum computers can enhance machine learning performance using a novel photonic quantum circuit. This suggests that current quantum technology is not just experimental but can already be applied to improve machine learning. \\[[1](https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHhwXesMa5hYHyOYcSpELYdXJZCVWVdNfAIWKTwOb2ja6MWJ7iQ9acJGBvLA1n49HB4VT7TloXxCquYIqt8e1DgI6szxuCC6yjbhKfzMvUTVFGBtlNLqXOC60J0S_piRXfS8ilmutN4tBoqLoz5Jm0C-jFLx2HesPLKSOor-_M/)\\]\n',
  groundingMetadata: {
    searchEntryPoint: {
      renderedContent: '<style>\n' +
        '.container {\n' +
        '  align-items: center;\n' +
        '  border-radius: 8px;\n' +
        '  display: flex;\n' +
        '  font-family: Google Sans, Roboto, sans-serif;\n' +
        '  font-size: 14px;\n' +
        '  line-height: 20px;\n' +
        '  padding: 8px 12px;\n' +
        '}\n' +
        '.chip {\n' +
        '  display: inline-block;\n' +
        '  border: solid 1px;\n' +
        '  border-radius: 16px;\n' +
        '  min-width: 14px;\n' +
        '  padding: 5px 16px;\n' +
        '  text-align: center;\n' +
        '  user-select: none;\n' +
        '  margin: 0 8px;\n' +
        '  -webkit-tap-highlight-color: transparent;\n' +
        '}\n' +
        '.carousel {\n' +
        '  overflow: auto;\n' +
        '  scrollbar-width: none;\n' +
        '  white-space: nowrap;\n' +
        '  margin-right: -12px;\n' +
        '}\n' +
        '.headline {\n' +
        '  display: flex;\n' +
        '  margin-right: 4px;\n' +
        '}\n' +
        '.gradient-container {\n' +
        '  position: relative;\n' +
        '}\n' +
        '.gradient {\n' +
        '  position: absolute;\n' +
        '  transform: translate(3px, -9px);\n' +
        '  height: 36px;\n' +
        '  width: 9px;\n' +
        '}\n' +
        '@media (prefers-color-scheme: light) {\n' +
        '  .container {\n' +
        '    background-color: #fafafa;\n' +
        '    box-shadow: 0 0 0 1px #0000000f;\n' +
        '  }\n' +
        '  .headline-label {\n' +
        '    color: #1f1f1f;\n' +
        '  }\n' +
        '  .chip {\n' +
        '    background-color: #ffffff;\n' +
        '    border-color: #d2d2d2;\n' +
        '    color: #5e5e5e;\n' +
        '    text-decoration: none;\n' +
        '  }\n' +
        '  .chip:hover {\n' +
        '    background-color: #f2f2f2;\n' +
        '  }\n' +
        '  .chip:focus {\n' +
        '    background-color: #f2f2f2;\n' +
        '  }\n' +
        '  .chip:active {\n' +
        '    background-color: #d8d8d8;\n' +
        '    border-color: #b6b6b6;\n' +
        '  }\n' +
        '  .logo-dark {\n' +
        '    display: none;\n' +
        '  }\n' +
        '  .gradient {\n' +
        '    background: linear-gradient(90deg, #fafafa 15%, #fafafa00 100%);\n' +
        '  }\n' +
        '}\n' +
        '@media (prefers-color-scheme: dark) {\n' +
        '  .container {\n' +
        '    background-color: #1f1f1f;\n' +
        '    box-shadow: 0 0 0 1px #ffffff26;\n' +
        '  }\n' +
        '  .headline-label {\n' +
        '    color: #fff;\n' +
        '  }\n' +
        '  .chip {\n' +
        '    background-color: #2c2c2c;\n' +
        '    border-color: #3c4043;\n' +
        '    color: #fff;\n' +
        '    text-decoration: none;\n' +
        '  }\n' +
        '  .chip:hover {\n' +
        '    background-color: #353536;\n' +
        '  }\n' +
        '  .chip:focus {\n' +
        '    background-color: #353536;\n' +
        '  }\n' +
        '  .chip:active {\n' +
        '    background-color: #464849;\n' +
        '    border-color: #53575b;\n' +
        '  }\n' +
        '  .logo-light {\n' +
        '    display: none;\n' +
        '  }\n' +
        '  .gradient {\n' +
        '    background: linear-gradient(90deg, #1f1f1f 15%, #1f1f1f00 100%);\n' +
        '  }\n' +
        '}\n' +
        '</style>\n' +
        '<div class="container">\n' +
        '  <div class="headline">\n' +
        '    <svg class="logo-light" width="18" height="18" viewBox="9 9 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M42.8622 27.0064C42.8622 25.7839 42.7525 24.6084 42.5487 23.4799H26.3109V30.1568H35.5897C35.1821 32.3041 33.9596 34.1222 32.1258 35.3448V39.6864H37.7213C40.9814 36.677 42.8622 32.2571 42.8622 27.0064V27.0064Z" fill="#4285F4"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M26.3109 43.8555C30.9659 43.8555 34.8687 42.3195 37.7213 39.6863L32.1258 35.3447C30.5898 36.3792 28.6306 37.0061 26.3109 37.0061C21.8282 37.0061 18.0195 33.9811 16.6559 29.906H10.9194V34.3573C13.7563 39.9841 19.5712 43.8555 26.3109 43.8555V43.8555Z" fill="#34A853"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M16.6559 29.8904C16.3111 28.8559 16.1074 27.7588 16.1074 26.6146C16.1074 25.4704 16.3111 24.3733 16.6559 23.3388V18.8875H10.9194C9.74388 21.2072 9.06992 23.8247 9.06992 26.6146C9.06992 29.4045 9.74388 32.022 10.9194 34.3417L15.3864 30.8621L16.6559 29.8904V29.8904Z" fill="#FBBC05"/>\n' +
        '      <path fill-rule="evenodd" clip-rule="evenodd" d="M26.3109 16.2386C28.85 16.2386 31.107 17.1164 32.9095 18.8091L37.8466 13.8719C34.853 11.082 30.9659 9.3736 26.3109 9.3736C19.5712 9.3736 13.7563 13.245 10.9194 18.8875L16.6559 23.3388C18.0195 19.2636 21.8282 16.2386 26.3109 16.2386V16.2386Z" fill="#EA4335"/>\n' +
        '    </svg>\n' +
        '    <svg class="logo-dark" width="18" height="18" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">\n' +
        '      <circle cx="24" cy="23" fill="#FFF" r="22"/>\n' +
        '      <path d="M33.76 34.26c2.75-2.56 4.49-6.37 4.49-11.26 0-.89-.08-1.84-.29-3H24.01v5.99h8.03c-.4 2.02-1.5 3.56-3.07 4.56v.75l3.91 2.97h.88z" fill="#4285F4"/>\n' +
        '      <path d="M15.58 25.77A8.845 8.845 0 0 0 24 31.86c1.92 0 3.62-.46 4.97-1.31l4.79 3.71C31.14 36.7 27.65 38 24 38c-5.93 0-11.01-3.4-13.45-8.36l.17-1.01 4.06-2.85h.8z" fill="#34A853"/>\n' +
        '      <path d="M15.59 20.21a8.864 8.864 0 0 0 0 5.58l-5.03 3.86c-.98-2-1.53-4.25-1.53-6.64 0-2.39.55-4.64 1.53-6.64l1-.22 3.81 2.98.22 1.08z" fill="#FBBC05"/>\n' +
        '      <path d="M24 14.14c2.11 0 4.02.75 5.52 1.98l4.36-4.36C31.22 9.43 27.81 8 24 8c-5.93 0-11.01 3.4-13.45 8.36l5.03 3.85A8.86 8.86 0 0 1 24 14.14z" fill="#EA4335"/>\n' +
        '    </svg>\n' +
        '    <div class="gradient-container"><div class="gradient"></div></div>\n' +
        '  </div>\n' +
        '  <div class="carousel">\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQH-RRUB8iu1LrOxz-eBcvuheg5ZZyZFXqEq4C0EOI-bvHc_Q8ixVP-9f1khoog7Uz_36WIv2Yr_RsDHDIdU_OBXezoXuiA5ouyALtxOu5_29NvsyDGXH_VTfI2KB8vJ1o3mgE3gZrkqMCykeqycsrvZDG0JLGjx11YQOGXDn7cJJa0tt3E7yOrUKGdz1yMNgTFfGUX1tNwguyk1kI1Lv4M56FbYWGCftvys">recent quantum computing breakthroughs</a>\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQGYwnatGcxQW4L642W_x2rIMmebzrKAIJkPaP_vctpeIdYDniZO5SDhLmRBskaeobr7XuXCqmt63M7EY7aBOTVR9G9aCgT6Aev097V1GR011JmKCHxYDpVgUexa-7f57PlNZIwpjWFwrtFvPJ1DGMjEJcSABVF0fcs12TiDNjAxMMjeEhKmk0IheR42nw_pX1H3bSxmIMp_3B-ZWmSbD4Ch0x6q1bmvGRPm-UU=">quantum computing developments last week</a>\n' +
        '    <a class="chip" href="https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQEjvPqbDAuJsOVOt5ozq8HasODiJ-z_uKwpDtvMOLpK7sNoyT8I9Dwlswmg4PJ5j-08h1ZNMdUVZ6A6vwJ4ECXcrtfDH_WYdgN94T3rHKp4n46mEiLQyQ7O4pcfJAEz2lVRNKZTKVOM-PFGF_NptM82RXu2U4ZMeO1HKcDOtHLdndf8EqkpVemYd96Gks6nLNtI3UM7ZpYtKYc=">quantum computing news</a>\n' +
        '  </div>\n' +
        '</div>\n'
    },
    groundingChunks: [ [Object], [Object] ],
    groundingSupports: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
    retrievalMetadata: {},
    webSearchQueries: [
      'quantum computing developments last week',
      'recent quantum computing breakthroughs',
      'quantum computing news'
    ]
  },
  groundingSources: [
    {
      type: 'search',
      title: 'thestreet.com',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHDiBAKgmaQ19T-CFbAHfnFzj4BEAIslWCXffuwnDY6YVHKOZRniXU0AkZEOWeIHepzJOp3rMRo3U3AhC38sv5XOxr3NmTRKmMWL4Wvteo9FN8Wtrfxdc3rQpheMD5l8jPKKX2skir-VQ-qeXtIJNhpB6UAoSWrWWVpAVXtXzUWzEVFT4lCAXAzzlFikH5DS9h8AqWH0BfROMbHnlQMKLA=',
      snippet: ''
    },
    {
      type: 'search',
      title: 'sciencedaily.com',
      url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHhwXesMa5hYHyOYcSpELYdXJZCVWVdNfAIWKTwOb2ja6MWJ7iQ9acJGBvLA1n49HB4VT7TloXxCquYIqt8e1DgI6szxuCC6yjbhKfzMvUTVFGBtlNLqXOC60J0S_piRXfS8ilmutN4tBoqLoz5Jm0C-jFLx2HesPLKSOor-_M=',
      snippet: ''
    }
  ],
  thinkingSteps: undefined,
  outputImages: undefined,
  updatedChatHistory: undefined,
  usage: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: true
  - Has grounding sources: true
  - Grounding metadata keys: [
  'searchEntryPoint',
  'groundingChunks',
  'groundingSupports',
  'retrievalMetadata',
  'webSearchQueries'
]
  - Search queries: [
  'quantum computing developments last week',
  'recent quantum computing breakthroughs',
  'quantum computing news'
]
  - Grounding chunks: 2
  - Grounding supports: 6
  - Grounding sources count: 2
  - First source: {
  type: 'search',
  title: 'thestreet.com',
  url: 'https://vertexaisearch.cloud.google.com/grounding-api-redirect/AUZIYQHDiBAKgmaQ19T-CFbAHfnFzj4BEAIslWCXffuwnDY6YVHKOZRniXU0AkZEOWeIHepzJOp3rMRo3U3AhC38sv5XOxr3NmTRKmMWL4Wvteo9FN8Wtrfxdc3rQpheMD5l8jPKKX2skir-VQ-qeXtIJNhpB6UAoSWrWWVpAVXtXzUWzEVFT4lCAXAzzlFikH5DS9h8AqWH0BfROMbHnlQMKLA=',
  snippet: ''
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 6173ms
 ✓ Compiled /api/wizard/execute in 237ms (590 modules)
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 267
[runAiStage] First 200 chars of filled prompt: Answer this question using current information from Google Search: what happened ysterday in austria


IMPORTANT: Use Google Search grounding to find real, current information. Provide actual search r
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 267,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Answer this question using current information from Google Search: what happened ysterday in austria...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 267
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.7
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
 ✓ Compiled /api/documents/save in 462ms (724 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:21:03.249Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 2,
  supportsCount: 3,
  searchQueries: 1,
  sourcesExtracted: 2
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 624,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 2,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0,
  hasUsage: false
}
 POST /api/wizard/execute 200 in 2716ms
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 1187ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 261ms
 ✓ Compiled in 235ms (447 modules)
 ✓ Compiled in 20ms
 ○ Compiling /w/[shortName]/[documentId] ...
 ✓ Compiled /w/[shortName]/[documentId] in 2.7s (2156 modules)
 ✓ Compiled in 147ms (858 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:50:20.422Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:50:20.522Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:50:20.691Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'test-title',
    'document-understanding-test',
    'streaming-test',
    'function-calling-weather',
    'chat-mode-test',
    'combined-features-test',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'grounding-url-context',
    'final-summary',
    'image-understanding-test',
    'code-execution-python',
    'grounding-google-search',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'test-title',
    'document-understanding-test',
    'streaming-test',
    'function-calling-weather',
    'chat-mode-test',
    'combined-features-test',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'grounding-url-context',
    'final-summary',
    'image-understanding-test',
    'code-execution-python',
    'grounding-google-search',
    'function-calling-calculator'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 4305ms
 ✓ Compiled /favicon.ico in 305ms (1314 modules)
 GET /favicon.ico 200 in 366ms
 ✓ Compiled /api/documents/save in 128ms (1318 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:50:25.015Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 786ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 235ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 211ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 261ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:50:33.378Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 384ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:50:33.763Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET /favicon.ico 200 in 9ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 264ms
 ✓ Compiled /api/wizard/execute in 418ms (1480 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 267
[runAiStage] First 200 chars of filled prompt: Answer this question using current information from Google Search: what happened ysterday in austria


IMPORTANT: Use Google Search grounding to find real, current information. Provide actual search r
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 267,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Answer this question using current information from Google Search: what happened ysterday in austria...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 267
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.7
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:50:36.972Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[WizardPage] Loading existing document: BHAtTG1NpuXc1Q6PDDep
[DocumentPersistence] Loading document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'document-understanding-test',
    'code-execution-python',
    'chat-mode-test',
    'combined-features-test',
    'image-understanding-test',
    'test-title',
    'final-summary',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'grounding-url-context',
    'function-calling-unit-converter',
    'grounding-google-search',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'document-understanding-test',
    'code-execution-python',
    'chat-mode-test',
    'combined-features-test',
    'image-understanding-test',
    'test-title',
    'final-summary',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'grounding-url-context',
    'function-calling-unit-converter',
    'grounding-google-search',
    'streaming-test'
  ]
}
 GET /w/gemini-test/BHAtTG1NpuXc1Q6PDDep 200 in 519ms
 GET /favicon.ico 200 in 9ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:50:37.396Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 384ms
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 2,
  supportsCount: 2,
  searchQueries: 1,
  sourcesExtracted: 2
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 301,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 2,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
 POST /api/wizard/execute 200 in 2444ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 234ms
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 267
[runAiStage] First 200 chars of filled prompt: Answer this question using current information from Google Search: what happened ysterday in austria


IMPORTANT: Use Google Search grounding to find real, current information. Provide actual search r
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 267,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Answer this question using current information from Google Search: what happened ysterday in austria...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 267
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.7
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 252ms
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 4,
  supportsCount: 4,
  searchQueries: 1,
  sourcesExtracted: 4
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 694,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 4,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
 POST /api/wizard/execute 200 in 2508ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'BHAtTG1NpuXc1Q6PDDep',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'BHAtTG1NpuXc1Q6PDDep' }
[DocumentPersistence] Document updated successfully { documentId: 'BHAtTG1NpuXc1Q6PDDep' }
 POST /api/documents/save 200 in 208ms
Debugger listening on ws://127.0.0.1:9229/79f52efd-2f7b-4b6d-8723-c9f0476eaf1d
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 2172114,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/9b69b771-af5e-435f-a463-b6921cc8ce88
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1746ms
 ○ Compiling /dashboard ...
 ✓ Compiled /dashboard in 2s (1247 modules)
 GET /dashboard 200 in 2687ms
 ✓ Compiled in 555ms (476 modules)
 GET /dashboard 200 in 16ms
 ○ Compiling /w/[shortName]/new ...
 ✓ Compiled /w/[shortName]/new in 591ms (1377 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:51:51.276Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:51:51.376Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mbxjpp7ewfbcr2o',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749984711387_3vf6qy4dt',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749984711387_3vf6qy4dt',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'idhX4RKRSGkBtDxmBV1h',
  path: 'documents/idhX4RKRSGkBtDxmBV1h'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'idhX4RKRSGkBtDxmBV1h',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'idhX4RKRSGkBtDxmBV1h',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  error: undefined,
  originalId: 'mbxjpp7ewfbcr2o'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxjpp7ewfbcr2o',
  createdId: 'idhX4RKRSGkBtDxmBV1h',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/idhX4RKRSGkBtDxmBV1h' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 1619ms
 ○ Compiling /w/[shortName]/[documentId] ...
 ✓ Compiled /w/[shortName]/[documentId] in 753ms (2187 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:51:53.020Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:51:53.092Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Loading existing document: idhX4RKRSGkBtDxmBV1h
[DocumentPersistence] Loading document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Loading existing document: idhX4RKRSGkBtDxmBV1h
[DocumentPersistence] Loading document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/gemini-test/idhX4RKRSGkBtDxmBV1h 200 in 1614ms
 GET /w/gemini-test/idhX4RKRSGkBtDxmBV1h 200 in 278ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:51:53.608Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /api/documents/save in 276ms (2203 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:51:59.521Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 906ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 256ms
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ✓ Compiled /api/wizard/execute in 397ms (2365 modules)
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 277
[runAiStage] First 200 chars of filled prompt: Answer this question using current information from Google Search: tell me what happened yesterday in austria! 

IMPORTANT: Use Google Search grounding to find real, current information. Provide actua
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 277,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Answer this question using current information from Google Search: tell me what happened yesterday i...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 277
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.7
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:52:10.919Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 2,
  supportsCount: 2,
  searchQueries: 1,
  sourcesExtracted: 2
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 253,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 2,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
 POST /api/wizard/execute 200 in 2471ms
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 556ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 274ms
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: true,
  forceGoogleSearchGrounding: true,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Enhanced prompt with AI REDO notes
[runAiStage] Filled prompt length: 355
[runAiStage] First 200 chars of filled prompt: Answer this question using current information from Google Search: tell me what happened yesterday in austria! 

IMPORTANT: Use Google Search grounding to find real, current information. Provide actua
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 355,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: true,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: true,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Answer this question using current information from Google Search: tell me what happened yesterday i...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: true
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 355
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.7
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 3,
  supportsCount: 2,
  searchQueries: 1,
  sourcesExtracted: 3
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 339,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 3,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
 POST /api/wizard/execute 200 in 2014ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 277ms
 ✓ Compiled in 551ms (874 modules)
 ✓ Compiled /api/wizard/execute in 240ms (313 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 277
[runAiStage] First 200 chars of filled prompt: Answer this question using current information from Google Search: tell me what happened yesterday in austria! 

IMPORTANT: Use Google Search grounding to find real, current information. Provide actua
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 277,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Answer this question using current information from Google Search: tell me what happened yesterday i...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 277
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.7
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
 ✓ Compiled /api/documents/save in 78ms (447 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T10:58:11.304Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 2,
  supportsCount: 3,
  searchQueries: 1,
  sourcesExtracted: 2
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 443,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 2,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
 POST /api/wizard/execute 200 in 2311ms
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 705ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 264ms
 ✓ Compiled in 132ms (447 modules)
 ✓ Compiled in 80ms (447 modules)
 ✓ Compiled in 11ms
Debugger listening on ws://127.0.0.1:9229/08859c56-031a-4b47-9aae-c05ab3f02088
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 528880,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/c6f21aa7-7094-48e3-a888-0ca0366ff945
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1372ms
Debugger listening on ws://127.0.0.1:9229/76b2467c-b5cb-40b8-a821-679a1443b05f
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 73714,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/035d5bcd-7bfa-4165-b7a1-9459738154ab
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1261ms
 ○ Compiling /w/[shortName]/[documentId] ...
 ✓ Compiled /w/[shortName]/[documentId] in 2.5s (2155 modules)
 ✓ Compiled in 368ms (857 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:01:50.694Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:01:50.800Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Loading existing document: idhX4RKRSGkBtDxmBV1h
[DocumentPersistence] Loading document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:01:50.968Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'image-understanding-test',
    'combined-features-test',
    'grounding-url-context',
    'thinking-mode-test',
    'streaming-test',
    'function-calling-calculator',
    'chat-mode-test',
    'function-calling-weather',
    'final-summary',
    'test-title',
    'grounding-google-search',
    'document-understanding-test',
    'code-execution-python',
    'function-calling-unit-converter'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageCount: 14,
  validatedStageIds: [
    'image-understanding-test',
    'combined-features-test',
    'grounding-url-context',
    'thinking-mode-test',
    'streaming-test',
    'function-calling-calculator',
    'chat-mode-test',
    'function-calling-weather',
    'final-summary',
    'test-title',
    'grounding-google-search',
    'document-understanding-test',
    'code-execution-python',
    'function-calling-unit-converter'
  ]
}
 GET /w/gemini-test/idhX4RKRSGkBtDxmBV1h 200 in 3870ms
 ✓ Compiled /favicon.ico in 273ms (1314 modules)
 GET /favicon.ico 200 in 341ms
 ✓ Compiled /api/documents/save in 305ms (2162 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:01:55.053Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 953ms
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ✓ Compiled /api/wizard/execute in 448ms (2324 modules)
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: true,
  forceGoogleSearchGrounding: true,
  hasGroundingSettings: true,
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchEnabled: true,
  googleSearchThreshold: 0.3,
  streamingEnabled: undefined
}
[runAiStage] Enhanced prompt with AI REDO notes
[runAiStage] Filled prompt length: 355
[runAiStage] First 200 chars of filled prompt: Answer this question using current information from Google Search: tell me what happened yesterday in austria! 

IMPORTANT: Use Google Search grounding to find real, current information. Provide actua
[runAiStage] Grounding enabled for AI processing
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 355,
  model: 'gemini-2.0-flash',
  temperature: 0.7,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: true,
  hasGroundingSettings: true,
  googleSearchEnabled: true
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: true,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Answer this question using current information from Google Search: tell me what happened yesterday i...',
  chatHistory: 'none',
  groundingSettings: { googleSearch: { enabled: true, dynamicThreshold: 0.3 } },
  googleSearchSettings: { enabled: true, dynamicThreshold: 0.3 }
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: true
🔍 groundingSettings?.googleSearch?.enabled: true
🔍 Full groundingSettings object: {
  "googleSearch": {
    "enabled": true,
    "dynamicThreshold": 0.3
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 355
}
🚀🚀🚀 GOOGLE SEARCH GROUNDING REQUESTED! 🚀🚀🚀
🔧 Using Direct Gemini API with proper googleSearch tool...
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash',
  hasPrompt: true,
  enableGoogleSearch: true,
  temperature: 0.7
}
✅ [Direct Gemini] Adding Google Search grounding
🎯 [Direct Gemini] Dynamic retrieval threshold: 0.3
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash',
  contentsCount: 2,
  configKeys: [ 'temperature', 'toolConfig', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: true
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:02:08.337Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 2,
  supportsCount: 3,
  searchQueries: 1,
  sourcesExtracted: 2
}
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [ 'content', 'thinkingSteps', 'groundingMetadata', 'groundingSources' ]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 414,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 2,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
 POST /api/wizard/execute 200 in 2542ms
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 533ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 274ms
 ✓ Compiled in 734ms (2156 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:04:51.973Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Loading existing document: idhX4RKRSGkBtDxmBV1h
[DocumentPersistence] Loading document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'document-understanding-test',
    'code-execution-python',
    'final-summary',
    'function-calling-calculator',
    'image-understanding-test',
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'combined-features-test',
    'chat-mode-test',
    'thinking-mode-test',
    'function-calling-weather',
    'function-calling-unit-converter',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageCount: 14,
  validatedStageIds: [
    'document-understanding-test',
    'code-execution-python',
    'final-summary',
    'function-calling-calculator',
    'image-understanding-test',
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'combined-features-test',
    'chat-mode-test',
    'thinking-mode-test',
    'function-calling-weather',
    'function-calling-unit-converter',
    'streaming-test'
  ]
}
 GET /w/gemini-test/idhX4RKRSGkBtDxmBV1h 200 in 496ms
 ✓ Compiled /favicon.ico in 133ms (1314 modules)
 GET /favicon.ico 200 in 189ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:04:52.499Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ⨯ ./src/components/wizard/grounding-sources-display.tsx
Error:   [31mx[0m Unexpected token `Card`. Expected jsx identifier
    ,-[[36;1;4m/Users/franzenzenhofer/dev/franzai-writer/src/components/wizard/grounding-sources-display.tsx[0m:63:1]
 [2m60[0m |   const avgConfidence = hasGroundingSupports ? totalConfidence / groundingMetadata.groundingSupports.length : 0;
 [2m61[0m | 
 [2m62[0m |   return (
 [2m63[0m |     <Card className="mt-4 border-l-4 border-l-blue-500">
    : [35;1m     ^^^^[0m
 [2m64[0m |       <CardHeader 
 [2m65[0m |         className="pb-3 cursor-pointer hover:bg-muted/50 transition-colors"
 [2m66[0m |         onClick={() => setIsExpanded(!isExpanded)}
    `----

Caused by:
    Syntax Error

Import trace for requested module:
./src/components/wizard/grounding-sources-display.tsx
./src/components/wizard/stage-output-area.tsx
./src/components/wizard/stage-card.tsx
./src/components/wizard/wizard-shell.tsx
./src/app/w/[shortName]/[documentId]/wizard-page-content.tsx
./src/app/w/[shortName]/[documentId]/client-wrapper.tsx
 ✓ Compiled in 986ms (2172 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:05:15.447Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Loading existing document: idhX4RKRSGkBtDxmBV1h
[DocumentPersistence] Loading document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'grounding-google-search',
    'thinking-mode-test',
    'test-title',
    'image-understanding-test',
    'grounding-url-context',
    'function-calling-unit-converter',
    'document-understanding-test',
    'function-calling-calculator',
    'streaming-test',
    'code-execution-python',
    'final-summary',
    'combined-features-test',
    'function-calling-weather',
    'chat-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageCount: 14,
  validatedStageIds: [
    'grounding-google-search',
    'thinking-mode-test',
    'test-title',
    'image-understanding-test',
    'grounding-url-context',
    'function-calling-unit-converter',
    'document-understanding-test',
    'function-calling-calculator',
    'streaming-test',
    'code-execution-python',
    'final-summary',
    'combined-features-test',
    'function-calling-weather',
    'chat-mode-test'
  ]
}
 GET /w/gemini-test/idhX4RKRSGkBtDxmBV1h 200 in 426ms
 GET /favicon.ico 200 in 15ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:05:16.082Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 794ms (2156 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:06:57.291Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Loading existing document: idhX4RKRSGkBtDxmBV1h
[DocumentPersistence] Loading document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'streaming-test',
    'thinking-mode-test',
    'grounding-google-search',
    'function-calling-weather',
    'image-understanding-test',
    'test-title',
    'final-summary',
    'grounding-url-context',
    'function-calling-unit-converter',
    'chat-mode-test',
    'document-understanding-test',
    'code-execution-python',
    'function-calling-calculator',
    'combined-features-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageCount: 14,
  validatedStageIds: [
    'streaming-test',
    'thinking-mode-test',
    'grounding-google-search',
    'function-calling-weather',
    'image-understanding-test',
    'test-title',
    'final-summary',
    'grounding-url-context',
    'function-calling-unit-converter',
    'chat-mode-test',
    'document-understanding-test',
    'code-execution-python',
    'function-calling-calculator',
    'combined-features-test'
  ]
}
 GET /w/gemini-test/idhX4RKRSGkBtDxmBV1h 200 in 507ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:06:57.764Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 599ms (2156 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:08:19.773Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Loading existing document: idhX4RKRSGkBtDxmBV1h
[DocumentPersistence] Loading document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:08:20.250Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'final-summary',
    'image-understanding-test',
    'chat-mode-test',
    'grounding-url-context',
    'function-calling-weather',
    'document-understanding-test',
    'code-execution-python',
    'thinking-mode-test',
    'test-title',
    'function-calling-unit-converter',
    'combined-features-test',
    'streaming-test',
    'function-calling-calculator',
    'grounding-google-search'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageCount: 14,
  validatedStageIds: [
    'final-summary',
    'image-understanding-test',
    'chat-mode-test',
    'grounding-url-context',
    'function-calling-weather',
    'document-understanding-test',
    'code-execution-python',
    'thinking-mode-test',
    'test-title',
    'function-calling-unit-converter',
    'combined-features-test',
    'streaming-test',
    'function-calling-calculator',
    'grounding-google-search'
  ]
}
 GET /w/gemini-test/idhX4RKRSGkBtDxmBV1h 200 in 1264ms
 ✓ Compiled in 484ms (2156 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:09:05.392Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Loading existing document: idhX4RKRSGkBtDxmBV1h
[DocumentPersistence] Loading document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'image-understanding-test',
    'code-execution-python',
    'streaming-test',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'grounding-google-search',
    'grounding-url-context',
    'test-title',
    'document-understanding-test',
    'function-calling-calculator',
    'function-calling-weather',
    'final-summary',
    'combined-features-test',
    'chat-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageCount: 14,
  validatedStageIds: [
    'image-understanding-test',
    'code-execution-python',
    'streaming-test',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'grounding-google-search',
    'grounding-url-context',
    'test-title',
    'document-understanding-test',
    'function-calling-calculator',
    'function-calling-weather',
    'final-summary',
    'combined-features-test',
    'chat-mode-test'
  ]
}
 GET /w/gemini-test/idhX4RKRSGkBtDxmBV1h 200 in 351ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:09:05.811Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /api/documents/save in 210ms (1316 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:09:45.358Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 820ms
 ✓ Compiled /api/wizard/execute in 299ms (1478 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 93
[runAiStage] First 200 chars of filled prompt: Analyze the content from https://news.ycombinator.com/ and answer: list latest news headlines
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 93,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Analyze the content from https://news.ycombinator.com/ and answer: list latest news headlines...',
  chatHistory: 'none',
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: {
  "urlContext": {
    "enabled": true,
    "urls": [
      "{{userInput.url}}"
    ]
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Fetching URL context: [ '{{userInput.url}}' ]
[AI Stage Flow Enhanced] URL grounding failed: TypeError: Failed to parse URL from /api/fetch-url
    at aiStageExecutionFlow (src/ai/flows/ai-stage-execution.ts:194:33)
    at runAiStage (src/app/actions/aiActions-new.ts:245:29)
    at async POST (src/app/api/wizard/execute/route.ts:7:19)
  192 |         console.log('[AI Stage Flow Enhanced] Fetching URL context:', groundingSettings.urlContext.urls);
  193 |         for (const url of groundingSettings.urlContext.urls) {
> 194 |           const response = await fetch('/api/fetch-url', {
      |                                 ^
  195 |             method: 'POST',
  196 |             headers: { 'Content-Type': 'application/json' },
  197 |             body: JSON.stringify({ url }), {
  [cause]: TypeError: Invalid URL
      at aiStageExecutionFlow (src/ai/flows/ai-stage-execution.ts:194:33)
      at runAiStage (src/app/actions/aiActions-new.ts:245:29)
      at async POST (src/app/api/wizard/execute/route.ts:7:19)
    192 |         console.log('[AI Stage Flow Enhanced] Fetching URL context:', groundingSettings.urlContext.urls);
    193 |         for (const url of groundingSettings.urlContext.urls) {
  > 194 |           const response = await fetch('/api/fetch-url', {
        |                                 ^
    195 |             method: 'POST',
    196 |             headers: { 'Content-Type': 'application/json' },
    197 |             body: JSON.stringify({ url }), {
    code: 'ERR_INVALID_URL',
    input: '/api/fetch-url'
  }
}
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 93
}
[AI Stage Flow Enhanced] Generation path decision: {
  shouldUseStreaming: true,
  streamingEnabled: undefined,
  hasHistory: true,
  hasTools: false,
  googleSearchEnabled: undefined,
  modelUsed: 'gemini-2.0-flash-exp'
}
🔧🔧🔧 FINAL API REQUEST TOOLS CHECK 🔧🔧🔧
📋 generateOptions.tools: []
📋 generateOptions.config: {
  "temperature": 0.7
}
📊 Total tools count: 0
❌❌❌ NO GOOGLE SEARCH GROUNDING CONFIGURED ❌❌❌
🔧🔧🔧 ================================= 🔧🔧🔧
[AI Stage Flow Enhanced] Streaming iteration 1/5
[AI Stage Flow Enhanced] ===== API REQUEST DETAILS =====
[AI Stage Flow Enhanced] Full API Request Configuration: {
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  hasTools: false,
  toolsCount: 0,
  toolNames: [],
  hasGoogleSearchTool: false,
  systemInstruction: undefined,
  callHistoryLength: 1,
  fullCallHistory: [ { role: 'user', parts: [Array] } ],
  forceGoogleSearchGrounding: false
}
[AI Stage Flow Enhanced] Complete Google API Request: {
  "model": "gemini-2.0-flash-exp",
  "config": {
    "temperature": 0.7
  },
  "tools": [],
  "messages": [
    {
      "role": "user",
      "parts": [
        {
          "text": "Analyze the content from https://news.ycombinator.com/ and answer: list latest news headlines"
        }
      ]
    }
  ]
}
[AI Stage Flow Enhanced] Using streaming generation with @google/genai
🌊 [Direct Gemini] Starting streaming generation
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:09:47.998Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 515ms
[AI Stage Flow Enhanced] ===== API RESPONSE DETAILS =====
[AI Stage Flow Enhanced] Raw API Response Summary: {
  hasContent: true,
  contentLength: 2542,
  contentPreview: "Okay, I can't directly access and parse the live content of a website like Hacker News (https://news.ycombinator.com/). My capabilities are limited to processing text-based information. I don't have a...",
  hasGroundingMetadata: false,
  groundingMetadataKeys: [],
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasUsageMetadata: true,
  modelVersion: 'gemini-2.0-flash-exp'
}
[AI Stage Flow Enhanced] Complete Google API Response: {
  "content": "Okay, I can't directly access and parse the live content of a website like Hacker News (https://news.ycombinator.com/). My capabilities are limited to processing text-based information. I don't have a \"browser\" to actively visit websites.\n\nHowever, I can tell you how you can get the latest headlines and give you some *example* headlines based on what's generally popular on Hacker News:\n\n**How to Get the Latest Headlines:**\n\n1.  **Visit the Website:** The most straightforward way is to simply go to https://news.ycombinator.com/ in your web browser.\n\n2.  **Use an RSS Feed:** Hacker News provides an RSS feed. You can use an RSS reader (many are free, like Feedly) to subscribe to the feed and get updates whenever new stories are posted.  The RSS feed URL is: `https://news.ycombinator.com/rss`\n\n3.  **Use the Hacker News API:**  Hacker News has an official API.  If you're a developer, you can use the API to programmatically retrieve the latest stories.  You'll need to write code to interact with the API.  Documentation is available online if you search for \"Hacker News API\".\n\n**Example Headlines (Based on typical HN content - these are NOT live):**\n\nKeep in mind these are *examples*, not the actual current headlines. Hacker News content changes rapidly.\n\n*   \"Show HN: My new open-source project for [technology area]\"\n*   \"Ask HN: What are the best resources for learning [programming language/skill]?\"\n*   \"[Company Name] announces [new product/feature]\"\n*   \"The surprising reason why [tech trend] is failing\"\n*   \"We built a [cool tool/website] using [technology stack]\"\n*   \"Is [popular technology] overrated?\"\n*   \"I left my job at [Big Tech Company] to build my own startup\"\n*   \"The ethics of AI and its impact on society\"\n*   \"Guide to optimizing [database/system] performance\"\n*   \"Book recommendation: [Technical Book]\"\n*   \"Security vulnerability found in [popular software]\"\n*   \"Rust vs. Go: A comparison\"\n\n**Key Characteristics of Hacker News Headlines:**\n\n*   **Technical Focus:**  They are generally related to computer science, programming, technology, startups, and science.\n*   **Novelty:** They often highlight new projects, interesting articles, or thought-provoking discussions.\n*   **\"Show HN\" and \"Ask HN\":**  These prefixes indicate user-submitted projects and questions, respectively.\n*   **Conciseness:** Headlines are usually short and to the point.\n\nTo get the *actual* latest headlines, please use one of the methods I described above (visiting the website, using the RSS feed, or using the API).\n",
  "groundingSources": [],
  "usageMetadata": {
    "promptTokenCount": 21,
    "candidatesTokenCount": 617,
    "totalTokenCount": 638,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 21
      }
    ],
    "candidatesTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 617
      }
    ]
  },
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": " please use one of the methods I described above (visiting the website, using the RSS feed, or using the API).\n"
          }
        ],
        "role": "model"
      },
      "finishReason": "STOP"
    }
  ],
  "modelVersion": "gemini-2.0-flash-exp"
}
[AI Stage Flow Enhanced] ===== NO GOOGLE SEARCH GROUNDING FOUND =====
[AI Stage Flow Enhanced] ❌ Google Search Grounding NOT working - response has no grounding data
[AI Stage Flow Enhanced] This might indicate:
[AI Stage Flow Enhanced] 1. Google Search grounding is not properly configured
[AI Stage Flow Enhanced] 2. The model did not need to search for this query
[AI Stage Flow Enhanced] 3. There was an issue with the grounding service
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'outputImages',
  'updatedChatHistory',
  'groundingSources',
  'groundingMetadata',
  'functionCalls',
  'codeExecutionResults'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 2542,
  hasGroundingMetadata: false,
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: true,
  chatHistoryLength: 1
}
 POST /api/wizard/execute 200 in 5507ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 216ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 219ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Loading existing document: idhX4RKRSGkBtDxmBV1h
[DocumentPersistence] Loading document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:10:02.606Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageCount: 14,
  validatedStageIds: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
 GET /w/gemini-test/idhX4RKRSGkBtDxmBV1h 200 in 461ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:10:03.068Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /favicon.ico in 230ms (1480 modules)
 GET /favicon.ico 200 in 264ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:10:03.565Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'idhX4RKRSGkBtDxmBV1h' }
[WizardPage] Loading existing document: idhX4RKRSGkBtDxmBV1h
[DocumentPersistence] Loading document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'streaming-test',
    'document-understanding-test',
    'chat-mode-test',
    'function-calling-calculator',
    'image-understanding-test',
    'thinking-mode-test',
    'final-summary',
    'function-calling-weather',
    'grounding-url-context',
    'combined-features-test',
    'code-execution-python',
    'function-calling-unit-converter',
    'grounding-google-search',
    'test-title'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  stageCount: 14,
  validatedStageIds: [
    'streaming-test',
    'document-understanding-test',
    'chat-mode-test',
    'function-calling-calculator',
    'image-understanding-test',
    'thinking-mode-test',
    'final-summary',
    'function-calling-weather',
    'grounding-url-context',
    'combined-features-test',
    'code-execution-python',
    'function-calling-unit-converter',
    'grounding-google-search',
    'test-title'
  ]
}
 GET /w/gemini-test/idhX4RKRSGkBtDxmBV1h 200 in 390ms
 GET /favicon.ico 200 in 16ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:10:04.013Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 394ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'idhX4RKRSGkBtDxmBV1h',
  title: 'Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'idhX4RKRSGkBtDxmBV1h' }
[DocumentPersistence] Document updated successfully { documentId: 'idhX4RKRSGkBtDxmBV1h' }
 POST /api/documents/save 200 in 238ms
 ○ Compiling /dashboard ...
 ✓ Compiled /dashboard in 745ms (2365 modules)
 GET /dashboard 200 in 796ms
 ✓ Compiled /w/[shortName]/new in 228ms (2367 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:10:14.167Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:10:14.281Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mbxkdc7mwxnov2g',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749985814290_whs2pnetd',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749985814290_whs2pnetd',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: '1ktcGY9ndfI2E2qjsLnx',
  path: 'documents/1ktcGY9ndfI2E2qjsLnx'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: '1ktcGY9ndfI2E2qjsLnx',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document created { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: '1ktcGY9ndfI2E2qjsLnx',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  error: undefined,
  originalId: 'mbxkdc7mwxnov2g'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxkdc7mwxnov2g',
  createdId: '1ktcGY9ndfI2E2qjsLnx',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/1ktcGY9ndfI2E2qjsLnx' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 1173ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '1ktcGY9ndfI2E2qjsLnx' }
[WizardPage] Loading existing document: 1ktcGY9ndfI2E2qjsLnx
[DocumentPersistence] Loading document { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '1ktcGY9ndfI2E2qjsLnx' }
[WizardPage] Loading existing document: 1ktcGY9ndfI2E2qjsLnx
[DocumentPersistence] Loading document { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] Document loaded successfully {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] Document loaded successfully {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/gemini-test/1ktcGY9ndfI2E2qjsLnx 200 in 181ms
 GET /w/gemini-test/1ktcGY9ndfI2E2qjsLnx 200 in 148ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:10:15.114Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] Document updated successfully { documentId: '1ktcGY9ndfI2E2qjsLnx' }
 POST /api/documents/save 200 in 288ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] Document updated successfully { documentId: '1ktcGY9ndfI2E2qjsLnx' }
 POST /api/documents/save 200 in 260ms
 ✓ Compiled in 277ms (1298 modules)
Debugger listening on ws://127.0.0.1:9229/09c188ba-f314-4b2c-bae7-a04afb43ad46
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 1205855,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/d5302daf-d5a7-4313-afdd-9bf10ec26d9d
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 2.6s
 ○ Compiling /_not-found ...
 ✓ Compiled /_not-found in 1780ms (1173 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:21:54.985Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET /health 404 in 2150ms
 ✓ Compiled in 259ms (456 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ○ Compiling /w/[shortName]/new ...
 ✓ Compiled /w/[shortName]/new in 1142ms (1509 modules)
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 96
[runAiStage] First 200 chars of filled prompt: Analyze the content from https://news.ycombinator.com/ and answer: Tell me the latest headlines 
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 96,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Analyze the content from https://news.ycombinator.com/ and answer: Tell me the latest headlines ...',
  chatHistory: 'none',
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: {
  "urlContext": {
    "enabled": true,
    "urls": [
      "{{userInput.url}}"
    ]
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 96
}
🚀🚀🚀 GROUNDING REQUESTED! 🚀🚀🚀
🌐 Using Direct Gemini API with proper urlContext tool...
🔗 URLs to process: [ '{{userInput.url}}' ]
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash-exp',
  hasPrompt: true,
  enableGoogleSearch: undefined,
  temperature: 0.7
}
✅ [Direct Gemini] Adding URL Context grounding
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash-exp',
  contentsCount: 1,
  configKeys: [ 'temperature', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: false
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:22:03.301Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:22:03.401Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mbxksjdgwahaa1c',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749986523413_lgags68mi',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749986523413_lgags68mi',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'iyzltizBag395YXSCCUy',
  path: 'documents/iyzltizBag395YXSCCUy'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'iyzltizBag395YXSCCUy',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:22:03.567Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /api/documents/save in 132ms (1511 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:22:03.834Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'iyzltizBag395YXSCCUy' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'iyzltizBag395YXSCCUy' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'iyzltizBag395YXSCCUy',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'iyzltizBag395YXSCCUy' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'iyzltizBag395YXSCCUy',
  error: undefined,
  originalId: 'mbxksjdgwahaa1c'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxksjdgwahaa1c',
  createdId: 'iyzltizBag395YXSCCUy',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/iyzltizBag395YXSCCUy' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
 GET /w/gemini-test/new 307 in 2188ms
[FirestoreAdapter] Document updated { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] Document updated successfully { documentId: '1ktcGY9ndfI2E2qjsLnx' }
 POST /api/documents/save 200 in 634ms
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 1,
  supportsCount: 26,
  searchQueries: 0,
  sourcesExtracted: 1
}
✅ [Direct Gemini] Found URL context metadata!
📊 [Direct Gemini] URL Context stats: { urlsProcessed: 1, urlsSuccess: 1 }
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 2091,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 2,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
 POST /api/wizard/execute 200 in 6487ms
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mbxksnsuw56fur7',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749986529150_28rvyxw6l',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749986529150_28rvyxw6l',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'TqvN7HmSrh2OOnIQGkva',
  path: 'documents/TqvN7HmSrh2OOnIQGkva'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'TqvN7HmSrh2OOnIQGkva',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:22:09.249Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'TqvN7HmSrh2OOnIQGkva' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'TqvN7HmSrh2OOnIQGkva' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'TqvN7HmSrh2OOnIQGkva',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'TqvN7HmSrh2OOnIQGkva' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'TqvN7HmSrh2OOnIQGkva',
  error: undefined,
  originalId: 'mbxksnsuw56fur7'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxksnsuw56fur7',
  createdId: 'TqvN7HmSrh2OOnIQGkva',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/TqvN7HmSrh2OOnIQGkva' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 307 in 272ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:22:09.550Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] Document updated successfully { documentId: '1ktcGY9ndfI2E2qjsLnx' }
 POST /api/documents/save 200 in 242ms
 ✓ Compiled /api/test-ai in 229ms (1513 modules)
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'Analyze the content from {{userInput.url}} and answer: {{userInput.question}}',
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  contextVars: {
    'test-title': { userInput: 'Test', output: 'Test' },
    'grounding-url-context': { userInput: [Object] }
  },
  currentStageInput: {
    url: 'https://news.ycombinator.com/',
    question: 'Tell me the latest headlines'
  },
  stageOutputType: 'text',
  forceGoogleSearchGrounding: false,
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } }
}
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 95
[runAiStage] First 200 chars of filled prompt: Analyze the content from https://news.ycombinator.com/ and answer: Tell me the latest headlines
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 95,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Analyze the content from https://news.ycombinator.com/ and answer: Tell me the latest headlines...',
  chatHistory: 'none',
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: {
  "urlContext": {
    "enabled": true,
    "urls": [
      "{{userInput.url}}"
    ]
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 95
}
🚀🚀🚀 GROUNDING REQUESTED! 🚀🚀🚀
🌐 Using Direct Gemini API with proper urlContext tool...
🔗 URLs to process: [ '{{userInput.url}}' ]
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash-exp',
  hasPrompt: true,
  enableGoogleSearch: undefined,
  temperature: 0.7
}
✅ [Direct Gemini] Adding URL Context grounding
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash-exp',
  contentsCount: 1,
  configKeys: [ 'temperature', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: false
}
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 1,
  supportsCount: 10,
  searchQueries: 0,
  sourcesExtracted: 1
}
✅ [Direct Gemini] Found URL context metadata!
📊 [Direct Gemini] URL Context stats: { urlsProcessed: 1, urlsSuccess: 1 }
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 678,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 2,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
[TEST-AI] Result: {
  content: 'Here are the latest headlines from Hacker News:\n' +
    '\n' +
    '1. Q-learning is not yet scalable (seohong.me)\n' +
    '2. Infinite Grid of Resistors (mathpages.com)\n' +
    '3. I have reimplemented Stable Diffusion 3.5 from scratch in pure PyTorch (github.com/yousef-rafat)\n' +
    '4. Breaking My Security Assignments (akpain.net)\n' +
    "5. AMD's AI Future Is Rack Scale 'Helios' (morethanmoore.substack.com)\n" +
    '6. Wrong ways to use the databases, when the pendulum swung too far (luu.io)\n' +
    '7. Dance Captcha (dance-captcha.vercel.app)\n' +
    '8. Chicken Eyeglasses (wikipedia.org)\n' +
    "9. Solar Orbiter gets world-first views of the Sun's poles (esa.int)\n" +
    '10. Inside the Apollo “8-Ball” FDAI (Flight Director / Attitude Indicator) (righto.com)\n',
  groundingMetadata: {
    groundingChunks: [ [Object] ],
    groundingSupports: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object]
    ]
  },
  groundingSources: [
    {
      type: 'search',
      title: 'Hacker News',
      url: 'https://news.ycombinator.com/',
      snippet: ''
    },
    {
      type: 'search',
      title: 'https://news.ycombinator.com/',
      url: 'https://news.ycombinator.com/',
      snippet: 'URL Context Source'
    }
  ],
  thinkingSteps: undefined,
  outputImages: undefined,
  updatedChatHistory: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: true
  - Has grounding sources: true
  - Grounding metadata keys: [ 'groundingChunks', 'groundingSupports' ]
  - Grounding chunks: 1
  - Grounding supports: 10
  - Grounding sources count: 2
  - First source: {
  type: 'search',
  title: 'Hacker News',
  url: 'https://news.ycombinator.com/',
  snippet: ''
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 2790ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'What is the main heading on {{userInput.url}}?',
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  contextVars: { 'grounding-url-context': { userInput: [Object] } },
  currentStageInput: { url: 'https://example.com' },
  stageOutputType: 'text',
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } }
}
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 48
[runAiStage] First 200 chars of filled prompt: What is the main heading on https://example.com?
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 48,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'What is the main heading on https://example.com?...',
  chatHistory: 'none',
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: {
  "urlContext": {
    "enabled": true,
    "urls": [
      "{{userInput.url}}"
    ]
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 48
}
🚀🚀🚀 GROUNDING REQUESTED! 🚀🚀🚀
🌐 Using Direct Gemini API with proper urlContext tool...
🔗 URLs to process: [ '{{userInput.url}}' ]
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash-exp',
  hasPrompt: true,
  enableGoogleSearch: undefined,
  temperature: 0.1
}
✅ [Direct Gemini] Adding URL Context grounding
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash-exp',
  contentsCount: 1,
  configKeys: [ 'temperature', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: false
}
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 0,
  supportsCount: 0,
  searchQueries: 0,
  sourcesExtracted: 0
}
❌ [Direct Gemini] No URL context metadata found
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 117,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 0,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
[TEST-AI] Result: {
  content: 'I need a valid URL to browse. The placeholder `{{userInput.url}}` is not a valid URL. Please provide a specific URL.\n',
  groundingMetadata: {},
  groundingSources: [],
  thinkingSteps: undefined,
  outputImages: undefined,
  updatedChatHistory: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: true
  - Has grounding sources: false
  - Grounding metadata keys: []
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 827ms
 ✓ Compiled in 299ms (767 modules)
 ✓ Compiled /api/wizard/execute in 67ms (315 modules)
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-thinking-exp',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  groundingSettings: undefined,
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 51
[runAiStage] First 200 chars of filled prompt: Solve this problem step by step: a simple answer! 

[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 51,
  model: 'gemini-2.0-flash-thinking-exp',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: true,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-thinking-exp',
  hasTools: false,
  hasGrounding: false,
  forceGoogleSearchGrounding: false,
  hasThinking: true,
  isStreaming: undefined,
  promptTemplate: 'Solve this problem step by step: a simple answer! \n...',
  chatHistory: 'none',
  groundingSettings: undefined,
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: undefined
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 51
}
[AI Stage Flow Enhanced] Switched to thinking model: googleai/gemini-2.5-flash-preview
[AI Stage Flow Enhanced] Generation path decision: {
  shouldUseStreaming: true,
  streamingEnabled: undefined,
  hasHistory: true,
  hasTools: false,
  googleSearchEnabled: undefined,
  modelUsed: 'googleai/gemini-2.5-flash-preview'
}
🔧🔧🔧 FINAL API REQUEST TOOLS CHECK 🔧🔧🔧
📋 generateOptions.tools: []
📋 generateOptions.config: {
  "temperature": 0.7,
  "thinkingConfig": {
    "includeThoughts": true,
    "thinkingBudget": 8192
  }
}
📊 Total tools count: 0
❌❌❌ NO GOOGLE SEARCH GROUNDING CONFIGURED ❌❌❌
🔧🔧🔧 ================================= 🔧🔧🔧
[AI Stage Flow Enhanced] Streaming iteration 1/5
[AI Stage Flow Enhanced] ===== API REQUEST DETAILS =====
[AI Stage Flow Enhanced] Full API Request Configuration: {
  model: 'googleai/gemini-2.5-flash-preview',
  temperature: 0.7,
  hasTools: false,
  toolsCount: 0,
  toolNames: [],
  hasGoogleSearchTool: false,
  systemInstruction: undefined,
  callHistoryLength: 1,
  fullCallHistory: [ { role: 'user', parts: [Array] } ],
  forceGoogleSearchGrounding: false
}
[AI Stage Flow Enhanced] Complete Google API Request: {
  "model": "googleai/gemini-2.5-flash-preview",
  "config": {
    "temperature": 0.7,
    "thinkingConfig": {
      "includeThoughts": true,
      "thinkingBudget": 8192
    }
  },
  "tools": [],
  "messages": [
    {
      "role": "user",
      "parts": [
        {
          "text": "Solve this problem step by step: a simple answer! \n"
        }
      ]
    }
  ]
}
[AI Stage Flow Enhanced] Using streaming generation with @google/genai
🌊 [Direct Gemini] Starting streaming generation
[AI Stage Flow Enhanced] Streaming execution failed: Error [ClientError]: got status: 404 Not Found. {"error":{"message":"","code":404,"status":"Not Found"}}
    at async processStream (src/ai/direct-gemini.ts:310:21)
    at async executeWithStreaming (src/ai/flows/ai-stage-execution.ts:527:23)
    at async aiStageExecutionFlow (src/ai/flows/ai-stage-execution.ts:354:13)
    at async runAiStage (src/app/actions/aiActions-new.ts:245:23)
    at async POST (src/app/api/wizard/execute/route.ts:7:19)
  308 |       let finalGroundingSources: DirectGeminiResponse['groundingSources'] = [];
  309 |
> 310 |       const stream = await streamPromise;
      |                     ^
  311 |       for await (const chunk of stream) {
  312 |         const chunkText = chunk.text || '';
  313 |         accumulatedContent += chunkText; {
  [cause]: 'Error: \n' +
    '    at new ClientError (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:10821:37)\n' +
    '    at throwErrorIfNotOK (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11309:33)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async eval (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11098:13)\n' +
    '    at async Models.generateContentStream (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:12346:24)\n' +
    '    at async processStream (webpack-internal:///(rsc)/./src/ai/direct-gemini.ts:247:28)\n' +
    '    at async executeWithStreaming (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:519:30)\n' +
    '    at async aiStageExecutionFlow (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:388:16)\n' +
    '    at async runAiStage (webpack-internal:///(rsc)/./src/app/actions/aiActions-new.ts:161:24)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/wizard/execute/route.ts:12:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
[runAiStage] Error during AI execution: Error [ClientError]: got status: 404 Not Found. {"error":{"message":"","code":404,"status":"Not Found"}}
    at async processStream (src/ai/direct-gemini.ts:310:21)
    at async executeWithStreaming (src/ai/flows/ai-stage-execution.ts:527:23)
    at async aiStageExecutionFlow (src/ai/flows/ai-stage-execution.ts:354:13)
    at async runAiStage (src/app/actions/aiActions-new.ts:245:23)
    at async POST (src/app/api/wizard/execute/route.ts:7:19)
  308 |       let finalGroundingSources: DirectGeminiResponse['groundingSources'] = [];
  309 |
> 310 |       const stream = await streamPromise;
      |                     ^
  311 |       for await (const chunk of stream) {
  312 |         const chunkText = chunk.text || '';
  313 |         accumulatedContent += chunkText; {
  [cause]: 'Error: \n' +
    '    at new ClientError (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:10821:37)\n' +
    '    at throwErrorIfNotOK (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11309:33)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async eval (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11098:13)\n' +
    '    at async Models.generateContentStream (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:12346:24)\n' +
    '    at async processStream (webpack-internal:///(rsc)/./src/ai/direct-gemini.ts:247:28)\n' +
    '    at async executeWithStreaming (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:519:30)\n' +
    '    at async aiStageExecutionFlow (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:388:16)\n' +
    '    at async runAiStage (webpack-internal:///(rsc)/./src/app/actions/aiActions-new.ts:161:24)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/wizard/execute/route.ts:12:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
 POST /api/wizard/execute 200 in 406ms
 ✓ Compiled /api/documents/save in 76ms (449 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:23:29.360Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] Document updated successfully { documentId: '1ktcGY9ndfI2E2qjsLnx' }
 POST /api/documents/save 200 in 703ms
 ✓ Compiled in 174ms (903 modules)
 ✓ Compiled in 269ms (901 modules)
 ✓ Compiled /api/test-ai in 68ms (449 modules)
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'Analyze the content from {{userInput.url}} and answer: {{userInput.question}}',
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  contextVars: {
    'test-title': { userInput: 'Test', output: 'Test' },
    'grounding-url-context': { userInput: [Object] }
  },
  currentStageInput: {
    url: 'https://news.ycombinator.com/',
    question: 'Tell me the latest headlines'
  },
  stageOutputType: 'text',
  forceGoogleSearchGrounding: false,
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } }
}
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 95
[runAiStage] First 200 chars of filled prompt: Analyze the content from https://news.ycombinator.com/ and answer: Tell me the latest headlines
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 95,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Analyze the content from https://news.ycombinator.com/ and answer: Tell me the latest headlines...',
  chatHistory: 'none',
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: {
  "urlContext": {
    "enabled": true,
    "urls": [
      "{{userInput.url}}"
    ]
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 95
}
🚀🚀🚀 GROUNDING REQUESTED! 🚀🚀🚀
🌐 Using Direct Gemini API with proper urlContext tool...
🔗 URLs to process: [ '{{userInput.url}}' ]
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash-exp',
  hasPrompt: true,
  enableGoogleSearch: undefined,
  temperature: 0.7
}
✅ [Direct Gemini] Adding URL Context grounding
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash-exp',
  contentsCount: 1,
  configKeys: [ 'temperature', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: false
}
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 1,
  supportsCount: 26,
  searchQueries: 0,
  sourcesExtracted: 1
}
✅ [Direct Gemini] Found URL context metadata!
📊 [Direct Gemini] URL Context stats: { urlsProcessed: 1, urlsSuccess: 1 }
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 2091,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 2,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
[TEST-AI] Result: {
  content: 'Here are the latest headlines from Hacker News:\n' +
    '\n' +
    '1. Q-learning is not yet scalable (seohong.me)\n' +
    '2. Infinite Grid of Resistors (mathpages.com)\n' +
    '3. I have reimplemented Stable Diffusion 3.5 from scratch in pure PyTorch (github.com/yousef-rafat)\n' +
    '4. Breaking My Security Assignments (akpain.net)\n' +
    "5. AMD's AI Future Is Rack Scale 'Helios' (morethanmoore.substack.com)\n" +
    '6. Wrong ways to use the databases, when the pendulum swung too far (luu.io)\n' +
    '7. Dance Captcha (dance-captcha.vercel.app)\n' +
    '8. Chicken Eyeglasses (wikipedia.org)\n' +
    "9. Solar Orbiter gets world-first views of the Sun's poles (esa.int)\n" +
    '10. Inside the Apollo “8-Ball” FDAI (Flight Director / Attitude Indicator) (righto.com)\n' +
    '11. Waymo rides cost more than Uber or Lyft and people are paying anyway (techcrunch.com)\n' +
    '12. Have a damaged painting? Restore it in just hours with an AI-generated “mask” (news.mit.edu)\n' +
    '13. Fixing the mechanics of my bullet chess (jacobbrazeal.wordpress.com)\n' +
    '14. Last fifty years of integer linear programming: Recent practical advances (hal.science)\n' +
    '15. Debunking HDR [video] (yedlin.net)\n' +
    '16. CI/CD Observability with OpenTelemetry Step by Step Guide (signoz.io)\n' +
    '17. Unsupervised Elicitation of Language Models (arxiv.org)\n' +
    '18. Cray versus Raspberry Pi (aardvark.co.nz)\n' +
    '19. Seven replies to the viral Apple reasoning paper and why they fall short (garymarcus.substack.com)\n' +
    '20. Endometriosis is an interesting disease (owlposting.com)\n' +
    '21. SIMD-friendly algorithms for substring searching (2016) (0x80.pl)\n' +
    '22. The Many Sides of Erik Satie (mitpress.mit.edu)\n' +
    '23. How to Build Conscious Machines (osf.io)\n' +
    '24. Sperm are very different from all other cells (bbc.com)\n' +
    "25. We investigated Amsterdam's attempt to build a 'fair' fraud detection model (lighthousereports.com)\n" +
    '26. Bioprospectors mine microbial genomes for antibiotic gold (acs.org)\n' +
    '27. Clinical knowledge in LLMs does not translate to human interactions (arxiv.org)\n' +
    '28. TimeGuessr (timeguessr.com)\n' +
    '29. Slowing the flow of core-dump-related CVEs (lwn.net)\n' +
    '30. Peano arithmetic is enough, because Peano arithmetic encodes computation (math.stackexchange.com)\n',
  groundingMetadata: {
    groundingChunks: [ [Object] ],
    groundingSupports: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ]
  },
  groundingSources: [
    {
      type: 'search',
      title: 'Hacker News',
      url: 'https://news.ycombinator.com/',
      snippet: ''
    },
    {
      type: 'search',
      title: 'https://news.ycombinator.com/',
      url: 'https://news.ycombinator.com/',
      snippet: 'URL Context Source'
    }
  ],
  thinkingSteps: undefined,
  outputImages: undefined,
  updatedChatHistory: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: true
  - Has grounding sources: true
  - Grounding metadata keys: [ 'groundingChunks', 'groundingSupports' ]
  - Grounding chunks: 1
  - Grounding supports: 26
  - Grounding sources count: 2
  - First source: {
  type: 'search',
  title: 'Hacker News',
  url: 'https://news.ycombinator.com/',
  snippet: ''
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 4944ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'What is the main heading on {{userInput.url}}?',
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  contextVars: { 'grounding-url-context': { userInput: [Object] } },
  currentStageInput: { url: 'https://example.com' },
  stageOutputType: 'text',
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } }
}
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 48
[runAiStage] First 200 chars of filled prompt: What is the main heading on https://example.com?
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 48,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'What is the main heading on https://example.com?...',
  chatHistory: 'none',
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: {
  "urlContext": {
    "enabled": true,
    "urls": [
      "{{userInput.url}}"
    ]
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 48
}
🚀🚀🚀 GROUNDING REQUESTED! 🚀🚀🚀
🌐 Using Direct Gemini API with proper urlContext tool...
🔗 URLs to process: [ '{{userInput.url}}' ]
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash-exp',
  hasPrompt: true,
  enableGoogleSearch: undefined,
  temperature: 0.1
}
✅ [Direct Gemini] Adding URL Context grounding
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash-exp',
  contentsCount: 1,
  configKeys: [ 'temperature', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: false
}
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 0,
  supportsCount: 0,
  searchQueries: 0,
  sourcesExtracted: 0
}
❌ [Direct Gemini] No URL context metadata found
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 193,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 0,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
[TEST-AI] Result: {
  content: 'I need a valid URL to browse. The placeholder `{{userInput.url}}` is not a valid URL. Please provide a specific URL like "https://www.example.com" so I can browse it and find the main heading.\n',
  groundingMetadata: {},
  groundingSources: [],
  thinkingSteps: undefined,
  outputImages: undefined,
  updatedChatHistory: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: true
  - Has grounding sources: false
  - Grounding metadata keys: []
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 1059ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:26:00.962Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] Document updated successfully { documentId: '1ktcGY9ndfI2E2qjsLnx' }
 POST /api/documents/save 200 in 1777ms
 ○ Compiling /w/[shortName]/[documentId] ...
 ✓ Compiled /w/[shortName]/[documentId] in 1813ms (2174 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:26:32.192Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:26:32.292Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '1ktcGY9ndfI2E2qjsLnx' }
[WizardPage] Loading existing document: 1ktcGY9ndfI2E2qjsLnx
[DocumentPersistence] Loading document { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:26:32.445Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ○ Compiling /dashboard ...
 ✓ Compiled /dashboard in 683ms (2201 modules)
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] Document loaded successfully {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'image-understanding-test',
    'thinking-mode-test',
    'document-understanding-test',
    'function-calling-weather',
    'streaming-test',
    'combined-features-test',
    'code-execution-python',
    'chat-mode-test',
    'function-calling-calculator',
    'grounding-url-context',
    'function-calling-unit-converter',
    'test-title',
    'grounding-google-search',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'image-understanding-test',
    'thinking-mode-test',
    'document-understanding-test',
    'function-calling-weather',
    'streaming-test',
    'combined-features-test',
    'code-execution-python',
    'chat-mode-test',
    'function-calling-calculator',
    'grounding-url-context',
    'function-calling-unit-converter',
    'test-title',
    'grounding-google-search',
    'final-summary'
  ]
}
 GET /dashboard 200 in 887ms
 GET /w/gemini-test/1ktcGY9ndfI2E2qjsLnx 200 in 3622ms
 ✓ Compiled /favicon.ico in 232ms (1343 modules)
 GET /favicon.ico 200 in 256ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:26:36.336Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '1ktcGY9ndfI2E2qjsLnx',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '1ktcGY9ndfI2E2qjsLnx' }
[DocumentPersistence] Document updated successfully { documentId: '1ktcGY9ndfI2E2qjsLnx' }
 POST /api/documents/save 200 in 622ms
 GET /dashboard 200 in 60ms
 ✓ Compiled /w/[shortName]/new in 264ms (1345 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:26:42.295Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mbxkyikcweq5y32',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749986802300_gbxapiyxq',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749986802300_gbxapiyxq',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'MQ8j2wzqCRqFdDQ5Rs0n',
  path: 'documents/MQ8j2wzqCRqFdDQ5Rs0n'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'MQ8j2wzqCRqFdDQ5Rs0n',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  error: undefined,
  originalId: 'mbxkyikcweq5y32'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxkyikcweq5y32',
  createdId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/MQ8j2wzqCRqFdDQ5Rs0n' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 674ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[WizardPage] Loading existing document: MQ8j2wzqCRqFdDQ5Rs0n
[DocumentPersistence] Loading document { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[WizardPage] Loading existing document: MQ8j2wzqCRqFdDQ5Rs0n
[DocumentPersistence] Loading document { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/gemini-test/MQ8j2wzqCRqFdDQ5Rs0n 200 in 134ms
 GET /w/gemini-test/MQ8j2wzqCRqFdDQ5Rs0n 200 in 104ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:26:42.866Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:26:43.132Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[DocumentPersistence] Document updated successfully { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
 POST /api/documents/save 200 in 248ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[DocumentPersistence] Document updated successfully { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
 POST /api/documents/save 200 in 224ms
 ✓ Compiled /api/wizard/execute in 459ms (1507 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 89
[runAiStage] First 200 chars of filled prompt: Analyze the content from https://news.ycombinator.com/ and answer: the top 5 headlines! 

[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 89,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Analyze the content from https://news.ycombinator.com/ and answer: the top 5 headlines! \n' +
    '...',
  chatHistory: 'none',
  groundingSettings: { urlContext: { enabled: true, urls: [Array] } },
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: {
  "urlContext": {
    "enabled": true,
    "urls": [
      "{{userInput.url}}"
    ]
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 89
}
🚀🚀🚀 GROUNDING REQUESTED! 🚀🚀🚀
🌐 Using Direct Gemini API with proper urlContext tool...
🔗 URLs to process: [ '{{userInput.url}}' ]
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash-exp',
  hasPrompt: true,
  enableGoogleSearch: undefined,
  temperature: 0.7
}
✅ [Direct Gemini] Adding URL Context grounding
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash-exp',
  contentsCount: 1,
  configKeys: [ 'temperature', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: false
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:27:02.047Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[WizardPage] Loading existing document: MQ8j2wzqCRqFdDQ5Rs0n
[DocumentPersistence] Loading document { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'combined-features-test',
    'final-summary',
    'function-calling-unit-converter',
    'chat-mode-test',
    'function-calling-weather',
    'image-understanding-test',
    'grounding-url-context',
    'test-title',
    'thinking-mode-test',
    'function-calling-calculator',
    'grounding-google-search',
    'streaming-test',
    'document-understanding-test',
    'code-execution-python'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'combined-features-test',
    'final-summary',
    'function-calling-unit-converter',
    'chat-mode-test',
    'function-calling-weather',
    'image-understanding-test',
    'grounding-url-context',
    'test-title',
    'thinking-mode-test',
    'function-calling-calculator',
    'grounding-google-search',
    'streaming-test',
    'document-understanding-test',
    'code-execution-python'
  ]
}
 GET /w/gemini-test/MQ8j2wzqCRqFdDQ5Rs0n 200 in 321ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:27:02.492Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 1,
  supportsCount: 2,
  searchQueries: 0,
  sourcesExtracted: 1
}
✅ [Direct Gemini] Found URL context metadata!
📊 [Direct Gemini] URL Context stats: { urlsProcessed: 1, urlsSuccess: 1 }
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 430,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 2,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
 POST /api/wizard/execute 200 in 2361ms
[FirestoreAdapter] Document updated { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[DocumentPersistence] Document updated successfully { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
 POST /api/documents/save 200 in 381ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[DocumentPersistence] Document updated successfully { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
 POST /api/documents/save 200 in 197ms
 ✓ Compiled in 990ms (2379 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:27:42.657Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[WizardPage] Loading existing document: MQ8j2wzqCRqFdDQ5Rs0n
[DocumentPersistence] Loading document { documentId: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'MQ8j2wzqCRqFdDQ5Rs0n' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'combined-features-test',
    'test-title',
    'function-calling-unit-converter',
    'grounding-google-search',
    'thinking-mode-test',
    'image-understanding-test',
    'chat-mode-test',
    'function-calling-weather',
    'code-execution-python',
    'grounding-url-context',
    'function-calling-calculator',
    'streaming-test',
    'final-summary',
    'document-understanding-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'MQ8j2wzqCRqFdDQ5Rs0n',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'combined-features-test',
    'test-title',
    'function-calling-unit-converter',
    'grounding-google-search',
    'thinking-mode-test',
    'image-understanding-test',
    'chat-mode-test',
    'function-calling-weather',
    'code-execution-python',
    'grounding-url-context',
    'function-calling-calculator',
    'streaming-test',
    'final-summary',
    'document-understanding-test'
  ]
}
 GET /w/gemini-test/MQ8j2wzqCRqFdDQ5Rs0n 200 in 481ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:27:43.220Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET /dashboard 200 in 57ms
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mbxl3p8zwlbi5ih',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1749987044244_th3wsnjez',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1749987044244_th3wsnjez',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'aXg7gLuoBWZUqpGkhW3h',
  path: 'documents/aXg7gLuoBWZUqpGkhW3h'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'aXg7gLuoBWZUqpGkhW3h',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'aXg7gLuoBWZUqpGkhW3h',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  error: undefined,
  originalId: 'mbxl3p8zwlbi5ih'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mbxl3p8zwlbi5ih',
  createdId: 'aXg7gLuoBWZUqpGkhW3h',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/aXg7gLuoBWZUqpGkhW3h' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 290ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 163ms
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 142ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:30:44.860Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:30:45.039Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 259ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 14,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 14,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 14
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 210ms
 ✓ Compiled in 442ms (2185 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:33:54.283Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'grounding-google-search',
    'function-calling-weather',
    'final-summary',
    'streaming-test',
    'chat-mode-test',
    'combined-features-test',
    'image-understanding-test',
    'code-execution-python',
    'test-title',
    'function-calling-calculator',
    'document-understanding-test',
    'thinking-mode-test',
    'grounding-url-context',
    'function-calling-unit-converter'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'grounding-google-search',
    'function-calling-weather',
    'final-summary',
    'streaming-test',
    'chat-mode-test',
    'combined-features-test',
    'image-understanding-test',
    'code-execution-python',
    'test-title',
    'function-calling-calculator',
    'document-understanding-test',
    'thinking-mode-test',
    'grounding-url-context',
    'function-calling-unit-converter'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 437ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:33:54.617Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 509ms (2185 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:35:15.531Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'document-understanding-test',
    'test-title',
    'code-execution-python',
    'function-calling-unit-converter',
    'function-calling-weather',
    'chat-mode-test',
    'grounding-url-context',
    'final-summary',
    'function-calling-calculator',
    'thinking-mode-test',
    'grounding-google-search',
    'image-understanding-test',
    'combined-features-test',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'document-understanding-test',
    'test-title',
    'code-execution-python',
    'function-calling-unit-converter',
    'function-calling-weather',
    'chat-mode-test',
    'grounding-url-context',
    'final-summary',
    'function-calling-calculator',
    'thinking-mode-test',
    'grounding-google-search',
    'image-understanding-test',
    'combined-features-test',
    'streaming-test'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 325ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:35:16.026Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 248ms (2185 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:35:38.925Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'thinking-mode-test',
    'function-calling-unit-converter',
    'document-understanding-test',
    'combined-features-test',
    'final-summary',
    'code-execution-python',
    'streaming-test',
    'grounding-google-search',
    'grounding-url-context',
    'function-calling-calculator',
    'chat-mode-test',
    'image-understanding-test',
    'function-calling-weather',
    'test-title'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'thinking-mode-test',
    'function-calling-unit-converter',
    'document-understanding-test',
    'combined-features-test',
    'final-summary',
    'code-execution-python',
    'streaming-test',
    'grounding-google-search',
    'grounding-url-context',
    'function-calling-calculator',
    'chat-mode-test',
    'image-understanding-test',
    'function-calling-weather',
    'test-title'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 315ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:35:39.348Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ○ Compiling /api/test-ai ...
 ✓ Compiled /api/test-ai in 572ms (1501 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'I need to compare information from these websites. First, check out https://example.com which is a simple test site. Then look at https://news.ycombinator.com/ for the latest tech news. \n' +
    '\n' +
    'Please tell me:\n' +
    '1. What is the main content of the example.com site?\n' +
    '2. What are the top 3 headlines from Hacker News?\n' +
    '3. Compare the content types of these two sites.\n' +
    '\n' +
    'IMPORTANT: Use URL Context grounding to analyze content from both URLs mentioned above.',
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  groundingSettings: { urlContext: { enabled: true, extractUrlsFromInput: true } },
  systemInstructions: 'You have URL Context grounding enabled. Extract URLs from the input text and use their content to provide comprehensive answers with proper citations.',
  streamingSettings: { enabled: false }
}
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { urlContext: { enabled: true, extractUrlsFromInput: true } },
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 444
[runAiStage] First 200 chars of filled prompt: I need to compare information from these websites. First, check out https://example.com which is a simple test site. Then look at https://news.ycombinator.com/ for the latest tech news. 

Please tell 
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 444,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'I need to compare information from these websites. First, check out https://example.com which is a s...',
  chatHistory: 'none',
  groundingSettings: { urlContext: { enabled: true, extractUrlsFromInput: true } },
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: {
  "urlContext": {
    "enabled": true,
    "extractUrlsFromInput": true
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 444
}
[AI Stage Flow Enhanced] Extracted URLs from input: [ 'https://example.com', 'https://news.ycombinator.com/' ]
🚀🚀🚀 GROUNDING REQUESTED! 🚀🚀🚀
🌐 Using Direct Gemini API with proper urlContext tool...
🔗 URLs to process: [ 'https://example.com', 'https://news.ycombinator.com/' ]
🔍 URLs extracted from input text - using as-is for URL Context
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash-exp',
  hasPrompt: true,
  enableGoogleSearch: undefined,
  temperature: 0.1
}
✅ [Direct Gemini] Adding URL Context grounding
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash-exp',
  contentsCount: 2,
  configKeys: [ 'temperature', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: false
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:36:38.702Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'image-understanding-test',
    'function-calling-weather',
    'test-title',
    'grounding-url-context',
    'final-summary',
    'streaming-test',
    'chat-mode-test',
    'document-understanding-test',
    'combined-features-test',
    'grounding-google-search',
    'function-calling-calculator',
    'function-calling-unit-converter',
    'code-execution-python',
    'thinking-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'image-understanding-test',
    'function-calling-weather',
    'test-title',
    'grounding-url-context',
    'final-summary',
    'streaming-test',
    'chat-mode-test',
    'document-understanding-test',
    'combined-features-test',
    'grounding-google-search',
    'function-calling-calculator',
    'function-calling-unit-converter',
    'code-execution-python',
    'thinking-mode-test'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 540ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:36:39.131Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 2,
  supportsCount: 3,
  searchQueries: 0,
  sourcesExtracted: 2
}
✅ [Direct Gemini] Found URL context metadata!
📊 [Direct Gemini] URL Context stats: { urlsProcessed: 2, urlsSuccess: 2 }
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 1025,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 4,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
[TEST-AI] Result: {
  content: "Here's a comparison of the two websites based on the content:\n" +
    '\n' +
    '1.  **Main content of example.com:** The main content of example.com is a simple statement that the domain is for illustrative examples in documents and can be used without permission. It also provides a link to "More information..."\n' +
    '\n' +
    '2.  **Top 3 headlines from Hacker News:**\n' +
    '    *   Q-learning is not yet scalable (seohong.me)\n' +
    '    *   Infinite Grid of Resistors (mathpages.com)\n' +
    '    *   I have reimplemented Stable Diffusion 3.5 from scratch in pure PyTorch (github.com/yousef-rafat)\n' +
    '\n' +
    '3.  **Comparison of content types:**\n' +
    '    *   **example.com:** This site provides a static, minimal amount of information. It serves as a placeholder or example domain.\n' +
    "    *   **Hacker News:** This site provides a dynamic stream of user-submitted news articles and discussions, primarily focused on technology and related topics. It's a community-driven platform.\n" +
    '\n' +
    'In summary, example.com is a static example site, while Hacker News is a dynamic news and discussion platform.\n',
  groundingMetadata: {
    groundingChunks: [ [Object], [Object] ],
    groundingSupports: [ [Object], [Object], [Object] ]
  },
  groundingSources: [
    {
      type: 'search',
      title: 'Hacker News',
      url: 'https://news.ycombinator.com/',
      snippet: ''
    },
    {
      type: 'search',
      title: 'Example Domain',
      url: 'https://example.com',
      snippet: ''
    },
    {
      type: 'search',
      title: 'https://example.com',
      url: 'https://example.com',
      snippet: 'URL Context Source'
    },
    {
      type: 'search',
      title: 'https://news.ycombinator.com/',
      url: 'https://news.ycombinator.com/',
      snippet: 'URL Context Source'
    }
  ],
  thinkingSteps: undefined,
  outputImages: undefined,
  updatedChatHistory: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: true
  - Has grounding sources: true
  - Grounding metadata keys: [ 'groundingChunks', 'groundingSupports' ]
  - Grounding chunks: 2
  - Grounding supports: 3
  - Grounding sources count: 4
  - First source: {
  type: 'search',
  title: 'Hacker News',
  url: 'https://news.ycombinator.com/',
  snippet: ''
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 4625ms
[TEST-AI] Starting POST test...
[TEST-AI] Request body: {
  promptTemplate: 'Please analyze these two websites:\n' +
    '    \n' +
    '1. https://example.com - This should be a simple example site\n' +
    '2. https://httpbin.org/html - This is an HTTP testing service\n' +
    '\n' +
    'Compare their content and tell me what each site is about. Also check if there are any similarities or differences in their design or purpose.',
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  groundingSettings: { urlContext: { enabled: true, extractUrlsFromInput: true } },
  systemInstructions: "You have URL Context grounding enabled. I will extract URLs from the user's input text and provide them for grounding. Use the content from these URLs to provide comprehensive answers with proper citations."
}
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { urlContext: { enabled: true, extractUrlsFromInput: true } },
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 307
[runAiStage] First 200 chars of filled prompt: Please analyze these two websites:
    
1. https://example.com - This should be a simple example site
2. https://httpbin.org/html - This is an HTTP testing service

Compare their content and tell me w
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 307,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Please analyze these two websites:\n' +
    '    \n' +
    '1. https://example.com - This should be a simple example sit...',
  chatHistory: 'none',
  groundingSettings: { urlContext: { enabled: true, extractUrlsFromInput: true } },
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: {
  "urlContext": {
    "enabled": true,
    "extractUrlsFromInput": true
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 307
}
[AI Stage Flow Enhanced] Extracted URLs from input: [ 'https://example.com', 'https://httpbin.org/html' ]
🚀🚀🚀 GROUNDING REQUESTED! 🚀🚀🚀
🌐 Using Direct Gemini API with proper urlContext tool...
🔗 URLs to process: [ 'https://example.com', 'https://httpbin.org/html' ]
🔍 URLs extracted from input text - using as-is for URL Context
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash-exp',
  hasPrompt: true,
  enableGoogleSearch: undefined,
  temperature: 0.1
}
✅ [Direct Gemini] Adding URL Context grounding
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash-exp',
  contentsCount: 2,
  configKeys: [ 'temperature', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: false
}
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 2,
  supportsCount: 1,
  searchQueries: 0,
  sourcesExtracted: 2
}
✅ [Direct Gemini] Found URL context metadata!
📊 [Direct Gemini] URL Context stats: { urlsProcessed: 2, urlsSuccess: 2 }
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 1025,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 4,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
[TEST-AI] Result: {
  content: 'The website `https://example.com` is a very basic placeholder domain. Its purpose is to serve as an example for illustrative purposes in documents. It explicitly states that it can be used in literature without prior permission. The design is minimal, with just a heading, a paragraph of text, and a link to "More information...".\n' +
    '\n' +
    "On the other hand, `https://httpbin.org/html` is an HTTP request and response service. The `/html` endpoint returns an HTML page containing the text of Herman Melville's Moby-Dick. The purpose of this site is for testing HTTP clients.\n" +
    '\n' +
    'The key differences are:\n' +
    '\n' +
    '*   **Purpose:** `example.com` is a placeholder, while `httpbin.org` is a testing service.\n' +
    '*   **Content:** `example.com` has minimal content, while `httpbin.org/html` returns the text of Moby-Dick.\n' +
    '*   **Design:** `example.com` has a very simple design, while `httpbin.org/html` has a basic HTML structure containing the text.\n' +
    '\n' +
    'There are no real similarities in their design or purpose, other than both being accessible via HTTP.\n',
  groundingMetadata: {
    groundingChunks: [ [Object], [Object] ],
    groundingSupports: [ [Object] ]
  },
  groundingSources: [
    {
      type: 'search',
      title: 'Example Domain',
      url: 'https://example.com',
      snippet: ''
    },
    {
      type: 'search',
      title: 'Herman Melville - Moby-Dick',
      url: 'https://httpbin.org/html',
      snippet: ''
    },
    {
      type: 'search',
      title: 'https://example.com',
      url: 'https://example.com',
      snippet: 'URL Context Source'
    },
    {
      type: 'search',
      title: 'https://httpbin.org/html',
      url: 'https://httpbin.org/html',
      snippet: 'URL Context Source'
    }
  ],
  thinkingSteps: undefined,
  outputImages: undefined,
  updatedChatHistory: undefined
}
[TEST-AI] Enhanced Grounding Analysis:
  - Has grounding metadata: true
  - Has grounding sources: true
  - Grounding metadata keys: [ 'groundingChunks', 'groundingSupports' ]
  - Grounding chunks: 2
  - Grounding supports: 1
  - Grounding sources count: 4
  - First source: {
  type: 'search',
  title: 'Example Domain',
  url: 'https://example.com',
  snippet: ''
}
[TEST-AI] Response keys: [
  'success',
  'content',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources',
  'thinkingSteps',
  'error'
]
 POST /api/test-ai 200 in 2743ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:38:19.419Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'image-understanding-test',
    'function-calling-weather',
    'test-title',
    'grounding-url-context',
    'final-summary',
    'streaming-test',
    'chat-mode-test',
    'document-understanding-test',
    'combined-features-test',
    'grounding-google-search',
    'function-calling-calculator',
    'function-calling-unit-converter',
    'code-execution-python',
    'thinking-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'image-understanding-test',
    'function-calling-weather',
    'test-title',
    'grounding-url-context',
    'final-summary',
    'streaming-test',
    'chat-mode-test',
    'document-understanding-test',
    'combined-features-test',
    'grounding-google-search',
    'function-calling-calculator',
    'function-calling-unit-converter',
    'code-execution-python',
    'thinking-mode-test'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 441ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:38:19.754Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /favicon.ico in 278ms (1341 modules)
 GET /favicon.ico 200 in 336ms
 ✓ Compiled /api/documents/save in 250ms (1343 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:38:22.833Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 2024ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 204ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 201ms
 ✓ Compiled /api/wizard/execute in 279ms (1505 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  groundingSettings: { urlContext: { enabled: true, extractUrlsFromInput: true } },
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 308
[runAiStage] First 200 chars of filled prompt: https://news.ycombinator.com/news 
https://news.ycombinator.com/news

https://www.mathpages.com/home/kmath668/kmath668.htm 


tell me all


IMPORTANT: Use URL Context grounding to analyze content from
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 308,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.1,
  hasSystemInstructions: true,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: true,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: true,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'https://news.ycombinator.com/news \n' +
    'https://news.ycombinator.com/news\n' +
    '\n' +
    'https://www.mathpages.com/home...',
  chatHistory: 'none',
  groundingSettings: { urlContext: { enabled: true, extractUrlsFromInput: true } },
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: {
  "urlContext": {
    "enabled": true,
    "extractUrlsFromInput": true
  }
}
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 308
}
[AI Stage Flow Enhanced] Extracted URLs from input: [
  'https://news.ycombinator.com/news',
  'https://www.mathpages.com/home/kmath668/kmath668.htm'
]
🚀🚀🚀 GROUNDING REQUESTED! 🚀🚀🚀
🌐 Using Direct Gemini API with proper urlContext tool...
🔗 URLs to process: [
  'https://news.ycombinator.com/news',
  'https://www.mathpages.com/home/kmath668/kmath668.htm'
]
🔍 URLs extracted from input text - using as-is for URL Context
🎯 [Direct Gemini API] Starting execution for Google Search grounding
📝 [Direct Gemini API] Using non-streaming mode
🚀 [Direct Gemini] Starting generation with: {
  model: 'gemini-2.0-flash-exp',
  hasPrompt: true,
  enableGoogleSearch: undefined,
  temperature: 0.1
}
✅ [Direct Gemini] Adding URL Context grounding
📤 [Direct Gemini] API Request: {
  model: 'gemini-2.0-flash-exp',
  contentsCount: 2,
  configKeys: [ 'temperature', 'tools' ],
  toolsCount: 1,
  hasGoogleSearch: false
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:39:11.281Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'function-calling-weather',
    'image-understanding-test',
    'streaming-test',
    'function-calling-unit-converter',
    'thinking-mode-test',
    'function-calling-calculator',
    'grounding-google-search',
    'multiple-url-grounding',
    'combined-features-test',
    'grounding-url-context',
    'code-execution-python',
    'test-title',
    'chat-mode-test',
    'final-summary',
    'document-understanding-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'function-calling-weather',
    'image-understanding-test',
    'streaming-test',
    'function-calling-unit-converter',
    'thinking-mode-test',
    'function-calling-calculator',
    'grounding-google-search',
    'multiple-url-grounding',
    'combined-features-test',
    'grounding-url-context',
    'code-execution-python',
    'test-title',
    'chat-mode-test',
    'final-summary',
    'document-understanding-test'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 433ms
 GET /favicon.ico 200 in 8ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:39:11.719Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 429ms
📥 [Direct Gemini] Raw response keys: [ 'candidates', 'modelVersion', 'usageMetadata' ]
✅ [Direct Gemini] Found grounding metadata!
📊 [Direct Gemini] Grounding stats: {
  chunksCount: 2,
  supportsCount: 23,
  searchQueries: 0,
  sourcesExtracted: 2
}
✅ [Direct Gemini] Found URL context metadata!
📊 [Direct Gemini] URL Context stats: { urlsProcessed: 2, urlsSuccess: 2 }
✅ [Direct Gemini] Generation completed successfully
✅ [Direct Gemini API] Generation completed successfully
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'groundingMetadata',
  'urlContextMetadata',
  'groundingSources'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 2973,
  hasGroundingMetadata: true,
  hasGroundingSources: true,
  groundingSourcesCount: 4,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: false,
  chatHistoryLength: 0
}
 POST /api/wizard/execute 200 in 6049ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 242ms
 ✓ Compiled in 236ms (1325 modules)
 ✓ Compiled in 482ms (2185 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:45:59.878Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'grounding-url-context',
    'image-understanding-test',
    'function-calling-unit-converter',
    'function-calling-weather',
    'function-calling-calculator',
    'code-execution-python',
    'grounding-google-search',
    'chat-mode-test',
    'multiple-url-grounding',
    'test-title',
    'final-summary',
    'document-understanding-test',
    'thinking-mode-test',
    'streaming-test',
    'combined-features-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'grounding-url-context',
    'image-understanding-test',
    'function-calling-unit-converter',
    'function-calling-weather',
    'function-calling-calculator',
    'code-execution-python',
    'grounding-google-search',
    'chat-mode-test',
    'multiple-url-grounding',
    'test-title',
    'final-summary',
    'document-understanding-test',
    'thinking-mode-test',
    'streaming-test',
    'combined-features-test'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 447ms
 ✓ Compiled /favicon.ico in 132ms (1341 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:46:00.372Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET /favicon.ico 200 in 184ms
Debugger listening on ws://127.0.0.1:9229/c2e4cd8d-ae64-4ad0-81cd-f66ec9015ea2
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 1544610,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/7dae2370-d1cb-4f2d-abdd-60318c107bab
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 3s
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ○ Compiling /api/wizard/execute ...
 ✓ Compiled /api/wizard/execute in 546ms (590 modules)
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-thinking-exp',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  groundingSettings: undefined,
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 37
[runAiStage] First 200 chars of filled prompt: Solve this problem step by step: test
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 37,
  model: 'gemini-2.0-flash-thinking-exp',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: true,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-thinking-exp',
  hasTools: false,
  hasGrounding: false,
  forceGoogleSearchGrounding: false,
  hasThinking: true,
  isStreaming: undefined,
  promptTemplate: 'Solve this problem step by step: test...',
  chatHistory: 'none',
  groundingSettings: undefined,
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: undefined
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 37
}
[AI Stage Flow Enhanced] Switched to thinking model: googleai/gemini-2.5-flash-preview
[AI Stage Flow Enhanced] Generation path decision: {
  shouldUseStreaming: true,
  streamingEnabled: undefined,
  hasHistory: true,
  hasTools: false,
  googleSearchEnabled: undefined,
  modelUsed: 'googleai/gemini-2.5-flash-preview'
}
🔧🔧🔧 FINAL API REQUEST TOOLS CHECK 🔧🔧🔧
📋 generateOptions.tools: []
📋 generateOptions.config: {
  "temperature": 0.7,
  "thinkingConfig": {
    "includeThoughts": true,
    "thinkingBudget": 8192
  }
}
📊 Total tools count: 0
❌❌❌ NO GOOGLE SEARCH GROUNDING CONFIGURED ❌❌❌
🔧🔧🔧 ================================= 🔧🔧🔧
[AI Stage Flow Enhanced] Streaming iteration 1/5
[AI Stage Flow Enhanced] ===== API REQUEST DETAILS =====
[AI Stage Flow Enhanced] Full API Request Configuration: {
  model: 'googleai/gemini-2.5-flash-preview',
  temperature: 0.7,
  hasTools: false,
  toolsCount: 0,
  toolNames: [],
  hasGoogleSearchTool: false,
  systemInstruction: undefined,
  callHistoryLength: 1,
  fullCallHistory: [ { role: 'user', parts: [Array] } ],
  forceGoogleSearchGrounding: false
}
[AI Stage Flow Enhanced] Complete Google API Request: {
  "model": "googleai/gemini-2.5-flash-preview",
  "config": {
    "temperature": 0.7,
    "thinkingConfig": {
      "includeThoughts": true,
      "thinkingBudget": 8192
    }
  },
  "tools": [],
  "messages": [
    {
      "role": "user",
      "parts": [
        {
          "text": "Solve this problem step by step: test"
        }
      ]
    }
  ]
}
[AI Stage Flow Enhanced] Using streaming generation with @google/genai
🌊 [Direct Gemini] Starting streaming generation
[AI Stage Flow Enhanced] Streaming execution failed: Error [ClientError]: got status: 404 Not Found. {"error":{"message":"","code":404,"status":"Not Found"}}
    at async processStream (src/ai/direct-gemini.ts:377:21)
    at async executeWithStreaming (src/ai/flows/ai-stage-execution.ts:552:23)
    at async aiStageExecutionFlow (src/ai/flows/ai-stage-execution.ts:379:13)
    at async runAiStage (src/app/actions/aiActions-new.ts:245:23)
    at async POST (src/app/api/wizard/execute/route.ts:7:19)
  375 |       let finalGroundingSources: DirectGeminiResponse['groundingSources'] = [];
  376 |
> 377 |       const stream = await streamPromise;
      |                     ^
  378 |       for await (const chunk of stream) {
  379 |         const chunkText = chunk.text || '';
  380 |         accumulatedContent += chunkText; {
  [cause]: 'Error: \n' +
    '    at new ClientError (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:10821:37)\n' +
    '    at throwErrorIfNotOK (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11309:33)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async eval (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11098:13)\n' +
    '    at async Models.generateContentStream (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:12346:24)\n' +
    '    at async processStream (webpack-internal:///(rsc)/./src/ai/direct-gemini.ts:295:28)\n' +
    '    at async executeWithStreaming (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:544:30)\n' +
    '    at async aiStageExecutionFlow (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:413:16)\n' +
    '    at async runAiStage (webpack-internal:///(rsc)/./src/app/actions/aiActions-new.ts:161:24)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/wizard/execute/route.ts:12:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
[runAiStage] Error during AI execution: Error [ClientError]: got status: 404 Not Found. {"error":{"message":"","code":404,"status":"Not Found"}}
    at async processStream (src/ai/direct-gemini.ts:377:21)
    at async executeWithStreaming (src/ai/flows/ai-stage-execution.ts:552:23)
    at async aiStageExecutionFlow (src/ai/flows/ai-stage-execution.ts:379:13)
    at async runAiStage (src/app/actions/aiActions-new.ts:245:23)
    at async POST (src/app/api/wizard/execute/route.ts:7:19)
  375 |       let finalGroundingSources: DirectGeminiResponse['groundingSources'] = [];
  376 |
> 377 |       const stream = await streamPromise;
      |                     ^
  378 |       for await (const chunk of stream) {
  379 |         const chunkText = chunk.text || '';
  380 |         accumulatedContent += chunkText; {
  [cause]: 'Error: \n' +
    '    at new ClientError (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:10821:37)\n' +
    '    at throwErrorIfNotOK (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11309:33)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async eval (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11098:13)\n' +
    '    at async Models.generateContentStream (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:12346:24)\n' +
    '    at async processStream (webpack-internal:///(rsc)/./src/ai/direct-gemini.ts:295:28)\n' +
    '    at async executeWithStreaming (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:544:30)\n' +
    '    at async aiStageExecutionFlow (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:413:16)\n' +
    '    at async runAiStage (webpack-internal:///(rsc)/./src/app/actions/aiActions-new.ts:161:24)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/wizard/execute/route.ts:12:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
 POST /api/wizard/execute 200 in 1849ms
 ○ Compiling /api/documents/save ...
 ✓ Compiled /api/documents/save in 2.4s (2336 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:49:22.735Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 3054ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:49:23.284Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:49:23.453Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 3625ms
 ✓ Compiled /favicon.ico in 263ms (1480 modules)
 GET /favicon.ico 200 in 298ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:49:26.951Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 622ms
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.5-flash',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  groundingSettings: undefined,
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 69
[runAiStage] First 200 chars of filled prompt: test

Please solve this step by step and show your reasoning process.
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 69,
  model: 'gemini-2.5-flash',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: true,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.5-flash',
  hasTools: false,
  hasGrounding: false,
  forceGoogleSearchGrounding: false,
  hasThinking: true,
  isStreaming: undefined,
  promptTemplate: 'test\n\nPlease solve this step by step and show your reasoning process....',
  chatHistory: 'none',
  groundingSettings: undefined,
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: undefined
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 69
}
[AI Stage Flow Enhanced] Generation path decision: {
  shouldUseStreaming: true,
  streamingEnabled: undefined,
  hasHistory: true,
  hasTools: false,
  googleSearchEnabled: undefined,
  modelUsed: 'gemini-2.5-flash'
}
🔧🔧🔧 FINAL API REQUEST TOOLS CHECK 🔧🔧🔧
📋 generateOptions.tools: []
📋 generateOptions.config: {
  "temperature": 0.7,
  "thinkingConfig": {
    "includeThoughts": true,
    "thinkingBudget": 8192
  }
}
📊 Total tools count: 0
❌❌❌ NO GOOGLE SEARCH GROUNDING CONFIGURED ❌❌❌
🔧🔧🔧 ================================= 🔧🔧🔧
[AI Stage Flow Enhanced] Streaming iteration 1/5
[AI Stage Flow Enhanced] ===== API REQUEST DETAILS =====
[AI Stage Flow Enhanced] Full API Request Configuration: {
  model: 'gemini-2.5-flash',
  temperature: 0.7,
  hasTools: false,
  toolsCount: 0,
  toolNames: [],
  hasGoogleSearchTool: false,
  systemInstruction: undefined,
  callHistoryLength: 1,
  fullCallHistory: [ { role: 'user', parts: [Array] } ],
  forceGoogleSearchGrounding: false
}
[AI Stage Flow Enhanced] Complete Google API Request: {
  "model": "gemini-2.5-flash",
  "config": {
    "temperature": 0.7,
    "thinkingConfig": {
      "includeThoughts": true,
      "thinkingBudget": 8192
    }
  },
  "tools": [],
  "messages": [
    {
      "role": "user",
      "parts": [
        {
          "text": "test\n\nPlease solve this step by step and show your reasoning process."
        }
      ]
    }
  ]
}
[AI Stage Flow Enhanced] Using streaming generation with @google/genai
🌊 [Direct Gemini] Starting streaming generation
[AI Stage Flow Enhanced] Streaming execution failed: Error [ClientError]: got status: 404 Not Found. {"error":{"message":"{\n  \"error\": {\n    \"code\": 404,\n    \"message\": \"models/gemini-2.5-flash is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.\",\n    \"status\": \"NOT_FOUND\"\n  }\n}\n","code":404,"status":"Not Found"}}
    at async processStream (src/ai/direct-gemini.ts:377:21)
    at async executeWithStreaming (src/ai/flows/ai-stage-execution.ts:552:23)
    at async aiStageExecutionFlow (src/ai/flows/ai-stage-execution.ts:379:13)
    at async runAiStage (src/app/actions/aiActions-new.ts:245:23)
    at async POST (src/app/api/wizard/execute/route.ts:7:19)
  375 |       let finalGroundingSources: DirectGeminiResponse['groundingSources'] = [];
  376 |
> 377 |       const stream = await streamPromise;
      |                     ^
  378 |       for await (const chunk of stream) {
  379 |         const chunkText = chunk.text || '';
  380 |         accumulatedContent += chunkText; {
  [cause]: 'Error: \n' +
    '    at new ClientError (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:10821:37)\n' +
    '    at throwErrorIfNotOK (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11309:33)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async eval (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11098:13)\n' +
    '    at async Models.generateContentStream (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:12346:24)\n' +
    '    at async processStream (webpack-internal:///(rsc)/./src/ai/direct-gemini.ts:295:28)\n' +
    '    at async executeWithStreaming (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:544:30)\n' +
    '    at async aiStageExecutionFlow (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:413:16)\n' +
    '    at async runAiStage (webpack-internal:///(rsc)/./src/app/actions/aiActions-new.ts:161:24)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/wizard/execute/route.ts:12:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
[runAiStage] Error during AI execution: Error [ClientError]: got status: 404 Not Found. {"error":{"message":"{\n  \"error\": {\n    \"code\": 404,\n    \"message\": \"models/gemini-2.5-flash is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.\",\n    \"status\": \"NOT_FOUND\"\n  }\n}\n","code":404,"status":"Not Found"}}
    at async processStream (src/ai/direct-gemini.ts:377:21)
    at async executeWithStreaming (src/ai/flows/ai-stage-execution.ts:552:23)
    at async aiStageExecutionFlow (src/ai/flows/ai-stage-execution.ts:379:13)
    at async runAiStage (src/app/actions/aiActions-new.ts:245:23)
    at async POST (src/app/api/wizard/execute/route.ts:7:19)
  375 |       let finalGroundingSources: DirectGeminiResponse['groundingSources'] = [];
  376 |
> 377 |       const stream = await streamPromise;
      |                     ^
  378 |       for await (const chunk of stream) {
  379 |         const chunkText = chunk.text || '';
  380 |         accumulatedContent += chunkText; {
  [cause]: 'Error: \n' +
    '    at new ClientError (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:10821:37)\n' +
    '    at throwErrorIfNotOK (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11309:33)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async eval (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:11098:13)\n' +
    '    at async Models.generateContentStream (webpack-internal:///(rsc)/./node_modules/@google/genai/dist/node/index.mjs:12346:24)\n' +
    '    at async processStream (webpack-internal:///(rsc)/./src/ai/direct-gemini.ts:295:28)\n' +
    '    at async executeWithStreaming (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:544:30)\n' +
    '    at async aiStageExecutionFlow (webpack-internal:///(rsc)/./src/ai/flows/ai-stage-execution.ts:413:16)\n' +
    '    at async runAiStage (webpack-internal:///(rsc)/./src/app/actions/aiActions-new.ts:161:24)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/wizard/execute/route.ts:12:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
 POST /api/wizard/execute 200 in 407ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 282ms
 ✓ Compiled in 268ms (1480 modules)
 ✓ Compiled in 115ms (1480 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:50:27.807Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'test-title',
    'function-calling-calculator',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'multiple-url-grounding',
    'function-calling-weather',
    'chat-mode-test',
    'grounding-url-context',
    'document-understanding-test',
    'streaming-test',
    'grounding-google-search',
    'image-understanding-test',
    'final-summary',
    'code-execution-python',
    'combined-features-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'test-title',
    'function-calling-calculator',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'multiple-url-grounding',
    'function-calling-weather',
    'chat-mode-test',
    'grounding-url-context',
    'document-understanding-test',
    'streaming-test',
    'grounding-google-search',
    'image-understanding-test',
    'final-summary',
    'code-execution-python',
    'combined-features-test'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 607ms
 GET /favicon.ico 200 in 13ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:50:28.369Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 111ms (1314 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:51:15.126Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
 ✓ Compiled in 341ms (1314 modules)
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'chat-mode-test',
    'document-understanding-test',
    'grounding-google-search',
    'streaming-test',
    'thinking-mode-test',
    'multiple-url-grounding',
    'function-calling-unit-converter',
    'grounding-url-context',
    'final-summary',
    'combined-features-test',
    'code-execution-python',
    'function-calling-calculator',
    'test-title',
    'function-calling-weather',
    'image-understanding-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'chat-mode-test',
    'document-understanding-test',
    'grounding-google-search',
    'streaming-test',
    'thinking-mode-test',
    'multiple-url-grounding',
    'function-calling-unit-converter',
    'grounding-url-context',
    'final-summary',
    'combined-features-test',
    'code-execution-python',
    'function-calling-calculator',
    'test-title',
    'function-calling-weather',
    'image-understanding-test'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 427ms
 GET /favicon.ico 200 in 20ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:51:15.672Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 329ms (1298 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:56:05.721Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
 ✓ Compiled in 311ms (1298 modules)
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'streaming-test',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'document-understanding-test',
    'final-summary',
    'function-calling-weather',
    'chat-mode-test',
    'combined-features-test',
    'multiple-url-grounding',
    'grounding-url-context',
    'image-understanding-test',
    'grounding-google-search',
    'function-calling-calculator',
    'code-execution-python',
    'test-title'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'streaming-test',
    'thinking-mode-test',
    'function-calling-unit-converter',
    'document-understanding-test',
    'final-summary',
    'function-calling-weather',
    'chat-mode-test',
    'combined-features-test',
    'multiple-url-grounding',
    'grounding-url-context',
    'image-understanding-test',
    'grounding-google-search',
    'function-calling-calculator',
    'code-execution-python',
    'test-title'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 461ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:56:06.189Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 260ms (1298 modules)
 ✓ Compiled in 96ms (1298 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:57:20.550Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'function-calling-weather',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'thinking-mode-test',
    'code-execution-python',
    'grounding-url-context',
    'image-understanding-test',
    'grounding-google-search',
    'test-title',
    'streaming-test',
    'document-understanding-test',
    'multiple-url-grounding',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'function-calling-weather',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'thinking-mode-test',
    'code-execution-python',
    'grounding-url-context',
    'image-understanding-test',
    'grounding-google-search',
    'test-title',
    'streaming-test',
    'document-understanding-test',
    'multiple-url-grounding',
    'function-calling-calculator'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 513ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T11:57:21.007Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:16:58.460Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:16:58.866Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'function-calling-weather',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'thinking-mode-test',
    'code-execution-python',
    'grounding-url-context',
    'image-understanding-test',
    'grounding-google-search',
    'test-title',
    'streaming-test',
    'document-understanding-test',
    'multiple-url-grounding',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'function-calling-weather',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'thinking-mode-test',
    'code-execution-python',
    'grounding-url-context',
    'image-understanding-test',
    'grounding-google-search',
    'test-title',
    'streaming-test',
    'document-understanding-test',
    'multiple-url-grounding',
    'function-calling-calculator'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 2102ms
 ✓ Compiled /favicon.ico in 239ms (1314 modules)
 GET /favicon.ico 200 in 296ms
 ✓ Compiled /api/documents/save in 252ms (1318 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:17:04.222Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 931ms
 ✓ Compiled /api/wizard/execute in 322ms (1480 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  groundingSettings: undefined,
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 69
[runAiStage] First 200 chars of filled prompt: test

Please solve this step by step and show your reasoning process.
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 69,
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: true,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.5-pro-preview-03-25',
  hasTools: false,
  hasGrounding: false,
  forceGoogleSearchGrounding: false,
  hasThinking: true,
  isStreaming: undefined,
  promptTemplate: 'test\n\nPlease solve this step by step and show your reasoning process....',
  chatHistory: 'none',
  groundingSettings: undefined,
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: undefined
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 69
}
[AI Stage Flow Enhanced] Generation path decision: {
  shouldUseStreaming: true,
  streamingEnabled: undefined,
  hasHistory: true,
  hasTools: false,
  googleSearchEnabled: undefined,
  modelUsed: 'gemini-2.5-pro-preview-03-25'
}
🔧🔧🔧 FINAL API REQUEST TOOLS CHECK 🔧🔧🔧
📋 generateOptions.tools: []
📋 generateOptions.config: {
  "temperature": 0.7,
  "thinkingConfig": {
    "includeThoughts": true,
    "thinkingBudget": 8192
  }
}
📊 Total tools count: 0
❌❌❌ NO GOOGLE SEARCH GROUNDING CONFIGURED ❌❌❌
🔧🔧🔧 ================================= 🔧🔧🔧
[AI Stage Flow Enhanced] Streaming iteration 1/5
[AI Stage Flow Enhanced] ===== API REQUEST DETAILS =====
[AI Stage Flow Enhanced] Full API Request Configuration: {
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  hasTools: false,
  toolsCount: 0,
  toolNames: [],
  hasGoogleSearchTool: false,
  systemInstruction: undefined,
  callHistoryLength: 1,
  fullCallHistory: [ { role: 'user', parts: [Array] } ],
  forceGoogleSearchGrounding: false
}
[AI Stage Flow Enhanced] Complete Google API Request: {
  "model": "gemini-2.5-pro-preview-03-25",
  "config": {
    "temperature": 0.7,
    "thinkingConfig": {
      "includeThoughts": true,
      "thinkingBudget": 8192
    }
  },
  "tools": [],
  "messages": [
    {
      "role": "user",
      "parts": [
        {
          "text": "test\n\nPlease solve this step by step and show your reasoning process."
        }
      ]
    }
  ]
}
[AI Stage Flow Enhanced] Using streaming generation with @google/genai
🌊 [Direct Gemini] Starting streaming generation
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:17:09.497Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[WizardPage] Loading existing document: aXg7gLuoBWZUqpGkhW3h
[DocumentPersistence] Loading document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'grounding-google-search',
    'grounding-url-context',
    'streaming-test',
    'function-calling-weather',
    'function-calling-unit-converter',
    'chat-mode-test',
    'multiple-url-grounding',
    'code-execution-python',
    'final-summary',
    'thinking-mode-test',
    'test-title',
    'document-understanding-test',
    'image-understanding-test',
    'combined-features-test',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'grounding-google-search',
    'grounding-url-context',
    'streaming-test',
    'function-calling-weather',
    'function-calling-unit-converter',
    'chat-mode-test',
    'multiple-url-grounding',
    'code-execution-python',
    'final-summary',
    'thinking-mode-test',
    'test-title',
    'document-understanding-test',
    'image-understanding-test',
    'combined-features-test',
    'function-calling-calculator'
  ]
}
 GET /w/gemini-test/aXg7gLuoBWZUqpGkhW3h 200 in 406ms
 GET /favicon.ico 200 in 8ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:17:09.924Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 393ms
[AI Stage Flow Enhanced] ===== API RESPONSE DETAILS =====
[AI Stage Flow Enhanced] Raw API Response Summary: {
  hasContent: true,
  contentLength: 1547,
  contentPreview: `Okay, you've entered the word "test."\n` +
    '\n' +
    "Here's my step-by-step reasoning for how I'm interpreting and responding to this:\n" +
    '\n' +
    `1.  **Input Received:** I've received your input, which is the single word: "t...`,
  hasGroundingMetadata: false,
  groundingMetadataKeys: [],
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasUsageMetadata: true,
  modelVersion: 'models/gemini-2.5-pro-preview-05-06'
}
[AI Stage Flow Enhanced] Complete Google API Response: {
  "content": "Okay, you've entered the word \"test.\"\n\nHere's my step-by-step reasoning for how I'm interpreting and responding to this:\n\n1.  **Input Received:** I've received your input, which is the single word: \"test\".\n\n2.  **Interpreting the Intent:**\n    *   Typically, when a user inputs \"test,\" they are checking if the system (in this case, me, an AI) is operational, responsive, and capable of understanding basic input.\n    *   It's a way to verify that communication is established.\n    *   You've also specifically asked me to \"solve this step by step and show your reasoning process,\" which applies to how I handle *any* input, including this one.\n\n3.  **Formulating a Response:**\n    *   **Acknowledge:** Confirm that I've received the \"test.\"\n    *   **Confirm Status:** Indicate that I am indeed working and ready.\n    *   **Address the Meta-Instruction:** Show that I'm following your request for a step-by-step reasoned process, even for a simple input like \"test.\"\n    *   **Invite Further Interaction:** Prompt you for an actual problem, question, or task, now that the \"test\" is successful.\n\n4.  **Output (My Response to You):**\n    Based on the above, my response is to acknowledge your test, confirm my operational status, explain my reasoning as requested, and then ask what you would like me to do next.\n\nSo, in summary: Test successful! I am here and ready to help.\n\nWhat can I do for you? Please provide a problem, question, or task you'd like me to work on, and I will do my best to solve it step by step and show my reasoning process.",
  "groundingSources": [],
  "usageMetadata": {
    "promptTokenCount": 15,
    "candidatesTokenCount": 385,
    "totalTokenCount": 1462,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 15
      }
    ],
    "thoughtsTokenCount": 1062
  },
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": " me to work on, and I will do my best to solve it step by step and show my reasoning process."
          }
        ],
        "role": "model"
      },
      "finishReason": "STOP",
      "index": 0
    }
  ],
  "modelVersion": "models/gemini-2.5-pro-preview-05-06"
}
[AI Stage Flow Enhanced] ===== NO GOOGLE SEARCH GROUNDING FOUND =====
[AI Stage Flow Enhanced] ❌ Google Search Grounding NOT working - response has no grounding data
[AI Stage Flow Enhanced] This might indicate:
[AI Stage Flow Enhanced] 1. Google Search grounding is not properly configured
[AI Stage Flow Enhanced] 2. The model did not need to search for this query
[AI Stage Flow Enhanced] 3. There was an issue with the grounding service
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'outputImages',
  'updatedChatHistory',
  'groundingSources',
  'groundingMetadata',
  'functionCalls',
  'codeExecutionResults'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 1547,
  hasGroundingMetadata: false,
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasThinkingSteps: true,
  thinkingStepsCount: 1,
  hasUpdatedChatHistory: true,
  chatHistoryLength: 1
}
 POST /api/wizard/execute 200 in 16449ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[DocumentPersistence] Document updated successfully { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
 POST /api/documents/save 200 in 299ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  stageOutputType: 'json',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  groundingSettings: undefined,
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 241
[runAiStage] First 200 chars of filled prompt: Analyze this image in detail. Provide a JSON response with:
1. 'description': Overall description
2. 'objects': Array of identified objects
3. 'text': Any text found in the image
4. 'colors': Dominant
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 241,
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: false,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.0-flash-exp',
  hasTools: false,
  hasGrounding: false,
  forceGoogleSearchGrounding: false,
  hasThinking: undefined,
  isStreaming: undefined,
  promptTemplate: 'Analyze this image in detail. Provide a JSON response with:\n' +
    "1. 'description': Overall description\n" +
    '2....',
  chatHistory: 'none',
  groundingSettings: undefined,
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: undefined
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 241
}
[AI Stage Flow Enhanced] Generation path decision: {
  shouldUseStreaming: true,
  streamingEnabled: undefined,
  hasHistory: true,
  hasTools: false,
  googleSearchEnabled: undefined,
  modelUsed: 'gemini-2.0-flash-exp'
}
🔧🔧🔧 FINAL API REQUEST TOOLS CHECK 🔧🔧🔧
📋 generateOptions.tools: []
📋 generateOptions.config: {
  "temperature": 0.7
}
📊 Total tools count: 0
❌❌❌ NO GOOGLE SEARCH GROUNDING CONFIGURED ❌❌❌
🔧🔧🔧 ================================= 🔧🔧🔧
[AI Stage Flow Enhanced] Streaming iteration 1/5
[AI Stage Flow Enhanced] ===== API REQUEST DETAILS =====
[AI Stage Flow Enhanced] Full API Request Configuration: {
  model: 'gemini-2.0-flash-exp',
  temperature: 0.7,
  hasTools: false,
  toolsCount: 0,
  toolNames: [],
  hasGoogleSearchTool: false,
  systemInstruction: undefined,
  callHistoryLength: 1,
  fullCallHistory: [ { role: 'user', parts: [Array] } ],
  forceGoogleSearchGrounding: false
}
[AI Stage Flow Enhanced] Complete Google API Request: {
  "model": "gemini-2.0-flash-exp",
  "config": {
    "temperature": 0.7
  },
  "tools": [],
  "messages": [
    {
      "role": "user",
      "parts": [
        {
          "text": "Analyze this image in detail. Provide a JSON response with:\n1. 'description': Overall description\n2. 'objects': Array of identified objects\n3. 'text': Any text found in the image\n4. 'colors': Dominant colors\n5. 'mood': The mood or atmosphere"
        }
      ]
    }
  ]
}
[AI Stage Flow Enhanced] Using streaming generation with @google/genai
🌊 [Direct Gemini] Starting streaming generation
[2025-06-15T19:18:55.760Z]  @firebase/firestore: Firestore (11.9.0): GrpcConnection RPC 'Write' stream 0x1d03444e error. Code: 3 Message: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
[FirestoreAdapter] FAILED: updateDocument aXg7gLuoBWZUqpGkhW3h in documents [Error [FirebaseError]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.] {
  code: 'invalid-argument',
  customData: undefined,
  toString: [Function (anonymous)]
}
[DocumentPersistence] STEP ERROR: Save operation failed {
  error: 'FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.',
  errorType: 'Error',
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stack: 'Error: FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.\n' +
    '    at FirestoreAdapter.updateDocument (webpack-internal:///(rsc)/./src/lib/firestore-adapter.ts:105:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async DocumentPersistenceManager.saveDocument (webpack-internal:///(rsc)/./src/lib/document-persistence.ts:217:17)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/documents/save/route.ts:39:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
[DocumentPersistence] FAILED: saveDocument Error: FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
    at FirestoreAdapter.updateDocument (src/lib/firestore-adapter.ts:127:12)
    at async DocumentPersistenceManager.saveDocument (src/lib/document-persistence.ts:256:8)
    at async POST (src/app/api/documents/save/route.ts:33:19)
  125 |     } catch (error) {
  126 |       this.logError(`updateDocument ${documentId} in ${collectionName}`, error);
> 127 |       throw new Error(`FATAL: Failed to update document ${documentId} in ${collectionName}: ${error}`);
      |            ^
  128 |     }
  129 |   }
  130 |
 POST /api/documents/save 200 in 2042ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[AI Stage Flow Enhanced] ===== API RESPONSE DETAILS =====
[AI Stage Flow Enhanced] Raw API Response Summary: {
  hasContent: true,
  contentLength: 1614,
  contentPreview: 'Okay, I will analyze the image and provide the JSON response as requested. Please provide the image so I can analyze it. Once you provide the image, I will generate a JSON response in the following fo...',
  hasGroundingMetadata: false,
  groundingMetadataKeys: [],
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasUsageMetadata: true,
  modelVersion: 'gemini-2.0-flash-exp'
}
[AI Stage Flow Enhanced] Complete Google API Response: {
  "content": "Okay, I will analyze the image and provide the JSON response as requested. Please provide the image so I can analyze it. Once you provide the image, I will generate a JSON response in the following format:\n\n```json\n{\n  \"description\": \"Overall description of the image\",\n  \"objects\": [\n    {\n      \"name\": \"Object Name 1\",\n      \"confidence\": 0.95,\n      \"bounding_box\": {\n        \"x\": 0.1,\n        \"y\": 0.2,\n        \"width\": 0.3,\n        \"height\": 0.4\n      }\n    },\n    {\n      \"name\": \"Object Name 2\",\n      \"confidence\": 0.80,\n      \"bounding_box\": {\n        \"x\": 0.5,\n        \"y\": 0.6,\n        \"width\": 0.2,\n        \"height\": 0.3\n      }\n    }\n  ],\n  \"text\": [\n    {\n      \"content\": \"Text found in the image\",\n      \"confidence\": 0.90,\n      \"bounding_box\": {\n        \"x\": 0.7,\n        \"y\": 0.1,\n        \"width\": 0.2,\n        \"height\": 0.1\n      }\n    }\n  ],\n  \"colors\": [\n    \"Red\",\n    \"Blue\",\n    \"Green\"\n  ],\n  \"mood\": \"The overall mood or atmosphere of the image\"\n}\n```\n\n**Important Notes:**\n\n*   **Object Detection Confidence:** The `confidence` values are estimates and represent how sure the model is about the identified object.\n*   **Bounding Boxes:** The `bounding_box` coordinates are normalized values between 0 and 1, representing the top-left corner (x, y), width, and height of the bounding box relative to the image dimensions.\n*   **Color Dominance:** The `colors` array lists the most dominant colors in the image, but it's a simplified representation.\n*   **Mood:** The `mood` is a subjective assessment based on the visual elements in the image.\n\nLooking forward to analyzing your image!\n",
  "groundingSources": [],
  "usageMetadata": {
    "promptTokenCount": 60,
    "candidatesTokenCount": 498,
    "totalTokenCount": 558,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 60
      }
    ],
    "candidatesTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 498
      }
    ]
  },
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "s a simplified representation.\n*   **Mood:** The `mood` is a subjective assessment based on the visual elements in the image.\n\nLooking forward to analyzing your image!\n"
          }
        ],
        "role": "model"
      },
      "finishReason": "STOP"
    }
  ],
  "modelVersion": "gemini-2.0-flash-exp"
}
[AI Stage Flow Enhanced] ===== NO GOOGLE SEARCH GROUNDING FOUND =====
[AI Stage Flow Enhanced] ❌ Google Search Grounding NOT working - response has no grounding data
[AI Stage Flow Enhanced] This might indicate:
[AI Stage Flow Enhanced] 1. Google Search grounding is not properly configured
[AI Stage Flow Enhanced] 2. The model did not need to search for this query
[AI Stage Flow Enhanced] 3. There was an issue with the grounding service
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'outputImages',
  'updatedChatHistory',
  'groundingSources',
  'groundingMetadata',
  'functionCalls',
  'codeExecutionResults'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 1614,
  hasGroundingMetadata: false,
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasThinkingSteps: false,
  thinkingStepsCount: 0,
  hasUpdatedChatHistory: true,
  chatHistoryLength: 1
}
AI output was expected to be JSON but failed to parse. Returning as text. SyntaxError: Unexpected token 'O', "Okay, I wi"... is not valid JSON
    at JSON.parse (<anonymous>)
    at runAiStage (src/app/actions/aiActions-new.ts:286:43)
    at async POST (src/app/api/wizard/execute/route.ts:7:19)
  284 |                 const contentString = typeof result.content === 'string' ? result.content : JSON.stringify(result.content);
  285 |                 const cleanedJsonString = contentString.replace(/^```json\s*|```$/g, '').trim();
> 286 |                 const parsedContent = JSON.parse(cleanedJsonString);
      |                                           ^
  287 |                 
  288 |                 const finalResult: AiActionResult = {
  289 |                     content: parsedContent,
 POST /api/wizard/execute 200 in 3032ms
[2025-06-15T19:18:57.858Z]  @firebase/firestore: Firestore (11.9.0): GrpcConnection RPC 'Write' stream 0x1d03444f error. Code: 3 Message: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
[FirestoreAdapter] FAILED: updateDocument aXg7gLuoBWZUqpGkhW3h in documents [Error [FirebaseError]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.] {
  code: 'invalid-argument',
  customData: undefined,
  toString: [Function (anonymous)]
}
[DocumentPersistence] STEP ERROR: Save operation failed {
  error: 'FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.',
  errorType: 'Error',
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stack: 'Error: FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.\n' +
    '    at FirestoreAdapter.updateDocument (webpack-internal:///(rsc)/./src/lib/firestore-adapter.ts:105:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async DocumentPersistenceManager.saveDocument (webpack-internal:///(rsc)/./src/lib/document-persistence.ts:217:17)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/documents/save/route.ts:39:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
[DocumentPersistence] FAILED: saveDocument Error: FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
    at FirestoreAdapter.updateDocument (src/lib/firestore-adapter.ts:127:12)
    at async DocumentPersistenceManager.saveDocument (src/lib/document-persistence.ts:256:8)
    at async POST (src/app/api/documents/save/route.ts:33:19)
  125 |     } catch (error) {
  126 |       this.logError(`updateDocument ${documentId} in ${collectionName}`, error);
> 127 |       throw new Error(`FATAL: Failed to update document ${documentId} in ${collectionName}: ${error}`);
      |            ^
  128 |     }
  129 |   }
  130 |
 POST /api/documents/save 200 in 1798ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[2025-06-15T19:19:00.974Z]  @firebase/firestore: Firestore (11.9.0): GrpcConnection RPC 'Write' stream 0x1d034450 error. Code: 3 Message: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
[FirestoreAdapter] FAILED: updateDocument aXg7gLuoBWZUqpGkhW3h in documents [Error [FirebaseError]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.] {
  code: 'invalid-argument',
  customData: undefined,
  toString: [Function (anonymous)]
}
[DocumentPersistence] STEP ERROR: Save operation failed {
  error: 'FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.',
  errorType: 'Error',
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stack: 'Error: FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.\n' +
    '    at FirestoreAdapter.updateDocument (webpack-internal:///(rsc)/./src/lib/firestore-adapter.ts:105:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async DocumentPersistenceManager.saveDocument (webpack-internal:///(rsc)/./src/lib/document-persistence.ts:217:17)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/documents/save/route.ts:39:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
[DocumentPersistence] FAILED: saveDocument Error: FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
    at FirestoreAdapter.updateDocument (src/lib/firestore-adapter.ts:127:12)
    at async DocumentPersistenceManager.saveDocument (src/lib/document-persistence.ts:256:8)
    at async POST (src/app/api/documents/save/route.ts:33:19)
  125 |     } catch (error) {
  126 |       this.logError(`updateDocument ${documentId} in ${collectionName}`, error);
> 127 |       throw new Error(`FATAL: Failed to update document ${documentId} in ${collectionName}: ${error}`);
      |            ^
  128 |     }
  129 |   }
  130 |
 POST /api/documents/save 200 in 1829ms
 ✓ Compiled in 264ms (1316 modules)
Starting inspector on 127.0.0.1:9230 failed: address already in use
 ⨯ Failed to start server
Error: listen EADDRINUSE: address already in use :::9002
    at <unknown> (Error: listen EADDRINUSE: address already in use :::9002)
    at new Promise (<anonymous>) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 9002
}
Debugger listening on ws://127.0.0.1:9229/183f9ee2-ba32-4c8a-8158-7c2f9d9a5e1a
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 483,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:20:51.718Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'aXg7gLuoBWZUqpGkhW3h' }
[2025-06-15T19:20:53.945Z]  @firebase/firestore: Firestore (11.9.0): GrpcConnection RPC 'Write' stream 0x5701dfed error. Code: 3 Message: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
[FirestoreAdapter] FAILED: updateDocument aXg7gLuoBWZUqpGkhW3h in documents [Error [FirebaseError]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.] {
  code: 'invalid-argument',
  customData: undefined,
  toString: [Function (anonymous)]
}
[DocumentPersistence] STEP ERROR: Save operation failed {
  error: 'FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.',
  errorType: 'Error',
  documentId: 'aXg7gLuoBWZUqpGkhW3h',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stack: 'Error: FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.\n' +
    '    at FirestoreAdapter.updateDocument (webpack-internal:///(rsc)/./src/lib/firestore-adapter.ts:105:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async DocumentPersistenceManager.saveDocument (webpack-internal:///(rsc)/./src/lib/document-persistence.ts:217:17)\n' +
    '    at async POST (webpack-internal:///(rsc)/./src/app/api/documents/save/route.ts:39:24)\n' +
    '    at async AppRouteRouteModule.do (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1518:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1920:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2408:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:2445:32)\n' +
    '    at async DevServer.pipeImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:1008:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/base-server.js:900:17)\n' +
    '    at async /Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/franzenzenhofer/dev/franzai-writer/node_modules/next/dist/server/lib/start-server.js:158:13)'
}
[DocumentPersistence] FAILED: saveDocument Error: FATAL: Failed to update document aXg7gLuoBWZUqpGkhW3h in documents: FirebaseError: [code=invalid-argument]: 3 INVALID_ARGUMENT: Property stageStates contains an invalid nested entity.
    at FirestoreAdapter.updateDocument (src/lib/firestore-adapter.ts:127:12)
    at async DocumentPersistenceManager.saveDocument (src/lib/document-persistence.ts:256:8)
    at async POST (src/app/api/documents/save/route.ts:33:19)
  125 |     } catch (error) {
  126 |       this.logError(`updateDocument ${documentId} in ${collectionName}`, error);
> 127 |       throw new Error(`FATAL: Failed to update document ${documentId} in ${collectionName}: ${error}`);
      |            ^
  128 |     }
  129 |   }
  130 |
 POST /api/documents/save 200 in 2433ms
 ○ Compiling /dashboard ...
 ✓ Compiled /dashboard in 632ms (2201 modules)
 GET /dashboard 200 in 696ms
 ✓ Compiled /w/[shortName]/new in 212ms (2203 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:21:21.904Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:21:21.999Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mby1wxnbwnftucm',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1750015282007_1u3r8gqz3',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1750015282007_1u3r8gqz3',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'K06ZrHBjmgLyOodBm7Qh',
  path: 'documents/K06ZrHBjmgLyOodBm7Qh'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'K06ZrHBjmgLyOodBm7Qh',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'K06ZrHBjmgLyOodBm7Qh',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  error: undefined,
  originalId: 'mby1wxnbwnftucm'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mby1wxnbwnftucm',
  createdId: 'K06ZrHBjmgLyOodBm7Qh',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/K06ZrHBjmgLyOodBm7Qh' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 1208ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 190ms
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 160ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:21:22.860Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document updated successfully { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
 POST /api/documents/save 200 in 270ms
 ✓ Compiled /api/wizard/execute in 213ms (1505 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  groundingSettings: undefined,
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 79
[runAiStage] First 200 chars of filled prompt: tes test test 

Please solve this step by step and show your reasoning process.
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 79,
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: true,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.5-pro-preview-03-25',
  hasTools: false,
  hasGrounding: false,
  forceGoogleSearchGrounding: false,
  hasThinking: true,
  isStreaming: undefined,
  promptTemplate: 'tes test test \n' +
    '\n' +
    'Please solve this step by step and show your reasoning process....',
  chatHistory: 'none',
  groundingSettings: undefined,
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: undefined
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 79
}
[AI Stage Flow Enhanced] Generation path decision: {
  shouldUseStreaming: true,
  streamingEnabled: undefined,
  hasHistory: true,
  hasTools: false,
  googleSearchEnabled: undefined,
  modelUsed: 'gemini-2.5-pro-preview-03-25'
}
🔧🔧🔧 FINAL API REQUEST TOOLS CHECK 🔧🔧🔧
📋 generateOptions.tools: []
📋 generateOptions.config: {
  "temperature": 0.7,
  "thinkingConfig": {
    "includeThoughts": true,
    "thinkingBudget": 8192
  }
}
📊 Total tools count: 0
❌❌❌ NO GOOGLE SEARCH GROUNDING CONFIGURED ❌❌❌
🔧🔧🔧 ================================= 🔧🔧🔧
[AI Stage Flow Enhanced] Streaming iteration 1/5
[AI Stage Flow Enhanced] ===== API REQUEST DETAILS =====
[AI Stage Flow Enhanced] Full API Request Configuration: {
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  hasTools: false,
  toolsCount: 0,
  toolNames: [],
  hasGoogleSearchTool: false,
  systemInstruction: undefined,
  callHistoryLength: 1,
  fullCallHistory: [ { role: 'user', parts: [Array] } ],
  forceGoogleSearchGrounding: false
}
[AI Stage Flow Enhanced] Complete Google API Request: {
  "model": "gemini-2.5-pro-preview-03-25",
  "config": {
    "temperature": 0.7,
    "thinkingConfig": {
      "includeThoughts": true,
      "thinkingBudget": 8192
    }
  },
  "tools": [],
  "messages": [
    {
      "role": "user",
      "parts": [
        {
          "text": "tes test test \n\nPlease solve this step by step and show your reasoning process."
        }
      ]
    }
  ]
}
[AI Stage Flow Enhanced] Using streaming generation with @google/genai
🌊 [Direct Gemini] Starting streaming generation
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:21:32.180Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'code-execution-python',
    'multiple-url-grounding',
    'test-title',
    'document-understanding-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'chat-mode-test',
    'final-summary',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-weather',
    'grounding-google-search',
    'image-understanding-test',
    'function-calling-calculator',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'code-execution-python',
    'multiple-url-grounding',
    'test-title',
    'document-understanding-test',
    'function-calling-unit-converter',
    'combined-features-test',
    'chat-mode-test',
    'final-summary',
    'grounding-url-context',
    'thinking-mode-test',
    'function-calling-weather',
    'grounding-google-search',
    'image-understanding-test',
    'function-calling-calculator',
    'streaming-test'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 613ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:21:32.699Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document updated successfully { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
 POST /api/documents/save 200 in 455ms
[AI Stage Flow Enhanced] ===== API RESPONSE DETAILS =====
[AI Stage Flow Enhanced] Raw API Response Summary: {
  hasContent: true,
  contentLength: 2586,
  contentPreview: 'Okay, I see your input: "tes test test".\n' +
    '\n' +
    `This looks like a test message, often used to check if a system is responsive. Since you've asked me to "solve this step by step and show your reasoning proce...`,
  hasGroundingMetadata: false,
  groundingMetadataKeys: [],
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasUsageMetadata: true,
  modelVersion: 'models/gemini-2.5-pro-preview-05-06'
}
[AI Stage Flow Enhanced] Complete Google API Response: {
  "content": "Okay, I see your input: \"tes test test\".\n\nThis looks like a test message, often used to check if a system is responsive. Since you've asked me to \"solve this step by step and show your reasoning process,\" I'll interpret this as a request to explain how I'm processing your input and responding.\n\nHere's my step-by-step reasoning:\n\n1.  **Input Reception and Initial Analysis:**\n    *   **Input:** \"tes test test\"\n    *   **Observation 1:** The input consists of three words.\n    *   **Observation 2:** The first word \"tes\" appears to be a slight variation (perhaps a typo or abbreviation) of the word \"test\".\n    *   **Observation 3:** The words \"test\" are repeated.\n\n2.  **Interpreting Intent:**\n    *   **Common Usage:** Phrases like \"test,\" \"testing,\" \"test 1 2 3,\" or variations thereof are widely understood as a method to check if a communication channel is open or if a system is operational.\n    *   **My Context as an AI:** Given that I am a language model designed to respond to user inputs, it's highly probable that your input \"tes test test\" is intended to verify my responsiveness.\n\n3.  **Formulating a Response Strategy:**\n    *   **Goal 1: Acknowledge the input.** Show that I've \"heard\" you.\n    *   **Goal 2: Confirm operational status.** Respond in a way that indicates I am working.\n    *   **Goal 3: Address the \"solve this step by step\" instruction.** Since there isn't a mathematical or logical problem to solve in \"tes test test,\" I need to apply this instruction to my own process of responding.\n\n4.  **Constructing the Response (as I'm doing now):**\n    *   **Step 4a:** Directly acknowledge the input phrase. (Done in the first line of this response).\n    *   **Step 4b:** State my interpretation of the input's purpose (i.e., it's a test). (Done in the second paragraph).\n    *   **Step 4c:** Explain how I'm fulfilling the \"step-by-step\" requirement by breaking down my reasoning for this very response. (This is the core of this numbered list).\n    *   **Step 4d:** Conclude by confirming that the \"test\" is successful from my perspective and offer further assistance.\n\n5.  **Conclusion of the \"Test\":**\n    *   If your intention was to see if I'm active and can process input, then consider this response a confirmation. Test successful!\n\nTherefore, my \"solution\" to \"tes test test\" is to recognize it as a system check, confirm my operational status, and explain my reasoning for this interpretation, especially given your request for a step-by-step process.\n\nIs there something specific you'd like me to do now, or another problem you'd like me to solve?",
  "groundingSources": [],
  "usageMetadata": {
    "promptTokenCount": 18,
    "candidatesTokenCount": 651,
    "totalTokenCount": 1918,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 18
      }
    ],
    "thoughtsTokenCount": 1249
  },
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": " like me to solve?"
          }
        ],
        "role": "model"
      },
      "finishReason": "STOP",
      "index": 0
    }
  ],
  "modelVersion": "models/gemini-2.5-pro-preview-05-06"
}
[AI Stage Flow Enhanced] ===== NO GOOGLE SEARCH GROUNDING FOUND =====
[AI Stage Flow Enhanced] ❌ Google Search Grounding NOT working - response has no grounding data
[AI Stage Flow Enhanced] This might indicate:
[AI Stage Flow Enhanced] 1. Google Search grounding is not properly configured
[AI Stage Flow Enhanced] 2. The model did not need to search for this query
[AI Stage Flow Enhanced] 3. There was an issue with the grounding service
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'outputImages',
  'updatedChatHistory',
  'groundingSources',
  'groundingMetadata',
  'functionCalls',
  'codeExecutionResults'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 2586,
  hasGroundingMetadata: false,
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasThinkingSteps: true,
  thinkingStepsCount: 1,
  hasUpdatedChatHistory: true,
  chatHistoryLength: 1
}
 POST /api/wizard/execute 200 in 20474ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document updated successfully { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
 POST /api/documents/save 200 in 235ms
Debugger listening on ws://127.0.0.1:9229/0a9c8f10-2f74-4ce1-a70f-dcbdb5692b25
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 27315561,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/58408941-4c63-4bb2-afe4-f39995227d75
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1520ms
 ○ Compiling / ...
 ✓ Compiled / in 1758ms (1212 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:24:00.176Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET / 200 in 2155ms
 ✓ Compiled in 750ms (454 modules)
 ✓ Compiled in 197ms (454 modules)
 ✓ Compiled in 112ms (454 modules)
 ✓ Compiled in 233ms (454 modules)
 ✓ Compiled in 283ms (454 modules)
 ✓ Compiled in 184ms (454 modules)
 ✓ Compiled in 255ms (454 modules)
 ✓ Compiled in 123ms (454 modules)
 ✓ Compiled in 118ms (454 modules)
 ✓ Compiled in 177ms (454 modules)
 ✓ Compiled in 166ms (454 modules)
 ✓ Compiled in 108ms (454 modules)
 ○ Compiling /w/[shortName]/[documentId] ...
 ✓ Compiled /w/[shortName]/[documentId] in 1421ms (2166 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:01.385Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:01.487Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:01.656Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'combined-features-test',
    'thinking-mode-test',
    'code-execution-python',
    'grounding-url-context',
    'chat-mode-test',
    'function-calling-unit-converter',
    'test-title',
    'function-calling-calculator',
    'document-understanding-test',
    'function-calling-weather',
    'final-summary',
    'grounding-google-search',
    'image-understanding-test',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'combined-features-test',
    'thinking-mode-test',
    'code-execution-python',
    'grounding-url-context',
    'chat-mode-test',
    'function-calling-unit-converter',
    'test-title',
    'function-calling-calculator',
    'document-understanding-test',
    'function-calling-weather',
    'final-summary',
    'grounding-google-search',
    'image-understanding-test',
    'streaming-test'
  ]
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 2823ms
 ✓ Compiled /favicon.ico in 203ms (1319 modules)
 GET /favicon.ico 200 in 279ms
Debugger listening on ws://127.0.0.1:9229/cf85fe1e-c818-4eb7-8935-2470beb70242
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 372866,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
Debugger listening on ws://127.0.0.1:9230/80da5839-46e8-4bf3-9974-3c0c2e56aed2
For help, see: https://nodejs.org/en/docs/inspector
   the --inspect option was detected, the Next.js router server should be inspected at 9230.
   ▲ Next.js 15.3.3
   - Local:        http://localhost:9002
   - Network:      http://192.168.1.200:9002
   - Environments: .env.local, .env

 ✓ Starting...
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STARTED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "isSrcDir": true,
    "hasNowJson": false,
    "isCustomServer": false,
    "hasNextConfig": true,
    "buildTarget": "default",
    "hasWebpackConfig": false,
    "hasBabelConfig": false,
    "imageEnabled": true,
    "imageFutureEnabled": true,
    "basePathEnabled": false,
    "i18nEnabled": false,
    "locales": null,
    "localeDomainsCount": null,
    "localeDetectionEnabled": null,
    "imageDomainsCount": 0,
    "imageRemotePatternsCount": 1,
    "imageLocalPatternsCount": null,
    "imageSizes": "16,32,48,64,96,128,256,384",
    "imageQualities": null,
    "imageLoader": "default",
    "imageFormats": "image/webp",
    "nextConfigOutput": null,
    "trailingSlashEnabled": false,
    "reactStrictMode": false,
    "webpackVersion": 5,
    "turboFlag": false,
    "isRspack": false,
    "appDir": true,
    "pagesDir": false,
    "staticStaleTime": 300,
    "dynamicStaleTime": 0,
    "reactCompiler": false,
    "reactCompilerCompilationMode": null,
    "reactCompilerPanicThreshold": null
  }
}
[telemetry] {
  "eventName": "NEXT_BUILD_FEATURE_USAGE",
  "payload": {
    "featureName": "turbopackPersistentCaching",
    "invocationCount": 0
  }
}
 ✓ Ready in 1366ms
 ○ Compiling /w/[shortName]/[documentId] ...
 ✓ Compiled /w/[shortName]/[documentId] in 2.5s (2165 modules)
 ✓ Compiled in 435ms (862 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:18.495Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:18.609Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '4uhVu0tEOLwcmnAA2wdv' }
[WizardPage] Loading existing document: 4uhVu0tEOLwcmnAA2wdv
[DocumentPersistence] Loading document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:18.920Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document loaded successfully {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageStatesCount: 14,
  stageStatesKeys: [
    'image-understanding-test',
    'function-calling-calculator',
    'function-calling-weather',
    'test-title',
    'combined-features-test',
    'streaming-test',
    'grounding-url-context',
    'grounding-google-search',
    'thinking-mode-test',
    'chat-mode-test',
    'document-understanding-test',
    'function-calling-unit-converter',
    'final-summary',
    'code-execution-python'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test',
  stageCount: 14,
  validatedStageIds: [
    'image-understanding-test',
    'function-calling-calculator',
    'function-calling-weather',
    'test-title',
    'combined-features-test',
    'streaming-test',
    'grounding-url-context',
    'grounding-google-search',
    'thinking-mode-test',
    'chat-mode-test',
    'document-understanding-test',
    'function-calling-unit-converter',
    'final-summary',
    'code-execution-python'
  ]
}
 GET /w/gemini-test/4uhVu0tEOLwcmnAA2wdv 200 in 4188ms
 ✓ Compiled /favicon.ico in 272ms (1319 modules)
 GET /favicon.ico 200 in 341ms
 ✓ Compiled /api/documents/save in 299ms (2172 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:22.675Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 1060ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '4uhVu0tEOLwcmnAA2wdv',
  title: 'test\n',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '4uhVu0tEOLwcmnAA2wdv' }
[DocumentPersistence] Document updated successfully { documentId: '4uhVu0tEOLwcmnAA2wdv' }
 POST /api/documents/save 200 in 271ms
 ✓ Compiled /dashboard in 442ms (2213 modules)
 GET /dashboard 200 in 520ms
 GET /dashboard 200 in 17ms
 ✓ Compiled /w/[shortName]/new in 197ms (2215 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:35.299Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:35.357Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mby27ibrwnlgjb1',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1750015775368_9ckqgu7wh',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1750015775368_9ckqgu7wh',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'vRT4gR2Hanzs0MPppfLE',
  path: 'documents/vRT4gR2Hanzs0MPppfLE'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'vRT4gR2Hanzs0MPppfLE',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'vRT4gR2Hanzs0MPppfLE',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  error: undefined,
  originalId: 'mby27ibrwnlgjb1'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mby27ibrwnlgjb1',
  createdId: 'vRT4gR2Hanzs0MPppfLE',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/vRT4gR2Hanzs0MPppfLE' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 1123ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 174ms
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 152ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:36.194Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document updated successfully { documentId: 'vRT4gR2Hanzs0MPppfLE' }
 POST /api/documents/save 200 in 275ms
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
 ✓ Compiled /api/wizard/execute in 428ms (2377 modules)
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  groundingSettings: undefined,
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 99
[runAiStage] First 200 chars of filled prompt: sing a song about franz enzenhofer

Please solve this step by step and show your reasoning process.
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 99,
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: true,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.5-pro-preview-03-25',
  hasTools: false,
  hasGrounding: false,
  forceGoogleSearchGrounding: false,
  hasThinking: true,
  isStreaming: undefined,
  promptTemplate: 'sing a song about franz enzenhofer\n' +
    '\n' +
    'Please solve this step by step and show your reasoning process....',
  chatHistory: 'none',
  groundingSettings: undefined,
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: undefined
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 99
}
[AI Stage Flow Enhanced] Generation path decision: {
  shouldUseStreaming: true,
  streamingEnabled: undefined,
  hasHistory: true,
  hasTools: false,
  googleSearchEnabled: undefined,
  modelUsed: 'gemini-2.5-pro-preview-03-25'
}
🔧🔧🔧 FINAL API REQUEST TOOLS CHECK 🔧🔧🔧
📋 generateOptions.tools: []
📋 generateOptions.config: {
  "temperature": 0.7,
  "thinkingConfig": {
    "includeThoughts": true,
    "thinkingBudget": 8192
  }
}
📊 Total tools count: 0
❌❌❌ NO GOOGLE SEARCH GROUNDING CONFIGURED ❌❌❌
🔧🔧🔧 ================================= 🔧🔧🔧
[AI Stage Flow Enhanced] Streaming iteration 1/5
[AI Stage Flow Enhanced] ===== API REQUEST DETAILS =====
[AI Stage Flow Enhanced] Full API Request Configuration: {
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  hasTools: false,
  toolsCount: 0,
  toolNames: [],
  hasGoogleSearchTool: false,
  systemInstruction: undefined,
  callHistoryLength: 1,
  fullCallHistory: [ { role: 'user', parts: [Array] } ],
  forceGoogleSearchGrounding: false
}
[AI Stage Flow Enhanced] Complete Google API Request: {
  "model": "gemini-2.5-pro-preview-03-25",
  "config": {
    "temperature": 0.7,
    "thinkingConfig": {
      "includeThoughts": true,
      "thinkingBudget": 8192
    }
  },
  "tools": [],
  "messages": [
    {
      "role": "user",
      "parts": [
        {
          "text": "sing a song about franz enzenhofer\n\nPlease solve this step by step and show your reasoning process."
        }
      ]
    }
  ]
}
[AI Stage Flow Enhanced] Using streaming generation with @google/genai
🌊 [Direct Gemini] Starting streaming generation
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:29:50.313Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document updated successfully { documentId: 'vRT4gR2Hanzs0MPppfLE' }
 POST /api/documents/save 200 in 530ms
[AI Stage Flow Enhanced] ===== API RESPONSE DETAILS =====
[AI Stage Flow Enhanced] Raw API Response Summary: {
  hasContent: true,
  contentLength: 1445,
  contentPreview: "Okay, here's a little ditty about the SEO expert, Franz Enzenhofer!\n" +
    "I'll imagine a sort of folk/acoustic vibe for this.\n" +
    '\n' +
    '(Verse 1)\n' +
    "In Austria's lands, where mountains stand tall,\n" +
    'A digital mind heard ...',
  hasGroundingMetadata: false,
  groundingMetadataKeys: [],
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasUsageMetadata: true,
  modelVersion: 'models/gemini-2.5-pro-preview-05-06'
}
[AI Stage Flow Enhanced] Complete Google API Response: {
  "content": "Okay, here's a little ditty about the SEO expert, Franz Enzenhofer!\nI'll imagine a sort of folk/acoustic vibe for this.\n\n(Verse 1)\nIn Austria's lands, where mountains stand tall,\nA digital mind heard the internet's call.\nWith keywords and content, and links strong and true,\nFranz Enzenhofer, what can't you do?\n\n(Chorus)\nOh, Franz Enzenhofer, SEO's bright star,\nHe knows how to make websites go far!\nFrom rankings and audits to strategy's gleam,\nHe's living the online marketing dream!\n\n(Verse 2)\nHe speaks at the conferences, shares all he knows,\nHelps businesses flourish, watch how their traffic grows.\nNo algorithm's too tricky, no SERP too steep,\nWhile others are guessing, his knowledge runs deep.\n\n(Chorus)\nOh, Franz Enzenhofer, SEO's bright star,\nHe knows how to make websites go far!\nFrom rankings and audits to strategy's gleam,\nHe's living the online marketing dream!\n\n(Bridge)\nFor years he's been guiding, with insight and flair,\nA \"Doyen\" they call him, beyond all compare.\nHe cuts through the noise, with a clear, steady hand,\nThe best in the German-speaking land!\n\n(Chorus)\nOh, Franz Enzenhofer, SEO's bright star,\nHe knows how to make websites go far!\nFrom rankings and audits to strategy's gleam,\nHe's living the online marketing dream!\n\n(Outro)\nSo if your site's sinking, and you're feeling the blues,\nFranz Enzenhofer's the expert to choose!\nYeah, Franz Enzenhofer, he'll show you the way,\nHooray for Franz! Hip, hip, hooray!",
  "groundingSources": [],
  "usageMetadata": {
    "promptTokenCount": 22,
    "candidatesTokenCount": 410,
    "totalTokenCount": 1611,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 22
      }
    ],
    "thoughtsTokenCount": 1179
  },
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "\nHooray for Franz! Hip, hip, hooray!"
          }
        ],
        "role": "model"
      },
      "finishReason": "STOP",
      "index": 0
    }
  ],
  "modelVersion": "models/gemini-2.5-pro-preview-05-06"
}
[AI Stage Flow Enhanced] ===== NO GOOGLE SEARCH GROUNDING FOUND =====
[AI Stage Flow Enhanced] ❌ Google Search Grounding NOT working - response has no grounding data
[AI Stage Flow Enhanced] This might indicate:
[AI Stage Flow Enhanced] 1. Google Search grounding is not properly configured
[AI Stage Flow Enhanced] 2. The model did not need to search for this query
[AI Stage Flow Enhanced] 3. There was an issue with the grounding service
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'outputImages',
  'updatedChatHistory',
  'groundingSources',
  'groundingMetadata',
  'functionCalls',
  'codeExecutionResults'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 1445,
  hasGroundingMetadata: false,
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasThinkingSteps: true,
  thinkingStepsCount: 1,
  hasUpdatedChatHistory: true,
  chatHistoryLength: 1
}
 POST /api/wizard/execute 200 in 18278ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document updated successfully { documentId: 'vRT4gR2Hanzs0MPppfLE' }
 POST /api/documents/save 200 in 272ms
 ✓ Compiled in 1193ms (2203 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:31:51.754Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'image-understanding-test',
    'document-understanding-test',
    'thinking-mode-test',
    'function-calling-weather',
    'test-title',
    'chat-mode-test',
    'streaming-test',
    'function-calling-unit-converter',
    'grounding-url-context',
    'grounding-google-search',
    'function-calling-calculator',
    'multiple-url-grounding',
    'final-summary',
    'combined-features-test',
    'code-execution-python'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'image-understanding-test',
    'document-understanding-test',
    'thinking-mode-test',
    'function-calling-weather',
    'test-title',
    'chat-mode-test',
    'streaming-test',
    'function-calling-unit-converter',
    'grounding-url-context',
    'grounding-google-search',
    'function-calling-calculator',
    'multiple-url-grounding',
    'final-summary',
    'combined-features-test',
    'code-execution-python'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 545ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:31:52.237Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 268ms (2203 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:00.118Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'combined-features-test',
    'document-understanding-test',
    'streaming-test',
    'final-summary',
    'test-title',
    'chat-mode-test',
    'thinking-mode-test',
    'grounding-url-context',
    'function-calling-weather',
    'grounding-google-search',
    'multiple-url-grounding',
    'code-execution-python',
    'image-understanding-test',
    'function-calling-calculator',
    'function-calling-unit-converter'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'combined-features-test',
    'document-understanding-test',
    'streaming-test',
    'final-summary',
    'test-title',
    'chat-mode-test',
    'thinking-mode-test',
    'grounding-url-context',
    'function-calling-weather',
    'grounding-google-search',
    'multiple-url-grounding',
    'code-execution-python',
    'image-understanding-test',
    'function-calling-calculator',
    'function-calling-unit-converter'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 554ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:00.688Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 436ms (2203 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:00.807Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'code-execution-python',
    'final-summary',
    'grounding-url-context',
    'function-calling-weather',
    'multiple-url-grounding',
    'grounding-google-search',
    'chat-mode-test',
    'test-title',
    'document-understanding-test',
    'function-calling-unit-converter',
    'function-calling-calculator',
    'thinking-mode-test',
    'streaming-test',
    'image-understanding-test',
    'combined-features-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'code-execution-python',
    'final-summary',
    'grounding-url-context',
    'function-calling-weather',
    'multiple-url-grounding',
    'grounding-google-search',
    'chat-mode-test',
    'test-title',
    'document-understanding-test',
    'function-calling-unit-converter',
    'function-calling-calculator',
    'thinking-mode-test',
    'streaming-test',
    'image-understanding-test',
    'combined-features-test'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 327ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:01.250Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /api/documents/save in 226ms (1343 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:02.551Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document updated successfully { documentId: 'vRT4gR2Hanzs0MPppfLE' }
 POST /api/documents/save 200 in 848ms
 ✓ Compiled in 298ms (2219 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:37.569Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'chat-mode-test',
    'function-calling-weather',
    'function-calling-calculator',
    'function-calling-unit-converter',
    'image-understanding-test',
    'grounding-url-context',
    'document-understanding-test',
    'code-execution-python',
    'streaming-test',
    'thinking-mode-test',
    'test-title',
    'multiple-url-grounding',
    'combined-features-test',
    'grounding-google-search',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'chat-mode-test',
    'function-calling-weather',
    'function-calling-calculator',
    'function-calling-unit-converter',
    'image-understanding-test',
    'grounding-url-context',
    'document-understanding-test',
    'code-execution-python',
    'streaming-test',
    'thinking-mode-test',
    'test-title',
    'multiple-url-grounding',
    'combined-features-test',
    'grounding-google-search',
    'final-summary'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 566ms
 ✓ Compiled in 635ms (2219 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:38.369Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:38.348Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'final-summary',
    'function-calling-calculator',
    'test-title',
    'document-understanding-test',
    'streaming-test',
    'chat-mode-test',
    'grounding-google-search',
    'code-execution-python',
    'image-understanding-test',
    'combined-features-test',
    'grounding-url-context',
    'multiple-url-grounding',
    'function-calling-weather',
    'thinking-mode-test',
    'function-calling-unit-converter'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'final-summary',
    'function-calling-calculator',
    'test-title',
    'document-understanding-test',
    'streaming-test',
    'chat-mode-test',
    'grounding-google-search',
    'code-execution-python',
    'image-understanding-test',
    'combined-features-test',
    'grounding-url-context',
    'multiple-url-grounding',
    'function-calling-weather',
    'thinking-mode-test',
    'function-calling-unit-converter'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 364ms
 ✓ Compiled in 302ms (2219 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:44.602Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'function-calling-calculator',
    'document-understanding-test',
    'image-understanding-test',
    'streaming-test',
    'grounding-url-context',
    'code-execution-python',
    'grounding-google-search',
    'combined-features-test',
    'multiple-url-grounding',
    'final-summary',
    'thinking-mode-test',
    'function-calling-weather',
    'chat-mode-test',
    'test-title',
    'function-calling-unit-converter'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'function-calling-calculator',
    'document-understanding-test',
    'image-understanding-test',
    'streaming-test',
    'grounding-url-context',
    'code-execution-python',
    'grounding-google-search',
    'combined-features-test',
    'multiple-url-grounding',
    'final-summary',
    'thinking-mode-test',
    'function-calling-weather',
    'chat-mode-test',
    'test-title',
    'function-calling-unit-converter'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 441ms
 ✓ Compiled in 359ms (2219 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:45.155Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:45.128Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'combined-features-test',
    'function-calling-unit-converter',
    'function-calling-calculator',
    'grounding-url-context',
    'document-understanding-test',
    'code-execution-python',
    'multiple-url-grounding',
    'thinking-mode-test',
    'image-understanding-test',
    'chat-mode-test',
    'final-summary',
    'function-calling-weather',
    'grounding-google-search',
    'test-title',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'combined-features-test',
    'function-calling-unit-converter',
    'function-calling-calculator',
    'grounding-url-context',
    'document-understanding-test',
    'code-execution-python',
    'multiple-url-grounding',
    'thinking-mode-test',
    'image-understanding-test',
    'chat-mode-test',
    'final-summary',
    'function-calling-weather',
    'grounding-google-search',
    'test-title',
    'streaming-test'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 389ms
 ✓ Compiled in 231ms (2219 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:53.174Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'function-calling-calculator',
    'image-understanding-test',
    'grounding-google-search',
    'test-title',
    'chat-mode-test',
    'combined-features-test',
    'thinking-mode-test',
    'grounding-url-context',
    'code-execution-python',
    'function-calling-unit-converter',
    'function-calling-weather',
    'multiple-url-grounding',
    'document-understanding-test',
    'streaming-test',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'function-calling-calculator',
    'image-understanding-test',
    'grounding-google-search',
    'test-title',
    'chat-mode-test',
    'combined-features-test',
    'thinking-mode-test',
    'grounding-url-context',
    'code-execution-python',
    'function-calling-unit-converter',
    'function-calling-weather',
    'multiple-url-grounding',
    'document-understanding-test',
    'streaming-test',
    'final-summary'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 358ms
 ✓ Compiled in 367ms (2219 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:53.776Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:53.717Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'multiple-url-grounding',
    'code-execution-python',
    'image-understanding-test',
    'grounding-url-context',
    'function-calling-calculator',
    'thinking-mode-test',
    'document-understanding-test',
    'combined-features-test',
    'grounding-google-search',
    'chat-mode-test',
    'test-title',
    'function-calling-weather',
    'streaming-test',
    'function-calling-unit-converter',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'multiple-url-grounding',
    'code-execution-python',
    'image-understanding-test',
    'grounding-url-context',
    'function-calling-calculator',
    'thinking-mode-test',
    'document-understanding-test',
    'combined-features-test',
    'grounding-google-search',
    'chat-mode-test',
    'test-title',
    'function-calling-weather',
    'streaming-test',
    'function-calling-unit-converter',
    'final-summary'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 385ms
 ✓ Compiled in 264ms (2219 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:32:59.541Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'combined-features-test',
    'image-understanding-test',
    'grounding-google-search',
    'thinking-mode-test',
    'chat-mode-test',
    'test-title',
    'document-understanding-test',
    'code-execution-python',
    'function-calling-unit-converter',
    'final-summary',
    'grounding-url-context',
    'function-calling-calculator',
    'streaming-test',
    'multiple-url-grounding',
    'function-calling-weather'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'combined-features-test',
    'image-understanding-test',
    'grounding-google-search',
    'thinking-mode-test',
    'chat-mode-test',
    'test-title',
    'document-understanding-test',
    'code-execution-python',
    'function-calling-unit-converter',
    'final-summary',
    'grounding-url-context',
    'function-calling-calculator',
    'streaming-test',
    'multiple-url-grounding',
    'function-calling-weather'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 345ms
 ✓ Compiled in 348ms (2219 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:33:00.049Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:33:00.084Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'function-calling-weather',
    'grounding-google-search',
    'grounding-url-context',
    'function-calling-calculator',
    'streaming-test',
    'multiple-url-grounding',
    'code-execution-python',
    'image-understanding-test',
    'chat-mode-test',
    'document-understanding-test',
    'function-calling-unit-converter',
    'test-title',
    'combined-features-test',
    'final-summary',
    'thinking-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'function-calling-weather',
    'grounding-google-search',
    'grounding-url-context',
    'function-calling-calculator',
    'streaming-test',
    'multiple-url-grounding',
    'code-execution-python',
    'image-understanding-test',
    'chat-mode-test',
    'document-understanding-test',
    'function-calling-unit-converter',
    'test-title',
    'combined-features-test',
    'final-summary',
    'thinking-mode-test'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 400ms
 ✓ Compiled in 233ms (2219 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:33:04.552Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'multiple-url-grounding',
    'function-calling-weather',
    'document-understanding-test',
    'thinking-mode-test',
    'grounding-url-context',
    'chat-mode-test',
    'grounding-google-search',
    'streaming-test',
    'image-understanding-test',
    'code-execution-python',
    'function-calling-calculator',
    'combined-features-test',
    'final-summary',
    'test-title',
    'function-calling-unit-converter'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'multiple-url-grounding',
    'function-calling-weather',
    'document-understanding-test',
    'thinking-mode-test',
    'grounding-url-context',
    'chat-mode-test',
    'grounding-google-search',
    'streaming-test',
    'image-understanding-test',
    'code-execution-python',
    'function-calling-calculator',
    'combined-features-test',
    'final-summary',
    'test-title',
    'function-calling-unit-converter'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 399ms
 ✓ Compiled in 509ms (2219 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:33:05.250Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:33:05.348Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'multiple-url-grounding',
    'function-calling-calculator',
    'combined-features-test',
    'test-title',
    'image-understanding-test',
    'function-calling-weather',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'grounding-url-context',
    'thinking-mode-test',
    'streaming-test',
    'code-execution-python',
    'grounding-google-search',
    'document-understanding-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'multiple-url-grounding',
    'function-calling-calculator',
    'combined-features-test',
    'test-title',
    'image-understanding-test',
    'function-calling-weather',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'grounding-url-context',
    'thinking-mode-test',
    'streaming-test',
    'code-execution-python',
    'grounding-google-search',
    'document-understanding-test'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 358ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:33:05.787Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 225ms (876 modules)
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'vRT4gR2Hanzs0MPppfLE' }
[WizardPage] Loading existing document: vRT4gR2Hanzs0MPppfLE
[DocumentPersistence] Loading document { documentId: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'vRT4gR2Hanzs0MPppfLE' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'multiple-url-grounding',
    'function-calling-calculator',
    'combined-features-test',
    'test-title',
    'image-understanding-test',
    'function-calling-weather',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'grounding-url-context',
    'thinking-mode-test',
    'streaming-test',
    'code-execution-python',
    'grounding-google-search',
    'document-understanding-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'vRT4gR2Hanzs0MPppfLE',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'multiple-url-grounding',
    'function-calling-calculator',
    'combined-features-test',
    'test-title',
    'image-understanding-test',
    'function-calling-weather',
    'final-summary',
    'chat-mode-test',
    'function-calling-unit-converter',
    'grounding-url-context',
    'thinking-mode-test',
    'streaming-test',
    'code-execution-python',
    'grounding-google-search',
    'document-understanding-test'
  ]
}
 GET /w/gemini-test/vRT4gR2Hanzs0MPppfLE 200 in 137ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:33:45.225Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
Starting inspector on 127.0.0.1:9230 failed: address already in use
 ⨯ Failed to start server
Error: listen EADDRINUSE: address already in use :::9002
    at <unknown> (Error: listen EADDRINUSE: address already in use :::9002)
    at new Promise (<anonymous>) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 9002
}
Debugger listening on ws://127.0.0.1:9229/1eb14bc8-e17c-4d49-91b0-680f0657e295
For help, see: https://nodejs.org/en/docs/inspector
[telemetry] {
  "eventName": "NEXT_CLI_SESSION_STOPPED",
  "payload": {
    "nextVersion": "15.3.3",
    "nodeVersion": "v22.16.0",
    "cliCommand": "dev",
    "durationMilliseconds": 381,
    "turboFlag": false,
    "pagesDir": false,
    "appDir": true,
    "isRspack": false
  }
}
[?25h
 GET /dashboard 200 in 45ms
 ✓ Compiled in 418ms (2203 modules)
 GET /dashboard 200 in 147ms
 ✓ Compiled in 261ms (2203 modules)
 ✓ Compiled /w/[shortName]/new in 345ms (1329 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:34:15.112Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mby2di6pw6aoicf',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1750016055122_ft9c5ocbk',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1750016055122_ft9c5ocbk',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'WdGqWxtvYYsy6N9NPtXL',
  path: 'documents/WdGqWxtvYYsy6N9NPtXL'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'WdGqWxtvYYsy6N9NPtXL',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mby2di93wxcqb8h',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1750016055208_295b9kp50',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1750016055208_295b9kp50',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: 'moTzsqF636CX2DyyPSS4',
  path: 'documents/moTzsqF636CX2DyyPSS4'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: 'moTzsqF636CX2DyyPSS4',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'WdGqWxtvYYsy6N9NPtXL',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'WdGqWxtvYYsy6N9NPtXL',
  error: undefined,
  originalId: 'mby2di6pw6aoicf'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mby2di6pw6aoicf',
  createdId: 'WdGqWxtvYYsy6N9NPtXL',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/WdGqWxtvYYsy6N9NPtXL' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 845ms
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: 'moTzsqF636CX2DyyPSS4' }
[FirestoreAdapter] Document created { collection: 'documents', id: 'moTzsqF636CX2DyyPSS4' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: 'moTzsqF636CX2DyyPSS4',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: 'moTzsqF636CX2DyyPSS4' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: 'moTzsqF636CX2DyyPSS4',
  error: undefined,
  originalId: 'mby2di93wxcqb8h'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mby2di93wxcqb8h',
  createdId: 'moTzsqF636CX2DyyPSS4',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/moTzsqF636CX2DyyPSS4' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 339ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'WdGqWxtvYYsy6N9NPtXL' }
[WizardPage] Loading existing document: WdGqWxtvYYsy6N9NPtXL
[DocumentPersistence] Loading document { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'WdGqWxtvYYsy6N9NPtXL' }
[WizardPage] Loading existing document: WdGqWxtvYYsy6N9NPtXL
[DocumentPersistence] Loading document { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'WdGqWxtvYYsy6N9NPtXL',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'WdGqWxtvYYsy6N9NPtXL',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'WdGqWxtvYYsy6N9NPtXL',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: 'WdGqWxtvYYsy6N9NPtXL',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/gemini-test/WdGqWxtvYYsy6N9NPtXL 200 in 197ms
 GET /w/gemini-test/WdGqWxtvYYsy6N9NPtXL 200 in 147ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:34:15.890Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:34:16.197Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /api/documents/save in 182ms (1345 modules)
 ○ Compiling / ...
 ✓ Compiled / in 614ms (2225 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:34:18.724Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'WdGqWxtvYYsy6N9NPtXL',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:34:18.969Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET / 200 in 1069ms
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[DocumentPersistence] Document updated successfully { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
 POST /api/documents/save 200 in 1653ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'WdGqWxtvYYsy6N9NPtXL',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[DocumentPersistence] Document updated successfully { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
 POST /api/documents/save 200 in 239ms
 ✓ Compiled /api/wizard/execute in 396ms (1524 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  groundingSettings: undefined,
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 69
[runAiStage] First 200 chars of filled prompt: test

Please solve this step by step and show your reasoning process.
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 69,
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: true,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.5-pro-preview-03-25',
  hasTools: false,
  hasGrounding: false,
  forceGoogleSearchGrounding: false,
  hasThinking: true,
  isStreaming: undefined,
  promptTemplate: 'test\n\nPlease solve this step by step and show your reasoning process....',
  chatHistory: 'none',
  groundingSettings: undefined,
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: undefined
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 69
}
[AI Stage Flow Enhanced] Generation path decision: {
  shouldUseStreaming: true,
  streamingEnabled: undefined,
  hasHistory: true,
  hasTools: false,
  googleSearchEnabled: undefined,
  modelUsed: 'gemini-2.5-pro-preview-03-25'
}
🔧🔧🔧 FINAL API REQUEST TOOLS CHECK 🔧🔧🔧
📋 generateOptions.tools: []
📋 generateOptions.config: {
  "temperature": 0.7,
  "thinkingConfig": {
    "includeThoughts": true,
    "thinkingBudget": 8192
  }
}
📊 Total tools count: 0
❌❌❌ NO GOOGLE SEARCH GROUNDING CONFIGURED ❌❌❌
🔧🔧🔧 ================================= 🔧🔧🔧
[AI Stage Flow Enhanced] Streaming iteration 1/5
[AI Stage Flow Enhanced] ===== API REQUEST DETAILS =====
[AI Stage Flow Enhanced] Full API Request Configuration: {
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  hasTools: false,
  toolsCount: 0,
  toolNames: [],
  hasGoogleSearchTool: false,
  systemInstruction: undefined,
  callHistoryLength: 1,
  fullCallHistory: [ { role: 'user', parts: [Array] } ],
  forceGoogleSearchGrounding: false
}
[AI Stage Flow Enhanced] Complete Google API Request: {
  "model": "gemini-2.5-pro-preview-03-25",
  "config": {
    "temperature": 0.7,
    "thinkingConfig": {
      "includeThoughts": true,
      "thinkingBudget": 8192
    }
  },
  "tools": [],
  "messages": [
    {
      "role": "user",
      "parts": [
        {
          "text": "test\n\nPlease solve this step by step and show your reasoning process."
        }
      ]
    }
  ]
}
[AI Stage Flow Enhanced] Using streaming generation with @google/genai
🌊 [Direct Gemini] Starting streaming generation
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:34:26.386Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'WdGqWxtvYYsy6N9NPtXL',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[DocumentPersistence] Document updated successfully { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
 POST /api/documents/save 200 in 522ms
[AI Stage Flow Enhanced] ===== API RESPONSE DETAILS =====
[AI Stage Flow Enhanced] Raw API Response Summary: {
  hasContent: true,
  contentLength: 1192,
  contentPreview: 'Okay, "test" received!\n' +
    '\n' +
    "Here's my step-by-step reasoning for how I'm processing this:\n" +
    '\n' +
    '1.  **Receive Input:** The input is the word "test".\n' +
    '2.  **Interpret Input:** I understand "test" in this context...',
  hasGroundingMetadata: false,
  groundingMetadataKeys: [],
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasUsageMetadata: true,
  modelVersion: 'models/gemini-2.5-pro-preview-05-06'
}
[AI Stage Flow Enhanced] Complete Google API Response: {
  "content": "Okay, \"test\" received!\n\nHere's my step-by-step reasoning for how I'm processing this:\n\n1.  **Receive Input:** The input is the word \"test\".\n2.  **Interpret Input:** I understand \"test\" in this context as a prompt from you to check if I am operational, responsive, and able to process requests. It's like saying, \"Are you there and working?\"\n3.  **Formulate Response Strategy:**\n    *   Acknowledge the test.\n    *   Confirm my operational status.\n    *   Indicate readiness for a subsequent, more specific task.\n    *   Address the \"step-by-step and show reasoning\" part by explaining this very process.\n4.  **Execute Response:**\n    *   **Step 1 (Acknowledgement):** The word \"test\" has been successfully received.\n    *   **Step 2 (Status Check - Internal):** I verify that my core systems are running and I can generate a coherent response. (This is an internal check I perform).\n    *   **Step 3 (Confirmation of Status - External):** I am functioning correctly.\n    *   **Step 4 (Indicate Readiness):** I am now ready for your actual problem, question, or task.\n\n**Conclusion of this \"test\":** I am operational and awaiting your instructions.\n\nWhat would you like me to do or solve next?",
  "groundingSources": [],
  "usageMetadata": {
    "promptTokenCount": 15,
    "candidatesTokenCount": 304,
    "totalTokenCount": 1292,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 15
      }
    ],
    "thoughtsTokenCount": 973
  },
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": " of this \"test\":** I am operational and awaiting your instructions.\n\nWhat would you like me to do or solve next?"
          }
        ],
        "role": "model"
      },
      "finishReason": "STOP",
      "index": 0
    }
  ],
  "modelVersion": "models/gemini-2.5-pro-preview-05-06"
}
[AI Stage Flow Enhanced] ===== NO GOOGLE SEARCH GROUNDING FOUND =====
[AI Stage Flow Enhanced] ❌ Google Search Grounding NOT working - response has no grounding data
[AI Stage Flow Enhanced] This might indicate:
[AI Stage Flow Enhanced] 1. Google Search grounding is not properly configured
[AI Stage Flow Enhanced] 2. The model did not need to search for this query
[AI Stage Flow Enhanced] 3. There was an issue with the grounding service
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'outputImages',
  'updatedChatHistory',
  'groundingSources',
  'groundingMetadata',
  'functionCalls',
  'codeExecutionResults'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 1192,
  hasGroundingMetadata: false,
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasThinkingSteps: true,
  thinkingStepsCount: 1,
  hasUpdatedChatHistory: true,
  chatHistoryLength: 1
}
 POST /api/wizard/execute 200 in 14194ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'WdGqWxtvYYsy6N9NPtXL',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'WdGqWxtvYYsy6N9NPtXL' }
[DocumentPersistence] Document updated successfully { documentId: 'WdGqWxtvYYsy6N9NPtXL' }
 POST /api/documents/save 200 in 210ms
 ✓ Compiled in 270ms (1327 modules)
 ✓ Compiled in 177ms (863 modules)
 GET /dashboard 200 in 131ms
 ✓ Compiled /w/[shortName]/new in 268ms (1329 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:47:21.683Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[NewDocumentPage] STEP 1: Page accessed { shortName: 'gemini-test' }
[NewDocumentPage] STEP 2: Workflow found {
  shortName: 'gemini-test',
  workflowId: 'gemini-tools-test',
  workflowName: 'Gemini AI Tools Test'
}
[NewDocumentPage] STEP 3: Generated document ID {
  shortName: 'gemini-test',
  documentId: 'mby2ud3wwpvflvg',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 4: Starting document creation in Firestore
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: null,
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [],
  stageStatesCount: 0,
  hasUserId: false,
  isNewDocument: true
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1750016841692_8y86osiil',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [],
  originalCount: 0,
  cleanedKeys: [],
  cleanedCount: 0
}
[DocumentPersistence] STEP 6: Creating NEW document (documentId is null)
[DocumentPersistence] STEP 7: Prepared document data for creation {
  userId: 'server_user_1750016841692_8y86osiil',
  title: 'New Gemini AI Tools Test',
  workflowId: 'gemini-tools-test',
  status: 'draft',
  stageStatesCount: 0,
  metadata: { wordCount: 0, stageCount: 0 }
}
[DocumentPersistence] STEP 8: Calling Firestore adapter to create document
[FirestoreAdapter] STEP 1: Starting document creation {
  collection: 'documents',
  dataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata'
  ],
  dataSize: 192
}
[FirestoreAdapter] STEP 2: Generated document reference {
  collection: 'documents',
  id: '81jJnk3D0CFJ4kQje554',
  path: 'documents/81jJnk3D0CFJ4kQje554'
}
[FirestoreAdapter] STEP 3: Prepared document data {
  collection: 'documents',
  id: '81jJnk3D0CFJ4kQje554',
  finalDataKeys: [
    'userId',
    'title',
    'workflowId',
    'status',
    'stageStates',
    'metadata',
    'id',
    'createdAt',
    'updatedAt'
  ],
  hasStageStates: true,
  stageStatesKeys: []
}
[FirestoreAdapter] STEP 4: Calling setDoc on Firestore
[FirestoreAdapter] STEP 5: Document created successfully in Firestore { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Document created { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[DocumentPersistence] STEP 9: Document creation completed successfully {
  createdDocumentId: '81jJnk3D0CFJ4kQje554',
  collectionName: 'documents'
}
[DocumentPersistence] Document created successfully { documentId: '81jJnk3D0CFJ4kQje554' }
[NewDocumentPage] STEP 5: Document creation result {
  success: true,
  documentId: '81jJnk3D0CFJ4kQje554',
  error: undefined,
  originalId: 'mby2ud3wwpvflvg'
}
[NewDocumentPage] STEP 6: Document created successfully in Firestore {
  originalId: 'mby2ud3wwpvflvg',
  createdId: '81jJnk3D0CFJ4kQje554',
  workflowId: 'gemini-tools-test'
}
[NewDocumentPage] STEP 7: Initiating redirect to wizard page { targetUrl: '/w/gemini-test/81jJnk3D0CFJ4kQje554' }
[NewDocumentPage] STEP 8: Caught exception {
  errorName: 'Error',
  errorMessage: 'NEXT_REDIRECT',
  isNextRedirect: true
}
[NewDocumentPage] STEP 9: This is a Next.js redirect - letting it through
 GET /w/gemini-test/new 200 in 741ms
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '81jJnk3D0CFJ4kQje554' }
[WizardPage] Loading existing document: 81jJnk3D0CFJ4kQje554
[DocumentPersistence] Loading document { documentId: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: '81jJnk3D0CFJ4kQje554' }
[WizardPage] Loading existing document: 81jJnk3D0CFJ4kQje554
[DocumentPersistence] Loading document { documentId: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:47:22.255Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[DocumentPersistence] Document loaded successfully {
  documentId: '81jJnk3D0CFJ4kQje554',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: '81jJnk3D0CFJ4kQje554',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[DocumentPersistence] Document loaded successfully {
  documentId: '81jJnk3D0CFJ4kQje554',
  title: 'New Gemini AI Tools Test',
  stageStatesCount: 0,
  stageStatesKeys: []
}
[WizardPage] Document loaded successfully: {
  documentId: '81jJnk3D0CFJ4kQje554',
  title: 'New Gemini AI Tools Test',
  stageCount: 0,
  validatedStageIds: []
}
 GET /w/gemini-test/81jJnk3D0CFJ4kQje554 200 in 146ms
 GET /w/gemini-test/81jJnk3D0CFJ4kQje554 200 in 197ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:47:22.594Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled /api/documents/save in 153ms (1345 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:47:26.609Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '81jJnk3D0CFJ4kQje554',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: false,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1750016846611_wsarx6kdh',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[DocumentPersistence] Document updated successfully { documentId: '81jJnk3D0CFJ4kQje554' }
 POST /api/documents/save 200 in 803ms
 ✓ Compiled /api/wizard/execute in 304ms (1507 modules)
Watchpack Error (initial scan): Error: ENOTDIR: not a directory, scandir '/usr/local/bin/node'
[runAiStage] Starting with new SDK
[runAiStage] Starting with params: {
  hasPromptTemplate: true,
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  stageOutputType: 'text',
  hasAiRedoNotes: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  groundingSettings: undefined,
  googleSearchEnabled: undefined,
  googleSearchThreshold: undefined,
  streamingEnabled: undefined
}
[runAiStage] Filled prompt length: 69
[runAiStage] First 200 chars of filled prompt: test

Please solve this step by step and show your reasoning process.
[runAiStage] About to call aiStageExecutionFlow with input: {
  promptLength: 69,
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  hasSystemInstructions: false,
  hasChatHistory: false,
  hasThinkingSettings: true,
  hasToolNames: false,
  forceGoogleSearchGrounding: false,
  hasGroundingSettings: false,
  googleSearchEnabled: undefined
}
[AI Stage Flow Enhanced] Starting with input: {
  model: 'gemini-2.5-pro-preview-03-25',
  hasTools: false,
  hasGrounding: false,
  forceGoogleSearchGrounding: false,
  hasThinking: true,
  isStreaming: undefined,
  promptTemplate: 'test\n\nPlease solve this step by step and show your reasoning process....',
  chatHistory: 'none',
  groundingSettings: undefined,
  googleSearchSettings: undefined
}
🚨🚨🚨 === GOOGLE SEARCH GROUNDING DEBUG === 🚨🚨🚨
🔍 forceGoogleSearchGrounding: false
🔍 groundingSettings?.googleSearch?.enabled: undefined
🔍 Full groundingSettings object: undefined
🚨🚨🚨 ================================== 🚨🚨🚨
[AI Stage Flow Enhanced] Chat history built: {
  hasExistingHistory: false,
  currentPromptParts: 1,
  callHistoryLength: 1,
  promptTemplateLength: 69
}
[AI Stage Flow Enhanced] Generation path decision: {
  shouldUseStreaming: true,
  streamingEnabled: undefined,
  hasHistory: true,
  hasTools: false,
  googleSearchEnabled: undefined,
  modelUsed: 'gemini-2.5-pro-preview-03-25'
}
🔧🔧🔧 FINAL API REQUEST TOOLS CHECK 🔧🔧🔧
📋 generateOptions.tools: []
📋 generateOptions.config: {
  "temperature": 0.7,
  "thinkingConfig": {
    "includeThoughts": true,
    "thinkingBudget": 8192
  }
}
📊 Total tools count: 0
❌❌❌ NO GOOGLE SEARCH GROUNDING CONFIGURED ❌❌❌
🔧🔧🔧 ================================= 🔧🔧🔧
[AI Stage Flow Enhanced] Streaming iteration 1/5
[AI Stage Flow Enhanced] ===== API REQUEST DETAILS =====
[AI Stage Flow Enhanced] Full API Request Configuration: {
  model: 'gemini-2.5-pro-preview-03-25',
  temperature: 0.7,
  hasTools: false,
  toolsCount: 0,
  toolNames: [],
  hasGoogleSearchTool: false,
  systemInstruction: undefined,
  callHistoryLength: 1,
  fullCallHistory: [ { role: 'user', parts: [Array] } ],
  forceGoogleSearchGrounding: false
}
[AI Stage Flow Enhanced] Complete Google API Request: {
  "model": "gemini-2.5-pro-preview-03-25",
  "config": {
    "temperature": 0.7,
    "thinkingConfig": {
      "includeThoughts": true,
      "thinkingBudget": 8192
    }
  },
  "tools": [],
  "messages": [
    {
      "role": "user",
      "parts": [
        {
          "text": "test\n\nPlease solve this step by step and show your reasoning process."
        }
      ]
    }
  ]
}
[AI Stage Flow Enhanced] Using streaming generation with @google/genai
🌊 [Direct Gemini] Starting streaming generation
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:47:31.502Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '81jJnk3D0CFJ4kQje554',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: false,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1750016851503_qwcoytrm7',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[DocumentPersistence] Document updated successfully { documentId: '81jJnk3D0CFJ4kQje554' }
 POST /api/documents/save 200 in 561ms
[AI Stage Flow Enhanced] ===== API RESPONSE DETAILS =====
[AI Stage Flow Enhanced] Raw API Response Summary: {
  hasContent: true,
  contentLength: 1998,
  contentPreview: 'Okay, I will treat "test" as a request to confirm my operational status and demonstrate my ability to follow instructions, including providing a step-by-step reasoning process.\n' +
    '\n' +
    `Here's how I'm "solvin...`,
  hasGroundingMetadata: false,
  groundingMetadataKeys: [],
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasUsageMetadata: true,
  modelVersion: 'models/gemini-2.5-pro-preview-05-06'
}
[AI Stage Flow Enhanced] Complete Google API Response: {
  "content": "Okay, I will treat \"test\" as a request to confirm my operational status and demonstrate my ability to follow instructions, including providing a step-by-step reasoning process.\n\nHere's how I'm \"solving\" your request:\n\n1.  **Step 1: Receive and Acknowledge Input.**\n    *   **Action:** I received your input: \"test\".\n    *   **Reasoning:** This is the initial stage of processing any request – confirming I've 'heard' you.\n\n2.  **Step 2: Interpret the Intent.**\n    *   **Action:** I interpret \"test\" in this context as a prompt to verify that I am functioning correctly and can respond. It's not a problem requiring a complex solution in itself, but rather a check of my system's responsiveness and ability to follow instructions.\n    *   **Reasoning:** Users often use \"test\" or similar simple inputs to ensure a system is online and responsive before providing a more complex query. The additional instruction \"Please solve this step by step and show your reasoning process\" indicates you also want to see *how* I process even a simple command.\n\n3.  **Step 3: Formulate a Confirmation Response that Adheres to Instructions.**\n    *   **Action:** I am generating a response that (a) confirms the test is successful and (b) breaks down my process for arriving at this confirmation, as requested.\n    *   **Reasoning:** The goal of a \"test\" input is usually to receive a positive confirmation. The specific instructions require me to also explain my internal \"thought\" process.\n\n4.  **Step 4: Provide Confirmation and Offer Further Assistance.**\n    *   **Action:** Conclude with a clear statement that the test is successful and indicate readiness for further interaction.\n    *   **Reasoning:** This completes the \"test\" cycle and invites you to proceed with your actual intended task or question.\n\n**Conclusion of the \"test\":**\n\nTest successful! I am operational and have followed your instructions to provide a step-by-step reasoning process for this interaction.\n\nWhat can I help you with next?",
  "groundingSources": [],
  "usageMetadata": {
    "promptTokenCount": 15,
    "candidatesTokenCount": 450,
    "totalTokenCount": 1675,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 15
      }
    ],
    "thoughtsTokenCount": 1210
  },
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": " you with next?"
          }
        ],
        "role": "model"
      },
      "finishReason": "STOP",
      "index": 0
    }
  ],
  "modelVersion": "models/gemini-2.5-pro-preview-05-06"
}
[AI Stage Flow Enhanced] ===== NO GOOGLE SEARCH GROUNDING FOUND =====
[AI Stage Flow Enhanced] ❌ Google Search Grounding NOT working - response has no grounding data
[AI Stage Flow Enhanced] This might indicate:
[AI Stage Flow Enhanced] 1. Google Search grounding is not properly configured
[AI Stage Flow Enhanced] 2. The model did not need to search for this query
[AI Stage Flow Enhanced] 3. There was an issue with the grounding service
[runAiStage] AI execution completed. Result keys: [
  'content',
  'thinkingSteps',
  'outputImages',
  'updatedChatHistory',
  'groundingSources',
  'groundingMetadata',
  'functionCalls',
  'codeExecutionResults'
]
[runAiStage] AI execution result: {
  hasContent: true,
  contentType: 'string',
  contentLength: 1998,
  hasGroundingMetadata: false,
  hasGroundingSources: false,
  groundingSourcesCount: 0,
  hasThinkingSteps: true,
  thinkingStepsCount: 1,
  hasUpdatedChatHistory: true,
  chatHistoryLength: 1
}
 POST /api/wizard/execute 200 in 18423ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: '81jJnk3D0CFJ4kQje554',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: false,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: undefined,
  effectiveUserId: 'server_user_1750016869887_iut3uxonu',
  wasGenerated: true
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Getting document { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Updating document { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[FirestoreAdapter] Document updated { collection: 'documents', id: '81jJnk3D0CFJ4kQje554' }
[DocumentPersistence] Document updated successfully { documentId: '81jJnk3D0CFJ4kQje554' }
 POST /api/documents/save 200 in 199ms
 ✓ Compiled in 158ms (1507 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:48:18.963Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:48:19.116Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'chat-mode-test',
    'code-execution-python',
    'image-understanding-test',
    'document-understanding-test',
    'multiple-url-grounding',
    'function-calling-weather',
    'combined-features-test',
    'function-calling-unit-converter',
    'thinking-mode-test',
    'function-calling-calculator',
    'final-summary',
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'streaming-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'chat-mode-test',
    'code-execution-python',
    'image-understanding-test',
    'document-understanding-test',
    'multiple-url-grounding',
    'function-calling-weather',
    'combined-features-test',
    'function-calling-unit-converter',
    'thinking-mode-test',
    'function-calling-calculator',
    'final-summary',
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'streaming-test'
  ]
}
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:48:19.437Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 592ms
 ✓ Compiled /favicon.ico in 183ms (1509 modules)
 GET /favicon.ico 200 in 206ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:48:22.600Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document updated successfully { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
 POST /api/documents/save 200 in 604ms
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document updated successfully { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
 POST /api/documents/save 200 in 285ms
 ✓ Compiled in 256ms (1327 modules)
 ✓ Compiled in 196ms (877 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:51:54.900Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'combined-features-test',
    'grounding-url-context',
    'code-execution-python',
    'function-calling-weather',
    'multiple-url-grounding',
    'final-summary',
    'function-calling-calculator',
    'grounding-google-search',
    'chat-mode-test',
    'function-calling-unit-converter',
    'image-understanding-test',
    'test-title',
    'document-understanding-test',
    'streaming-test',
    'thinking-mode-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'combined-features-test',
    'grounding-url-context',
    'code-execution-python',
    'function-calling-weather',
    'multiple-url-grounding',
    'final-summary',
    'function-calling-calculator',
    'grounding-google-search',
    'chat-mode-test',
    'function-calling-unit-converter',
    'image-understanding-test',
    'test-title',
    'document-understanding-test',
    'streaming-test',
    'thinking-mode-test'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 428ms
 ✓ Compiled /favicon.ico in 150ms (1343 modules)
 GET /favicon.ico 200 in 209ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:51:55.493Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 889ms (2208 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:53:16.858Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'combined-features-test',
    'document-understanding-test',
    'grounding-google-search',
    'function-calling-unit-converter',
    'test-title',
    'final-summary',
    'thinking-mode-test',
    'chat-mode-test',
    'multiple-url-grounding',
    'code-execution-python',
    'image-understanding-test',
    'function-calling-weather',
    'function-calling-calculator',
    'streaming-test',
    'grounding-url-context'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'combined-features-test',
    'document-understanding-test',
    'grounding-google-search',
    'function-calling-unit-converter',
    'test-title',
    'final-summary',
    'thinking-mode-test',
    'chat-mode-test',
    'multiple-url-grounding',
    'code-execution-python',
    'image-understanding-test',
    'function-calling-weather',
    'function-calling-calculator',
    'streaming-test',
    'grounding-url-context'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 381ms
 ✓ Compiled /favicon.ico in 152ms (1345 modules)
 GET /favicon.ico 200 in 215ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:53:17.361Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 356ms (2220 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:53:21.911Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'grounding-google-search',
    'code-execution-python',
    'thinking-mode-test',
    'chat-mode-test',
    'document-understanding-test',
    'image-understanding-test',
    'function-calling-calculator',
    'combined-features-test',
    'test-title',
    'final-summary',
    'grounding-url-context',
    'multiple-url-grounding',
    'function-calling-weather',
    'streaming-test',
    'function-calling-unit-converter'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'grounding-google-search',
    'code-execution-python',
    'thinking-mode-test',
    'chat-mode-test',
    'document-understanding-test',
    'image-understanding-test',
    'function-calling-calculator',
    'combined-features-test',
    'test-title',
    'final-summary',
    'grounding-url-context',
    'multiple-url-grounding',
    'function-calling-weather',
    'streaming-test',
    'function-calling-unit-converter'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 360ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:53:22.351Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 372ms (2220 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:53:38.514Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'final-summary',
    'chat-mode-test',
    'function-calling-calculator',
    'combined-features-test',
    'streaming-test',
    'grounding-google-search',
    'thinking-mode-test',
    'document-understanding-test',
    'multiple-url-grounding',
    'function-calling-weather',
    'code-execution-python',
    'grounding-url-context',
    'function-calling-unit-converter',
    'test-title',
    'image-understanding-test'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'final-summary',
    'chat-mode-test',
    'function-calling-calculator',
    'combined-features-test',
    'streaming-test',
    'grounding-google-search',
    'thinking-mode-test',
    'document-understanding-test',
    'multiple-url-grounding',
    'function-calling-weather',
    'code-execution-python',
    'grounding-url-context',
    'function-calling-unit-converter',
    'test-title',
    'image-understanding-test'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 394ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:53:39.134Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 334ms (2220 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:53:44.088Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'grounding-url-context',
    'combined-features-test',
    'function-calling-unit-converter',
    'chat-mode-test',
    'image-understanding-test',
    'function-calling-calculator',
    'code-execution-python',
    'test-title',
    'document-understanding-test',
    'thinking-mode-test',
    'grounding-google-search',
    'function-calling-weather',
    'final-summary',
    'streaming-test',
    'multiple-url-grounding'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'grounding-url-context',
    'combined-features-test',
    'function-calling-unit-converter',
    'chat-mode-test',
    'image-understanding-test',
    'function-calling-calculator',
    'code-execution-python',
    'test-title',
    'document-understanding-test',
    'thinking-mode-test',
    'grounding-google-search',
    'function-calling-weather',
    'final-summary',
    'streaming-test',
    'multiple-url-grounding'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 326ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:53:44.532Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 236ms (2220 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:53:49.927Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'image-understanding-test',
    'function-calling-calculator',
    'grounding-google-search',
    'function-calling-unit-converter',
    'test-title',
    'grounding-url-context',
    'code-execution-python',
    'chat-mode-test',
    'combined-features-test',
    'document-understanding-test',
    'multiple-url-grounding',
    'function-calling-weather',
    'thinking-mode-test',
    'streaming-test',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'image-understanding-test',
    'function-calling-calculator',
    'grounding-google-search',
    'function-calling-unit-converter',
    'test-title',
    'grounding-url-context',
    'code-execution-python',
    'chat-mode-test',
    'combined-features-test',
    'document-understanding-test',
    'multiple-url-grounding',
    'function-calling-weather',
    'thinking-mode-test',
    'streaming-test',
    'final-summary'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 350ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:53:50.362Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 546ms (2206 modules)
 ✓ Compiled in 197ms (2206 modules)
 ✓ Compiled /api/documents/save in 215ms (1345 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:54:13.206Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[DocumentPersistence] STEP 1: Starting document save operation {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  workflowId: 'gemini-tools-test',
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  stageStatesCount: 15,
  hasUserId: true,
  isNewDocument: false
}
[DocumentPersistence] STEP 2: Validation passed
[DocumentPersistence] STEP 3: Determined user ID {
  originalUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  effectiveUserId: 'n3eRvofEdpVAMI6Bez2FAPL4MF53',
  wasGenerated: false
}
[DocumentPersistence] STEP 4: Cleaning stage states for Firestore
[DocumentPersistence] STEP 5: Stage states cleaned {
  originalKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  originalCount: 15,
  cleanedKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ],
  cleanedCount: 15
}
[DocumentPersistence] STEP 6: Updating EXISTING document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Updating document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document updated { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document updated successfully { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
 POST /api/documents/save 200 in 756ms
 ✓ Compiled in 141ms (877 modules)
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'test-title',
    'grounding-google-search',
    'grounding-url-context',
    'multiple-url-grounding',
    'thinking-mode-test',
    'function-calling-calculator',
    'function-calling-weather',
    'function-calling-unit-converter',
    'code-execution-python',
    'streaming-test',
    'chat-mode-test',
    'image-understanding-test',
    'document-understanding-test',
    'combined-features-test',
    'final-summary'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 161ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:54:17.854Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 139ms (877 modules)
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'document-understanding-test',
    'code-execution-python',
    'streaming-test',
    'grounding-url-context',
    'function-calling-calculator',
    'grounding-google-search',
    'function-calling-unit-converter',
    'test-title',
    'chat-mode-test',
    'combined-features-test',
    'image-understanding-test',
    'multiple-url-grounding',
    'function-calling-weather',
    'thinking-mode-test',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'document-understanding-test',
    'code-execution-python',
    'streaming-test',
    'grounding-url-context',
    'function-calling-calculator',
    'grounding-google-search',
    'function-calling-unit-converter',
    'test-title',
    'chat-mode-test',
    'combined-features-test',
    'image-understanding-test',
    'multiple-url-grounding',
    'function-calling-weather',
    'thinking-mode-test',
    'final-summary'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 112ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:54:19.516Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 154ms (877 modules)
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'document-understanding-test',
    'code-execution-python',
    'streaming-test',
    'grounding-url-context',
    'function-calling-calculator',
    'grounding-google-search',
    'function-calling-unit-converter',
    'test-title',
    'chat-mode-test',
    'combined-features-test',
    'image-understanding-test',
    'multiple-url-grounding',
    'function-calling-weather',
    'thinking-mode-test',
    'final-summary'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'document-understanding-test',
    'code-execution-python',
    'streaming-test',
    'grounding-url-context',
    'function-calling-calculator',
    'grounding-google-search',
    'function-calling-unit-converter',
    'test-title',
    'chat-mode-test',
    'combined-features-test',
    'image-understanding-test',
    'multiple-url-grounding',
    'function-calling-weather',
    'thinking-mode-test',
    'final-summary'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 216ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:54:31.740Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 407ms (2220 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:54:32.221Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'final-summary',
    'function-calling-unit-converter',
    'image-understanding-test',
    'function-calling-weather',
    'combined-features-test',
    'code-execution-python',
    'test-title',
    'grounding-google-search',
    'thinking-mode-test',
    'document-understanding-test',
    'grounding-url-context',
    'chat-mode-test',
    'streaming-test',
    'multiple-url-grounding',
    'function-calling-calculator'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'final-summary',
    'function-calling-unit-converter',
    'image-understanding-test',
    'function-calling-weather',
    'combined-features-test',
    'code-execution-python',
    'test-title',
    'grounding-google-search',
    'thinking-mode-test',
    'document-understanding-test',
    'grounding-url-context',
    'chat-mode-test',
    'streaming-test',
    'multiple-url-grounding',
    'function-calling-calculator'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 411ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:54:32.680Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
 ✓ Compiled in 1091ms (2257 modules)
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:54:45.535Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
[WizardPage] Starting page load { shortName: 'gemini-test', documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[WizardPage] Loading existing document: K06ZrHBjmgLyOodBm7Qh
[DocumentPersistence] Loading document { documentId: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Getting document { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[FirestoreAdapter] Document retrieved { collection: 'documents', id: 'K06ZrHBjmgLyOodBm7Qh' }
[DocumentPersistence] Document loaded successfully {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageStatesCount: 15,
  stageStatesKeys: [
    'streaming-test',
    'function-calling-weather',
    'grounding-url-context',
    'multiple-url-grounding',
    'image-understanding-test',
    'chat-mode-test',
    'function-calling-unit-converter',
    'grounding-google-search',
    'combined-features-test',
    'document-understanding-test',
    'thinking-mode-test',
    'final-summary',
    'code-execution-python',
    'function-calling-calculator',
    'test-title'
  ]
}
[WizardPage] Document loaded successfully: {
  documentId: 'K06ZrHBjmgLyOodBm7Qh',
  title: 'test',
  stageCount: 15,
  validatedStageIds: [
    'streaming-test',
    'function-calling-weather',
    'grounding-url-context',
    'multiple-url-grounding',
    'image-understanding-test',
    'chat-mode-test',
    'function-calling-unit-converter',
    'grounding-google-search',
    'combined-features-test',
    'document-understanding-test',
    'thinking-mode-test',
    'final-summary',
    'code-execution-python',
    'function-calling-calculator',
    'test-title'
  ]
}
 GET /w/gemini-test/K06ZrHBjmgLyOodBm7Qh 200 in 374ms
[FIREBASE INIT] Configuration loaded: {
  projectId: 'franzai-writer',
  authDomain: 'franzai-writer.firebaseapp.com',
  useEmulator: 'false',
  isServer: true,
  timestamp: '2025-06-15T19:54:46.038Z'
}
[FIREBASE INIT] WARNING: Using PRODUCTION Firebase!
