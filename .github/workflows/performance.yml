name: Performance Monitoring

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v11
      with:
        urls: |
          http://localhost:3000
        uploadArtifacts: true
        temporaryPublicStorage: true
        runs: 3
        
  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run comprehensive bundle analysis
      run: npm run bundle:report
    
    - name: Check bundle size limits
      run: npm run bundle:size
      continue-on-error: true
    
    - name: Upload bundle analysis reports
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis-reports
        path: |
          bundle-analysis/
          .knip-report.json
        retention-days: 30
    
    - name: Comment PR with bundle analysis
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Find the most recent bundle report
          const reportsDir = 'bundle-analysis/reports';
          if (fs.existsSync(reportsDir)) {
            const files = fs.readdirSync(reportsDir)
              .filter(file => file.startsWith('bundle-report-') && file.endsWith('.json'))
              .sort()
              .reverse();
            
            if (files.length > 0) {
              const reportPath = path.join(reportsDir, files[0]);
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              
              const comment = `## 📦 Bundle Analysis Report
              
              **Build Hash:** \`${report.buildHash}\`
              **Total Bundle Size:** ${report.bundleSize.formatted}
              **Chunks:** ${report.chunks.length}
              **Assets:** ${report.assets.length}
              
              ### Top Dependencies by Size
              ${Object.entries(report.dependencies)
                .sort(([,a], [,b]) => b.size - a.size)
                .slice(0, 10)
                .map(([name, data]) => `- **${name}**: ${Math.round(data.size / 1024)}KB`)
                .join('\n')}
              
              ${report.warnings.length > 0 ? `### ⚠️ Warnings\n${report.warnings.map(w => `- ${w}`).join('\n')}` : ''}
              ${report.errors.length > 0 ? `### ❌ Errors\n${report.errors.map(e => `- ${e}`).join('\n')}` : ''}
              
              <details>
              <summary>📊 Full Bundle Analysis</summary>
              
              View the complete analysis in the workflow artifacts.
              </details>`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          }