{
  "id": "recipe-seo-optimized",
  "shortName": "recipe",
  "name": "SEO Optimized Cooking Recipe",
  "description": "Create a detailed, SEO-friendly cooking recipe with AI assistance.",
  "config": {
    "setTitleFromStageOutput": "dish-name",
    "finalOutputStageId": "full-recipe-compilation",
    "showThinking": false
  },
  "stages": [
    {
      "id": "dish-name",
      "title": "Dish Name",
      "description": "What is the name of your delicious dish?",
      "inputType": "textarea",
      "outputType": "text",
      "dependencies": [],
      "autoRun": false,
      "showThinking": false
    },
    {
      "id": "image-analysis",
      "title": "Analyze Dish Image (Optional)",
      "description": "Upload an image of your dish. AI will analyze it to understand its appearance, ingredients, and presentation. This can help refine the recipe details.",
      "inputType": "image",
      "outputType": "json",
      "dependencies": ["dish-name"],
      "promptTemplate": "Analyze the provided image of '{{dish-name.output}}'. Describe the dish's appearance, visible ingredients, and overall presentation. If possible, identify key components and their arrangement. Output as a JSON object with a key 'imageDescription' (string) and 'identifiedObjects' (array of strings).",
      "model": "googleai/gemini-2.0-flash-exp",
      "autoRun": false,
      "showThinking": false
    },
    {
      "id": "document-analysis",
      "title": "Analyze Document (Optional)",
      "description": "Upload a document (e.g., PDF, DOCX) containing supplementary information, like a base recipe, nutritional information, or cooking techniques. AI will extract relevant text.",
      "inputType": "document",
      "outputType": "json",
      "dependencies": ["dish-name"],
      "promptTemplate": "The user has uploaded a document named '{{document-analysis.userInput.documentName}}' (MIME type: {{document-analysis.userInput.documentType}}) related to '{{dish-name.output}}'. Please analyze this document (available via the provided file URI) and extract key information such as ingredients, instructions, or nutritional facts. Summarize your findings. Output as a JSON object with keys 'extractedTextSummary' (string) and 'detailedAnalysis' (string).",
      "model": "googleai/gemini-2.0-flash-exp",
      "autoRun": false,
      "showThinking": false
    },
    {
      "id": "cuisine-type",
      "title": "Cuisine Type & Main Ingredients",
      "description": "E.g., Italian, Vegan, Chicken and Broccoli, etc.",
      "inputType": "textarea",
      "outputType": "text",
      "dependencies": ["dish-name", "image-analysis", "document-analysis"],
      "showThinking": false
    },
    {
      "id": "target-audience-recipe",
      "title": "Target Audience for Recipe",
      "description": "Who is this recipe for? Any dietary considerations?",
      "inputType": "form",
      "formFields": [
        { "name": "audienceDescription", "label": "Audience Description", "type": "textarea", "placeholder": "e.g., Busy families, beginner cooks, gluten-free" },
        { "name": "dietaryRestrictions", "label": "Specific Dietary Notes", "type": "textarea", "placeholder": "e.g., Nut-free, dairy-free option available" }
      ],
      "outputType": "json",
      "dependencies": ["dish-name"],
      "showThinking": false
    },
    {
      "id": "seo-keywords-recipe",
      "title": "Suggest SEO Keywords",
      "description": "AI will suggest relevant SEO keywords for your recipe.",
      "inputType": "none",
      "promptTemplate": "Based on the dish named '{{dish-name.output}}' of cuisine type '{{cuisine-type.output}}', suggest 5-7 relevant SEO keywords for a recipe blog post.\nFormat your response as a JSON object with a single key 'keywords', which is an array of strings.\nExample: {\"keywords\": [\"easy chicken stir fry recipe\", \"quick weeknight dinner\", \"healthy stir fry sauce\"]}",
      "model": "googleai/gemini-2.0-flash-exp",
      "temperature": 0.7,
      "outputType": "json",
      "dependencies": ["dish-name", "cuisine-type"],
      "autoRun": true,
      "thinkingSettings": {
        "enabled": true
      },
      "toolNames": ["simpleCalculator"],
      "showThinking": false
    },
    {
      "id": "recipe-tone-selection",
      "title": "Select Recipe Tone",
      "description": "Choose the overall tone and style for your recipe.",
      "inputType": "form",
      "formFields": [
        { "name": "tone", "label": "Recipe Tone", "type": "select", 
          "options": [
            { "value": "Quick & Easy", "label": "Quick & Easy" },
            { "value": "Family Friendly", "label": "Family Friendly" },
            { "value": "Gourmet & Detailed", "label": "Gourmet & Detailed" },
            { "value": "Healthy & Light", "label": "Healthy & Light" },
            { "value": "Budget Friendly", "label": "Budget Friendly" }
          ],
          "defaultValue": "Quick & Easy",
          "placeholder": "Select a tone"
        }
      ],
      "outputType": "json",
      "dependencies": ["dish-name"],
      "showThinking": false
    },
    {
      "id": "recipe-description-generation",
      "title": "Generate Recipe Description",
      "description": "AI will write an engaging introduction for your recipe.",
      "inputType": "none",
      "promptTemplate": "Write a captivating and SEO-friendly introduction (around 100-150 words) for a recipe blog post.\nDish Name: '{{dish-name.output}}'\nCuisine/Main Ingredients: '{{cuisine-type.output}}'\nTarget Audience: {{target-audience-recipe.userInput.audienceDescription}} (Dietary notes: {{target-audience-recipe.userInput.dietaryRestrictions}})\nRecipe Tone: '{{recipe-tone-selection.userInput.tone}}'\nKey SEO Keywords to consider: {{seo-keywords-recipe.output.keywords}}\n{{#if image-analysis.output.imageDescription}}\nImage Analysis Insights: {{image-analysis.output.imageDescription}}\nIdentified Objects in Image: {{join image-analysis.output.identifiedObjects \", \"}}\nUse these insights to enrich the description.\n{{/if}}\n{{#if document-analysis.output.extractedTextSummary}}\nDocument Insights: {{document-analysis.output.extractedTextSummary}}\nIncorporate these insights as well.\n{{/if}}\nThe description should be engaging, make the reader want to try the recipe, and subtly incorporate some of the provided SEO keywords.\nOutput the description in Markdown format. Do not include a title.",
      "temperature": 0.8,
      "outputType": "markdown",
      "dependencies": ["dish-name", "cuisine-type", "target-audience-recipe", "seo-keywords-recipe", "recipe-tone-selection", "image-analysis", "document-analysis"],
      "autoRun": true,
      "showThinking": false
    },
    {
      "id": "ingredients-input",
      "title": "Enter Ingredients",
      "description": "List all ingredients, one per line. E.g., '1 cup flour', '2 large eggs'.",
      "inputType": "textarea",
      "outputType": "text",
      "dependencies": ["dish-name"],
      "showThinking": false
    },
    {
      "id": "instructions-input",
      "title": "Enter Instructions",
      "description": "Provide clear, step-by-step cooking instructions, one step per line.",
      "inputType": "textarea",
      "outputType": "text",
      "dependencies": ["ingredients-input"],
      "showThinking": false
    },
    {
      "id": "preparation-details",
      "title": "Estimate Preparation Details",
      "description": "AI will estimate prep time, cook time, and servings.",
      "inputType": "none",
      "promptTemplate": "Based on the following ingredients and instructions for '{{dish-name.output}}':\nIngredients:\n{{ingredients-input.output}}\n\nInstructions:\n{{instructions-input.output}}\n\nEstimate the preparation time, cooking time, and number of servings.\nFormat your response as a JSON object with keys 'prepTime', 'cookTime', and 'servings'.\nExample: {\"prepTime\": \"15 minutes\", \"cookTime\": \"30 minutes\", \"servings\": \"4 people\"}\nEnsure the output is valid JSON.",
      "model": "googleai/gemini-2.0-flash-exp",
      "temperature": 0.5,
      "outputType": "json",
      "dependencies": ["dish-name", "ingredients-input", "instructions-input"],
      "autoRun": true,
      "showThinking": false
    },
    {
      "id": "full-recipe-compilation",
      "title": "Generate Full Recipe",
      "description": "AI will compile the complete recipe using all provided information.",
      "inputType": "none",
      "promptTemplate": "Compile a full recipe blog post in Markdown format for '{{dish-name.output}}'.\n\nUse the following components:\n1.  **Title**: Use '{{dish-name.output}}' as the main H1 title.\n2.  **Introduction**:\n{{recipe-description-generation.output}}\n3.  **Preparation & Cook Time, Servings**:\n    *   Prep Time: {{preparation-details.output.prepTime}}\n    *   Cook Time: {{preparation-details.output.cookTime}}\n    *   Servings: {{preparation-details.output.servings}}\n4.  **Ingredients**: List the ingredients clearly. Format them as a Markdown list, based on this input:\n{{ingredients-input.output}}\n5.  **Instructions**: Provide clear, step-by-step instructions. Format them as a Markdown numbered list, based on this input:\n{{instructions-input.output}}\n6.  **SEO Keywords (for context, do not list explicitly unless natural):**\n{{seo-keywords-recipe.output.keywords}}\n7.  **Recipe Tone (for context):** {{recipe-tone-selection.userInput.tone}}\n8.  **Target Audience (for context):** {{target-audience-recipe.userInput.audienceDescription}}, Dietary: {{target-audience-recipe.userInput.dietaryRestrictions}}\n{{#if image-analysis.output.imageDescription}}\n9. **Image Analysis Insights (for context, integrate naturally where appropriate):**\n    *   Description: {{image-analysis.output.imageDescription}}\n    *   Identified Objects: {{join image-analysis.output.identifiedObjects \", \"}}\n{{/if}}\n{{#if document-analysis.output.extractedTextSummary}}\n10. **Additional Document Insights (for context, integrate naturally where appropriate):**\n    *   Summary: {{document-analysis.output.extractedTextSummary}}\n{{/if}}\n\nStructure the output as a complete Markdown document. Start with the H1 title. \nEnsure ingredients are formatted as a bulleted list (e.g., * 1 cup flour) and instructions as a numbered list (e.g., 1. Mix flour...). \nDo not include any preamble like \"Here is the recipe:\". Output only the Markdown content for the recipe post.",
      "outputType": "markdown",
      "dependencies": [
        "dish-name",
        "recipe-description-generation",
        "preparation-details",
        "ingredients-input",
        "instructions-input",
        "seo-keywords-recipe",
        "recipe-tone-selection",
        "target-audience-recipe",
        "image-analysis",
        "document-analysis"
      ],
      "autoRun": false,
      "showThinking": false
    },
    {
      "id": "code-execution-test",
      "title": "Code Execution Test",
      "description": "Enter Python code for the AI to execute. For example, 'print(\"Hello World\")' or 'import matplotlib.pyplot as plt; plt.plot([0,1],[0,1]); plt.show()'. Note: Image output display is experimental.",
      "inputType": "textarea",
      "outputType": "text",
      "model": "googleai/gemini-2.0-flash-exp",
      "promptTemplate": "Please execute the following Python code:\n```python\n{{userInput}}\n```\nIf the code generates a plot or image, please make sure to output it.",
      "thinkingSettings": {
        "enabled": true
      },
      "toolNames": ["codeInterpreter"],
      "chatEnabled": true,
      "systemInstructions": "You are a helpful AI assistant. When asked to execute code, provide a brief explanation of what the code does before showing the execution results. If the code generates an image, mention it in your text response.",
      "showThinking": false
    }
  ]
}
